2025-07-27 21:39:02,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-27 21:39:02,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-27 21:39:02,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-27 21:39:02,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-27 21:40:38,941:INFO:PyCaret ClassificationExperiment
2025-07-27 21:40:38,941:INFO:Logging name: clf-default-name
2025-07-27 21:40:38,941:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-27 21:40:38,941:INFO:version 3.3.2
2025-07-27 21:40:38,941:INFO:Initializing setup()
2025-07-27 21:40:38,941:INFO:self.USI: 1d8f
2025-07-27 21:40:38,941:INFO:self._variable_keys: {'X_test', 'html_param', 'fix_imbalance', 'pipeline', '_ml_usecase', 'y_test', 'exp_name_log', 'y_train', 'y', 'fold_shuffle_param', 'is_multiclass', 'seed', 'USI', 'X_train', 'log_plots_param', '_available_plots', 'target_param', 'fold_generator', 'idx', 'X', 'gpu_n_jobs_param', 'exp_id', 'memory', 'n_jobs_param', 'data', 'fold_groups_param', 'logging_param', 'gpu_param'}
2025-07-27 21:40:38,941:INFO:Checking environment
2025-07-27 21:40:38,941:INFO:python_version: 3.10.13
2025-07-27 21:40:38,941:INFO:python_build: ('main', 'Sep 11 2023 13:15:57')
2025-07-27 21:40:38,941:INFO:machine: AMD64
2025-07-27 21:40:38,941:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-27 21:40:38,947:INFO:Memory: svmem(total=16853479424, available=1778507776, percent=89.4, used=15074971648, free=1778507776)
2025-07-27 21:40:38,947:INFO:Physical Core: 16
2025-07-27 21:40:38,948:INFO:Logical Core: 24
2025-07-27 21:40:38,948:INFO:Checking libraries
2025-07-27 21:40:38,948:INFO:System:
2025-07-27 21:40:38,948:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:15:57) [MSC v.1916 64 bit (AMD64)]
2025-07-27 21:40:38,948:INFO:executable: c:\Users\DELL\anaconda3\envs\tf\python.exe
2025-07-27 21:40:38,948:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-27 21:40:38,948:INFO:PyCaret required dependencies:
2025-07-27 21:40:39,329:INFO:                 pip: 24.2
2025-07-27 21:40:39,329:INFO:          setuptools: 75.1.0
2025-07-27 21:40:39,329:INFO:             pycaret: 3.3.2
2025-07-27 21:40:39,329:INFO:             IPython: 8.36.0
2025-07-27 21:40:39,329:INFO:          ipywidgets: 8.1.7
2025-07-27 21:40:39,329:INFO:                tqdm: 4.67.1
2025-07-27 21:40:39,329:INFO:               numpy: 1.26.4
2025-07-27 21:40:39,329:INFO:              pandas: 2.1.4
2025-07-27 21:40:39,329:INFO:              jinja2: 3.1.6
2025-07-27 21:40:39,329:INFO:               scipy: 1.11.4
2025-07-27 21:40:39,329:INFO:              joblib: 1.3.2
2025-07-27 21:40:39,329:INFO:             sklearn: 1.4.2
2025-07-27 21:40:39,329:INFO:                pyod: 2.0.5
2025-07-27 21:40:39,329:INFO:            imblearn: 0.13.0
2025-07-27 21:40:39,329:INFO:   category_encoders: 2.7.0
2025-07-27 21:40:39,329:INFO:            lightgbm: 4.6.0
2025-07-27 21:40:39,329:INFO:               numba: 0.61.2
2025-07-27 21:40:39,329:INFO:            requests: 2.32.3
2025-07-27 21:40:39,329:INFO:          matplotlib: 3.7.5
2025-07-27 21:40:39,329:INFO:          scikitplot: 0.3.7
2025-07-27 21:40:39,329:INFO:         yellowbrick: 1.5
2025-07-27 21:40:39,329:INFO:              plotly: 5.24.1
2025-07-27 21:40:39,329:INFO:    plotly-resampler: Not installed
2025-07-27 21:40:39,329:INFO:             kaleido: 0.2.1
2025-07-27 21:40:39,329:INFO:           schemdraw: 0.15
2025-07-27 21:40:39,329:INFO:         statsmodels: 0.14.4
2025-07-27 21:40:39,329:INFO:              sktime: 0.26.0
2025-07-27 21:40:39,329:INFO:               tbats: 1.1.3
2025-07-27 21:40:39,329:INFO:            pmdarima: 2.0.4
2025-07-27 21:40:39,329:INFO:              psutil: 7.0.0
2025-07-27 21:40:39,329:INFO:          markupsafe: 2.1.3
2025-07-27 21:40:39,329:INFO:             pickle5: Not installed
2025-07-27 21:40:39,329:INFO:         cloudpickle: 2.2.1
2025-07-27 21:40:39,329:INFO:         deprecation: 2.1.0
2025-07-27 21:40:39,329:INFO:              xxhash: 3.5.0
2025-07-27 21:40:39,329:INFO:           wurlitzer: Not installed
2025-07-27 21:40:39,329:INFO:PyCaret optional dependencies:
2025-07-27 21:40:40,822:INFO:                shap: Not installed
2025-07-27 21:40:40,822:INFO:           interpret: Not installed
2025-07-27 21:40:40,822:INFO:                umap: Not installed
2025-07-27 21:40:40,822:INFO:     ydata_profiling: Not installed
2025-07-27 21:40:40,822:INFO:  explainerdashboard: Not installed
2025-07-27 21:40:40,822:INFO:             autoviz: Not installed
2025-07-27 21:40:40,822:INFO:           fairlearn: Not installed
2025-07-27 21:40:40,822:INFO:          deepchecks: Not installed
2025-07-27 21:40:40,822:INFO:             xgboost: 3.0.1
2025-07-27 21:40:40,822:INFO:            catboost: Not installed
2025-07-27 21:40:40,822:INFO:              kmodes: Not installed
2025-07-27 21:40:40,822:INFO:             mlxtend: Not installed
2025-07-27 21:40:40,822:INFO:       statsforecast: Not installed
2025-07-27 21:40:40,822:INFO:        tune_sklearn: Not installed
2025-07-27 21:40:40,822:INFO:                 ray: Not installed
2025-07-27 21:40:40,822:INFO:            hyperopt: Not installed
2025-07-27 21:40:40,822:INFO:              optuna: Not installed
2025-07-27 21:40:40,822:INFO:               skopt: Not installed
2025-07-27 21:40:40,822:INFO:              mlflow: 2.22.0
2025-07-27 21:40:40,822:INFO:              gradio: Not installed
2025-07-27 21:40:40,822:INFO:             fastapi: 0.115.12
2025-07-27 21:40:40,822:INFO:             uvicorn: 0.34.2
2025-07-27 21:40:40,822:INFO:              m2cgen: Not installed
2025-07-27 21:40:40,822:INFO:           evidently: Not installed
2025-07-27 21:40:40,822:INFO:               fugue: Not installed
2025-07-27 21:40:40,822:INFO:           streamlit: 1.45.1
2025-07-27 21:40:40,822:INFO:             prophet: Not installed
2025-07-27 21:40:40,822:INFO:None
2025-07-27 21:40:40,822:INFO:Set up data.
2025-07-28 08:20:05,631:INFO:PyCaret ClassificationExperiment
2025-07-28 08:20:05,632:INFO:Logging name: clf-default-name
2025-07-28 08:20:05,632:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-28 08:20:05,632:INFO:version 3.3.2
2025-07-28 08:20:05,633:INFO:Initializing setup()
2025-07-28 08:20:05,633:INFO:self.USI: a5c4
2025-07-28 08:20:05,633:INFO:self._variable_keys: {'X_test', 'html_param', 'fix_imbalance', 'pipeline', '_ml_usecase', 'y_test', 'exp_name_log', 'y_train', 'y', 'fold_shuffle_param', 'is_multiclass', 'seed', 'USI', 'X_train', 'log_plots_param', '_available_plots', 'target_param', 'fold_generator', 'idx', 'X', 'gpu_n_jobs_param', 'exp_id', 'memory', 'n_jobs_param', 'data', 'fold_groups_param', 'logging_param', 'gpu_param'}
2025-07-28 08:20:05,633:INFO:Checking environment
2025-07-28 08:20:05,633:INFO:python_version: 3.10.13
2025-07-28 08:20:05,633:INFO:python_build: ('main', 'Sep 11 2023 13:15:57')
2025-07-28 08:20:05,633:INFO:machine: AMD64
2025-07-28 08:20:05,633:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-28 08:20:05,639:INFO:Memory: svmem(total=16853479424, available=2117287936, percent=87.4, used=14736191488, free=2117287936)
2025-07-28 08:20:05,639:INFO:Physical Core: 16
2025-07-28 08:20:05,640:INFO:Logical Core: 24
2025-07-28 08:20:05,640:INFO:Checking libraries
2025-07-28 08:20:05,640:INFO:System:
2025-07-28 08:20:05,640:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:15:57) [MSC v.1916 64 bit (AMD64)]
2025-07-28 08:20:05,640:INFO:executable: c:\Users\DELL\anaconda3\envs\tf\python.exe
2025-07-28 08:20:05,640:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-28 08:20:05,640:INFO:PyCaret required dependencies:
2025-07-28 08:20:05,641:INFO:                 pip: 24.2
2025-07-28 08:20:05,641:INFO:          setuptools: 75.1.0
2025-07-28 08:20:05,641:INFO:             pycaret: 3.3.2
2025-07-28 08:20:05,641:INFO:             IPython: 8.36.0
2025-07-28 08:20:05,641:INFO:          ipywidgets: 8.1.7
2025-07-28 08:20:05,641:INFO:                tqdm: 4.67.1
2025-07-28 08:20:05,641:INFO:               numpy: 1.26.4
2025-07-28 08:20:05,641:INFO:              pandas: 2.1.4
2025-07-28 08:20:05,641:INFO:              jinja2: 3.1.6
2025-07-28 08:20:05,641:INFO:               scipy: 1.11.4
2025-07-28 08:20:05,641:INFO:              joblib: 1.3.2
2025-07-28 08:20:05,641:INFO:             sklearn: 1.4.2
2025-07-28 08:20:05,641:INFO:                pyod: 2.0.5
2025-07-28 08:20:05,642:INFO:            imblearn: 0.13.0
2025-07-28 08:20:05,642:INFO:   category_encoders: 2.7.0
2025-07-28 08:20:05,642:INFO:            lightgbm: 4.6.0
2025-07-28 08:20:05,642:INFO:               numba: 0.61.2
2025-07-28 08:20:05,642:INFO:            requests: 2.32.3
2025-07-28 08:20:05,642:INFO:          matplotlib: 3.7.5
2025-07-28 08:20:05,642:INFO:          scikitplot: 0.3.7
2025-07-28 08:20:05,642:INFO:         yellowbrick: 1.5
2025-07-28 08:20:05,642:INFO:              plotly: 5.24.1
2025-07-28 08:20:05,642:INFO:    plotly-resampler: Not installed
2025-07-28 08:20:05,642:INFO:             kaleido: 0.2.1
2025-07-28 08:20:05,642:INFO:           schemdraw: 0.15
2025-07-28 08:20:05,642:INFO:         statsmodels: 0.14.4
2025-07-28 08:20:05,642:INFO:              sktime: 0.26.0
2025-07-28 08:20:05,642:INFO:               tbats: 1.1.3
2025-07-28 08:20:05,642:INFO:            pmdarima: 2.0.4
2025-07-28 08:20:05,642:INFO:              psutil: 7.0.0
2025-07-28 08:20:05,642:INFO:          markupsafe: 2.1.3
2025-07-28 08:20:05,642:INFO:             pickle5: Not installed
2025-07-28 08:20:05,642:INFO:         cloudpickle: 2.2.1
2025-07-28 08:20:05,642:INFO:         deprecation: 2.1.0
2025-07-28 08:20:05,642:INFO:              xxhash: 3.5.0
2025-07-28 08:20:05,642:INFO:           wurlitzer: Not installed
2025-07-28 08:20:05,642:INFO:PyCaret optional dependencies:
2025-07-28 08:20:05,642:INFO:                shap: Not installed
2025-07-28 08:20:05,642:INFO:           interpret: Not installed
2025-07-28 08:20:05,642:INFO:                umap: Not installed
2025-07-28 08:20:05,642:INFO:     ydata_profiling: Not installed
2025-07-28 08:20:05,642:INFO:  explainerdashboard: Not installed
2025-07-28 08:20:05,642:INFO:             autoviz: Not installed
2025-07-28 08:20:05,642:INFO:           fairlearn: Not installed
2025-07-28 08:20:05,642:INFO:          deepchecks: Not installed
2025-07-28 08:20:05,642:INFO:             xgboost: 3.0.1
2025-07-28 08:20:05,642:INFO:            catboost: Not installed
2025-07-28 08:20:05,642:INFO:              kmodes: Not installed
2025-07-28 08:20:05,642:INFO:             mlxtend: Not installed
2025-07-28 08:20:05,642:INFO:       statsforecast: Not installed
2025-07-28 08:20:05,642:INFO:        tune_sklearn: Not installed
2025-07-28 08:20:05,642:INFO:                 ray: Not installed
2025-07-28 08:20:05,642:INFO:            hyperopt: Not installed
2025-07-28 08:20:05,642:INFO:              optuna: Not installed
2025-07-28 08:20:05,642:INFO:               skopt: Not installed
2025-07-28 08:20:05,642:INFO:              mlflow: 2.22.0
2025-07-28 08:20:05,643:INFO:              gradio: Not installed
2025-07-28 08:20:05,643:INFO:             fastapi: 0.115.12
2025-07-28 08:20:05,643:INFO:             uvicorn: 0.34.2
2025-07-28 08:20:05,643:INFO:              m2cgen: Not installed
2025-07-28 08:20:05,643:INFO:           evidently: Not installed
2025-07-28 08:20:05,643:INFO:               fugue: Not installed
2025-07-28 08:20:05,643:INFO:           streamlit: 1.45.1
2025-07-28 08:20:05,643:INFO:             prophet: Not installed
2025-07-28 08:20:05,643:INFO:None
2025-07-28 08:20:05,643:INFO:Set up data.
2025-07-28 08:34:03,842:INFO:PyCaret ClassificationExperiment
2025-07-28 08:34:03,843:INFO:Logging name: clf-default-name
2025-07-28 08:34:03,843:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-28 08:34:03,843:INFO:version 3.3.2
2025-07-28 08:34:03,843:INFO:Initializing setup()
2025-07-28 08:34:03,843:INFO:self.USI: e99b
2025-07-28 08:34:03,843:INFO:self._variable_keys: {'X_test', 'html_param', 'fix_imbalance', 'pipeline', '_ml_usecase', 'y_test', 'exp_name_log', 'y_train', 'y', 'fold_shuffle_param', 'is_multiclass', 'seed', 'USI', 'X_train', 'log_plots_param', '_available_plots', 'target_param', 'fold_generator', 'idx', 'X', 'gpu_n_jobs_param', 'exp_id', 'memory', 'n_jobs_param', 'data', 'fold_groups_param', 'logging_param', 'gpu_param'}
2025-07-28 08:34:03,843:INFO:Checking environment
2025-07-28 08:34:03,843:INFO:python_version: 3.10.13
2025-07-28 08:34:03,843:INFO:python_build: ('main', 'Sep 11 2023 13:15:57')
2025-07-28 08:34:03,843:INFO:machine: AMD64
2025-07-28 08:34:03,843:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-28 08:34:03,847:INFO:Memory: svmem(total=16853479424, available=1036369920, percent=93.9, used=15817109504, free=1036369920)
2025-07-28 08:34:03,847:INFO:Physical Core: 16
2025-07-28 08:34:03,847:INFO:Logical Core: 24
2025-07-28 08:34:03,847:INFO:Checking libraries
2025-07-28 08:34:03,847:INFO:System:
2025-07-28 08:34:03,847:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:15:57) [MSC v.1916 64 bit (AMD64)]
2025-07-28 08:34:03,847:INFO:executable: c:\Users\DELL\anaconda3\envs\tf\python.exe
2025-07-28 08:34:03,847:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-28 08:34:03,847:INFO:PyCaret required dependencies:
2025-07-28 08:34:03,848:INFO:                 pip: 24.2
2025-07-28 08:34:03,848:INFO:          setuptools: 75.1.0
2025-07-28 08:34:03,848:INFO:             pycaret: 3.3.2
2025-07-28 08:34:03,848:INFO:             IPython: 8.36.0
2025-07-28 08:34:03,848:INFO:          ipywidgets: 8.1.7
2025-07-28 08:34:03,848:INFO:                tqdm: 4.67.1
2025-07-28 08:34:03,848:INFO:               numpy: 1.26.4
2025-07-28 08:34:03,848:INFO:              pandas: 2.1.4
2025-07-28 08:34:03,848:INFO:              jinja2: 3.1.6
2025-07-28 08:34:03,848:INFO:               scipy: 1.11.4
2025-07-28 08:34:03,848:INFO:              joblib: 1.3.2
2025-07-28 08:34:03,848:INFO:             sklearn: 1.4.2
2025-07-28 08:34:03,848:INFO:                pyod: 2.0.5
2025-07-28 08:34:03,848:INFO:            imblearn: 0.13.0
2025-07-28 08:34:03,848:INFO:   category_encoders: 2.7.0
2025-07-28 08:34:03,848:INFO:            lightgbm: 4.6.0
2025-07-28 08:34:03,848:INFO:               numba: 0.61.2
2025-07-28 08:34:03,848:INFO:            requests: 2.32.3
2025-07-28 08:34:03,848:INFO:          matplotlib: 3.7.5
2025-07-28 08:34:03,848:INFO:          scikitplot: 0.3.7
2025-07-28 08:34:03,848:INFO:         yellowbrick: 1.5
2025-07-28 08:34:03,848:INFO:              plotly: 5.24.1
2025-07-28 08:34:03,848:INFO:    plotly-resampler: Not installed
2025-07-28 08:34:03,848:INFO:             kaleido: 0.2.1
2025-07-28 08:34:03,848:INFO:           schemdraw: 0.15
2025-07-28 08:34:03,848:INFO:         statsmodels: 0.14.4
2025-07-28 08:34:03,848:INFO:              sktime: 0.26.0
2025-07-28 08:34:03,848:INFO:               tbats: 1.1.3
2025-07-28 08:34:03,848:INFO:            pmdarima: 2.0.4
2025-07-28 08:34:03,848:INFO:              psutil: 7.0.0
2025-07-28 08:34:03,848:INFO:          markupsafe: 2.1.3
2025-07-28 08:34:03,848:INFO:             pickle5: Not installed
2025-07-28 08:34:03,848:INFO:         cloudpickle: 2.2.1
2025-07-28 08:34:03,848:INFO:         deprecation: 2.1.0
2025-07-28 08:34:03,848:INFO:              xxhash: 3.5.0
2025-07-28 08:34:03,848:INFO:           wurlitzer: Not installed
2025-07-28 08:34:03,848:INFO:PyCaret optional dependencies:
2025-07-28 08:34:03,849:INFO:                shap: Not installed
2025-07-28 08:34:03,849:INFO:           interpret: Not installed
2025-07-28 08:34:03,849:INFO:                umap: Not installed
2025-07-28 08:34:03,849:INFO:     ydata_profiling: Not installed
2025-07-28 08:34:03,849:INFO:  explainerdashboard: Not installed
2025-07-28 08:34:03,849:INFO:             autoviz: Not installed
2025-07-28 08:34:03,849:INFO:           fairlearn: Not installed
2025-07-28 08:34:03,849:INFO:          deepchecks: Not installed
2025-07-28 08:34:03,849:INFO:             xgboost: 3.0.1
2025-07-28 08:34:03,849:INFO:            catboost: Not installed
2025-07-28 08:34:03,849:INFO:              kmodes: Not installed
2025-07-28 08:34:03,849:INFO:             mlxtend: Not installed
2025-07-28 08:34:03,849:INFO:       statsforecast: Not installed
2025-07-28 08:34:03,849:INFO:        tune_sklearn: Not installed
2025-07-28 08:34:03,849:INFO:                 ray: Not installed
2025-07-28 08:34:03,849:INFO:            hyperopt: Not installed
2025-07-28 08:34:03,849:INFO:              optuna: Not installed
2025-07-28 08:34:03,849:INFO:               skopt: Not installed
2025-07-28 08:34:03,849:INFO:              mlflow: 2.22.0
2025-07-28 08:34:03,849:INFO:              gradio: Not installed
2025-07-28 08:34:03,849:INFO:             fastapi: 0.115.12
2025-07-28 08:34:03,849:INFO:             uvicorn: 0.34.2
2025-07-28 08:34:03,849:INFO:              m2cgen: Not installed
2025-07-28 08:34:03,849:INFO:           evidently: Not installed
2025-07-28 08:34:03,849:INFO:               fugue: Not installed
2025-07-28 08:34:03,849:INFO:           streamlit: 1.45.1
2025-07-28 08:34:03,849:INFO:             prophet: Not installed
2025-07-28 08:34:03,849:INFO:None
2025-07-28 08:34:03,849:INFO:Set up data.
2025-07-28 08:35:19,498:INFO:PyCaret ClassificationExperiment
2025-07-28 08:35:19,499:INFO:Logging name: clf-default-name
2025-07-28 08:35:19,499:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-28 08:35:19,499:INFO:version 3.3.2
2025-07-28 08:35:19,499:INFO:Initializing setup()
2025-07-28 08:35:19,499:INFO:self.USI: 460b
2025-07-28 08:35:19,499:INFO:self._variable_keys: {'X_test', 'html_param', 'fix_imbalance', 'pipeline', '_ml_usecase', 'y_test', 'exp_name_log', 'y_train', 'y', 'fold_shuffle_param', 'is_multiclass', 'seed', 'USI', 'X_train', 'log_plots_param', '_available_plots', 'target_param', 'fold_generator', 'idx', 'X', 'gpu_n_jobs_param', 'exp_id', 'memory', 'n_jobs_param', 'data', 'fold_groups_param', 'logging_param', 'gpu_param'}
2025-07-28 08:35:19,499:INFO:Checking environment
2025-07-28 08:35:19,500:INFO:python_version: 3.10.13
2025-07-28 08:35:19,500:INFO:python_build: ('main', 'Sep 11 2023 13:15:57')
2025-07-28 08:35:19,500:INFO:machine: AMD64
2025-07-28 08:35:19,500:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-28 08:35:19,506:INFO:Memory: svmem(total=16853479424, available=1449119744, percent=91.4, used=15404359680, free=1449119744)
2025-07-28 08:35:19,506:INFO:Physical Core: 16
2025-07-28 08:35:19,506:INFO:Logical Core: 24
2025-07-28 08:35:19,506:INFO:Checking libraries
2025-07-28 08:35:19,507:INFO:System:
2025-07-28 08:35:19,507:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:15:57) [MSC v.1916 64 bit (AMD64)]
2025-07-28 08:35:19,507:INFO:executable: c:\Users\DELL\anaconda3\envs\tf\python.exe
2025-07-28 08:35:19,507:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-28 08:35:19,507:INFO:PyCaret required dependencies:
2025-07-28 08:35:19,508:INFO:                 pip: 24.2
2025-07-28 08:35:19,508:INFO:          setuptools: 75.1.0
2025-07-28 08:35:19,508:INFO:             pycaret: 3.3.2
2025-07-28 08:35:19,508:INFO:             IPython: 8.36.0
2025-07-28 08:35:19,508:INFO:          ipywidgets: 8.1.7
2025-07-28 08:35:19,508:INFO:                tqdm: 4.67.1
2025-07-28 08:35:19,508:INFO:               numpy: 1.26.4
2025-07-28 08:35:19,508:INFO:              pandas: 2.1.4
2025-07-28 08:35:19,508:INFO:              jinja2: 3.1.6
2025-07-28 08:35:19,508:INFO:               scipy: 1.11.4
2025-07-28 08:35:19,508:INFO:              joblib: 1.3.2
2025-07-28 08:35:19,508:INFO:             sklearn: 1.4.2
2025-07-28 08:35:19,508:INFO:                pyod: 2.0.5
2025-07-28 08:35:19,509:INFO:            imblearn: 0.13.0
2025-07-28 08:35:19,509:INFO:   category_encoders: 2.7.0
2025-07-28 08:35:19,509:INFO:            lightgbm: 4.6.0
2025-07-28 08:35:19,509:INFO:               numba: 0.61.2
2025-07-28 08:35:19,509:INFO:            requests: 2.32.3
2025-07-28 08:35:19,509:INFO:          matplotlib: 3.7.5
2025-07-28 08:35:19,509:INFO:          scikitplot: 0.3.7
2025-07-28 08:35:19,509:INFO:         yellowbrick: 1.5
2025-07-28 08:35:19,509:INFO:              plotly: 5.24.1
2025-07-28 08:35:19,509:INFO:    plotly-resampler: Not installed
2025-07-28 08:35:19,509:INFO:             kaleido: 0.2.1
2025-07-28 08:35:19,509:INFO:           schemdraw: 0.15
2025-07-28 08:35:19,509:INFO:         statsmodels: 0.14.4
2025-07-28 08:35:19,509:INFO:              sktime: 0.26.0
2025-07-28 08:35:19,509:INFO:               tbats: 1.1.3
2025-07-28 08:35:19,509:INFO:            pmdarima: 2.0.4
2025-07-28 08:35:19,509:INFO:              psutil: 7.0.0
2025-07-28 08:35:19,509:INFO:          markupsafe: 2.1.3
2025-07-28 08:35:19,509:INFO:             pickle5: Not installed
2025-07-28 08:35:19,509:INFO:         cloudpickle: 2.2.1
2025-07-28 08:35:19,509:INFO:         deprecation: 2.1.0
2025-07-28 08:35:19,509:INFO:              xxhash: 3.5.0
2025-07-28 08:35:19,509:INFO:           wurlitzer: Not installed
2025-07-28 08:35:19,509:INFO:PyCaret optional dependencies:
2025-07-28 08:35:19,509:INFO:                shap: Not installed
2025-07-28 08:35:19,509:INFO:           interpret: Not installed
2025-07-28 08:35:19,509:INFO:                umap: Not installed
2025-07-28 08:35:19,510:INFO:     ydata_profiling: Not installed
2025-07-28 08:35:19,510:INFO:  explainerdashboard: Not installed
2025-07-28 08:35:19,510:INFO:             autoviz: Not installed
2025-07-28 08:35:19,510:INFO:           fairlearn: Not installed
2025-07-28 08:35:19,510:INFO:          deepchecks: Not installed
2025-07-28 08:35:19,510:INFO:             xgboost: 3.0.1
2025-07-28 08:35:19,510:INFO:            catboost: Not installed
2025-07-28 08:35:19,510:INFO:              kmodes: Not installed
2025-07-28 08:35:19,510:INFO:             mlxtend: Not installed
2025-07-28 08:35:19,510:INFO:       statsforecast: Not installed
2025-07-28 08:35:19,510:INFO:        tune_sklearn: Not installed
2025-07-28 08:35:19,510:INFO:                 ray: Not installed
2025-07-28 08:35:19,510:INFO:            hyperopt: Not installed
2025-07-28 08:35:19,510:INFO:              optuna: Not installed
2025-07-28 08:35:19,510:INFO:               skopt: Not installed
2025-07-28 08:35:19,510:INFO:              mlflow: 2.22.0
2025-07-28 08:35:19,510:INFO:              gradio: Not installed
2025-07-28 08:35:19,510:INFO:             fastapi: 0.115.12
2025-07-28 08:35:19,510:INFO:             uvicorn: 0.34.2
2025-07-28 08:35:19,510:INFO:              m2cgen: Not installed
2025-07-28 08:35:19,510:INFO:           evidently: Not installed
2025-07-28 08:35:19,510:INFO:               fugue: Not installed
2025-07-28 08:35:19,510:INFO:           streamlit: 1.45.1
2025-07-28 08:35:19,510:INFO:             prophet: Not installed
2025-07-28 08:35:19,510:INFO:None
2025-07-28 08:35:19,510:INFO:Set up data.
2025-07-28 08:35:20,046:INFO:Set up folding strategy.
2025-07-28 08:35:20,048:INFO:Set up train/test split.
2025-07-28 08:35:20,850:INFO:Set up index.
2025-07-28 08:35:20,875:INFO:Assigning column types.
2025-07-28 08:35:21,313:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-28 08:35:21,343:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 08:35:21,357:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 08:35:21,406:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 08:35:21,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 08:35:21,435:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 08:35:21,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 08:35:21,450:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 08:35:21,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 08:35:21,452:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-28 08:35:21,476:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 08:35:21,492:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 08:35:21,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 08:35:21,518:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 08:35:21,533:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 08:35:21,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 08:35:21,535:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-28 08:35:21,575:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 08:35:21,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 08:35:21,615:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 08:35:21,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 08:35:21,623:INFO:Preparing preprocessing pipeline...
2025-07-28 08:35:21,681:INFO:Set up label encoding.
2025-07-28 08:35:21,681:INFO:Set up simple imputation.
2025-07-28 08:35:21,835:INFO:Set up encoding of categorical features.
2025-07-28 08:35:21,840:INFO:Set up feature normalization.
2025-07-28 08:35:21,894:INFO:Set up column name cleaning.
2025-07-28 10:50:54,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:50:54,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:50:54,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:50:54,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:50:56,313:INFO:PyCaret ClassificationExperiment
2025-07-28 10:50:56,313:INFO:Logging name: clf-default-name
2025-07-28 10:50:56,313:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-28 10:50:56,313:INFO:version 3.3.2
2025-07-28 10:50:56,313:INFO:Initializing setup()
2025-07-28 10:50:56,313:INFO:self.USI: 628a
2025-07-28 10:50:56,314:INFO:self._variable_keys: {'target_param', 'exp_id', 'y_train', 'gpu_n_jobs_param', 'y_test', 'idx', 'is_multiclass', 'USI', 'X_test', 'X_train', 'seed', 'fold_shuffle_param', 'html_param', 'pipeline', '_ml_usecase', '_available_plots', 'data', 'y', 'logging_param', 'fix_imbalance', 'memory', 'n_jobs_param', 'X', 'fold_generator', 'fold_groups_param', 'gpu_param', 'exp_name_log', 'log_plots_param'}
2025-07-28 10:50:56,314:INFO:Checking environment
2025-07-28 10:50:56,314:INFO:python_version: 3.10.13
2025-07-28 10:50:56,314:INFO:python_build: ('main', 'Sep 11 2023 13:15:57')
2025-07-28 10:50:56,314:INFO:machine: AMD64
2025-07-28 10:50:56,314:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-28 10:50:56,318:INFO:Memory: svmem(total=16853479424, available=2970439680, percent=82.4, used=13883039744, free=2970439680)
2025-07-28 10:50:56,318:INFO:Physical Core: 16
2025-07-28 10:50:56,318:INFO:Logical Core: 24
2025-07-28 10:50:56,319:INFO:Checking libraries
2025-07-28 10:50:56,319:INFO:System:
2025-07-28 10:50:56,319:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:15:57) [MSC v.1916 64 bit (AMD64)]
2025-07-28 10:50:56,319:INFO:executable: c:\Users\DELL\anaconda3\envs\tf\python.exe
2025-07-28 10:50:56,319:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-28 10:50:56,319:INFO:PyCaret required dependencies:
2025-07-28 10:50:56,403:INFO:                 pip: 24.2
2025-07-28 10:50:56,403:INFO:          setuptools: 75.1.0
2025-07-28 10:50:56,403:INFO:             pycaret: 3.3.2
2025-07-28 10:50:56,403:INFO:             IPython: 8.36.0
2025-07-28 10:50:56,403:INFO:          ipywidgets: 8.1.7
2025-07-28 10:50:56,404:INFO:                tqdm: 4.67.1
2025-07-28 10:50:56,404:INFO:               numpy: 1.26.4
2025-07-28 10:50:56,404:INFO:              pandas: 2.1.4
2025-07-28 10:50:56,404:INFO:              jinja2: 3.1.6
2025-07-28 10:50:56,404:INFO:               scipy: 1.11.4
2025-07-28 10:50:56,404:INFO:              joblib: 1.3.2
2025-07-28 10:50:56,404:INFO:             sklearn: 1.4.2
2025-07-28 10:50:56,404:INFO:                pyod: 2.0.5
2025-07-28 10:50:56,404:INFO:            imblearn: 0.13.0
2025-07-28 10:50:56,404:INFO:   category_encoders: 2.7.0
2025-07-28 10:50:56,404:INFO:            lightgbm: 4.6.0
2025-07-28 10:50:56,404:INFO:               numba: 0.61.2
2025-07-28 10:50:56,404:INFO:            requests: 2.32.3
2025-07-28 10:50:56,404:INFO:          matplotlib: 3.7.5
2025-07-28 10:50:56,404:INFO:          scikitplot: 0.3.7
2025-07-28 10:50:56,404:INFO:         yellowbrick: 1.5
2025-07-28 10:50:56,404:INFO:              plotly: 5.24.1
2025-07-28 10:50:56,404:INFO:    plotly-resampler: Not installed
2025-07-28 10:50:56,404:INFO:             kaleido: 0.2.1
2025-07-28 10:50:56,404:INFO:           schemdraw: 0.15
2025-07-28 10:50:56,404:INFO:         statsmodels: 0.14.4
2025-07-28 10:50:56,404:INFO:              sktime: 0.26.0
2025-07-28 10:50:56,404:INFO:               tbats: 1.1.3
2025-07-28 10:50:56,404:INFO:            pmdarima: 2.0.4
2025-07-28 10:50:56,404:INFO:              psutil: 7.0.0
2025-07-28 10:50:56,404:INFO:          markupsafe: 2.1.3
2025-07-28 10:50:56,404:INFO:             pickle5: Not installed
2025-07-28 10:50:56,404:INFO:         cloudpickle: 2.2.1
2025-07-28 10:50:56,404:INFO:         deprecation: 2.1.0
2025-07-28 10:50:56,404:INFO:              xxhash: 3.5.0
2025-07-28 10:50:56,404:INFO:           wurlitzer: Not installed
2025-07-28 10:50:56,404:INFO:PyCaret optional dependencies:
2025-07-28 10:50:57,318:INFO:                shap: Not installed
2025-07-28 10:50:57,318:INFO:           interpret: Not installed
2025-07-28 10:50:57,318:INFO:                umap: Not installed
2025-07-28 10:50:57,318:INFO:     ydata_profiling: Not installed
2025-07-28 10:50:57,318:INFO:  explainerdashboard: Not installed
2025-07-28 10:50:57,318:INFO:             autoviz: Not installed
2025-07-28 10:50:57,319:INFO:           fairlearn: Not installed
2025-07-28 10:50:57,319:INFO:          deepchecks: Not installed
2025-07-28 10:50:57,319:INFO:             xgboost: 3.0.1
2025-07-28 10:50:57,319:INFO:            catboost: Not installed
2025-07-28 10:50:57,319:INFO:              kmodes: Not installed
2025-07-28 10:50:57,319:INFO:             mlxtend: Not installed
2025-07-28 10:50:57,319:INFO:       statsforecast: Not installed
2025-07-28 10:50:57,319:INFO:        tune_sklearn: Not installed
2025-07-28 10:50:57,319:INFO:                 ray: Not installed
2025-07-28 10:50:57,319:INFO:            hyperopt: Not installed
2025-07-28 10:50:57,319:INFO:              optuna: Not installed
2025-07-28 10:50:57,319:INFO:               skopt: Not installed
2025-07-28 10:50:57,319:INFO:              mlflow: 2.22.0
2025-07-28 10:50:57,319:INFO:              gradio: Not installed
2025-07-28 10:50:57,319:INFO:             fastapi: 0.115.12
2025-07-28 10:50:57,319:INFO:             uvicorn: 0.34.2
2025-07-28 10:50:57,319:INFO:              m2cgen: Not installed
2025-07-28 10:50:57,319:INFO:           evidently: Not installed
2025-07-28 10:50:57,319:INFO:               fugue: Not installed
2025-07-28 10:50:57,319:INFO:           streamlit: 1.45.1
2025-07-28 10:50:57,319:INFO:             prophet: Not installed
2025-07-28 10:50:57,319:INFO:None
2025-07-28 10:50:57,319:INFO:Set up data.
2025-07-28 10:50:57,678:INFO:Set up folding strategy.
2025-07-28 10:50:57,678:INFO:Set up train/test split.
2025-07-28 10:50:58,097:INFO:Set up index.
2025-07-28 10:50:58,108:INFO:Assigning column types.
2025-07-28 10:50:58,410:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-28 10:50:58,435:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 10:50:58,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:50:58,460:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:50:58,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:50:58,484:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 10:50:58,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:50:58,499:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:50:58,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:50:58,501:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-28 10:50:58,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:50:58,538:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:50:58,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:50:58,563:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:50:58,579:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:50:58,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:50:58,580:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-28 10:50:58,617:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:50:58,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:50:58,656:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:50:58,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:50:58,659:INFO:Preparing preprocessing pipeline...
2025-07-28 10:50:58,702:INFO:Set up label encoding.
2025-07-28 10:50:58,702:INFO:Set up simple imputation.
2025-07-28 10:50:58,803:INFO:Set up encoding of categorical features.
2025-07-28 10:50:58,804:INFO:Set up feature normalization.
2025-07-28 10:50:58,843:INFO:Set up column name cleaning.
2025-07-28 10:51:02,353:INFO:Finished creating preprocessing pipeline.
2025-07-28 10:51:02,356:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DELL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Destination Port',
                                             'Flow Duration',
                                             'Total Fwd Packets',
                                             'Total Backward Packets',
                                             'Total Length of Fwd Packets',
                                             '...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-28 10:51:02,356:INFO:Creating final display dataframe.
2025-07-28 10:51:05,455:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16                    Normalize   
17             Normalize method   
18               Fold Generator   
19                  Fold Number   
20                     CPU Jobs   
21                      Use GPU   
22               Log Experiment   
23              Experiment Name   
24                          USI   

                                                Value  
0                                                  42  
1                                           Label_grp  
2                                          Multiclass  
3   BENIGN: 0, DDoS: 1, DoS: 2, Other: 3, PortScan: 4  
4                                        (334422, 80)  
5                                        (334422, 94)  
6                                        (234095, 94)  
7                                        (100327, 94)  
8                                                  78  
9                                                   1  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                               True  
17                                             zscore  
18                                    StratifiedKFold  
19                                                 10  
20                                                 -1  
21                                              False  
22                                              False  
23                                   clf-default-name  
24                                               628a  
2025-07-28 10:51:05,492:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:51:05,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:51:05,529:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:51:05,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:51:05,531:INFO:setup() successfully completed in 9.22s...............
2025-07-28 10:51:05,531:INFO:gpu_param set to False
2025-07-28 10:51:05,566:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:51:05,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 10:51:05,603:INFO:Soft dependency imported: xgboost: 3.0.1
2025-07-28 10:51:05,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-28 14:21:29,528:INFO:Initializing compare_models()
2025-07-28 14:21:29,531:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-07-28 14:21:29,531:INFO:Checking exceptions
2025-07-28 14:21:29,946:INFO:Preparing display monitor
2025-07-28 14:21:29,961:INFO:Initializing Logistic Regression
2025-07-28 14:21:29,961:INFO:Total runtime is 0.0 minutes
2025-07-28 14:21:29,961:INFO:SubProcess create_model() called ==================================
2025-07-28 14:21:29,963:INFO:Initializing create_model()
2025-07-28 14:21:29,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:21:29,963:INFO:Checking exceptions
2025-07-28 14:21:29,963:INFO:Importing libraries
2025-07-28 14:21:29,963:INFO:Copying training dataset
2025-07-28 14:21:30,245:INFO:Defining folds
2025-07-28 14:21:30,246:INFO:Declaring metric variables
2025-07-28 14:21:30,246:INFO:Importing untrained model
2025-07-28 14:21:30,248:INFO:Logistic Regression Imported successfully
2025-07-28 14:21:30,248:INFO:Starting cross validation
2025-07-28 14:21:30,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:21:38,079:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:21:38,095:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32

2025-07-28 14:21:38,095:INFO:Initializing create_model()
2025-07-28 14:21:38,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:21:38,095:INFO:Checking exceptions
2025-07-28 14:21:38,095:INFO:Importing libraries
2025-07-28 14:21:38,095:INFO:Copying training dataset
2025-07-28 14:21:38,424:INFO:Defining folds
2025-07-28 14:21:38,424:INFO:Declaring metric variables
2025-07-28 14:21:38,424:INFO:Importing untrained model
2025-07-28 14:21:38,424:INFO:Logistic Regression Imported successfully
2025-07-28 14:21:38,424:INFO:Starting cross validation
2025-07-28 14:21:38,424:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:21:47,789:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:21:47,843:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:21:47,907:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:21:47,986:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:21:48,000:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:21:48,017:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:21:48,096:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:21:48,161:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:21:48,393:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 267, in transform
    new_X = X if X is None else X.set_index(new_y.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:21:48,393:INFO:Calculating mean and std
2025-07-28 14:21:48,393:INFO:Creating metrics dataframe
2025-07-28 14:21:48,393:INFO:Uploading results into container
2025-07-28 14:21:48,393:INFO:Uploading model into container now
2025-07-28 14:21:48,409:INFO:_master_model_container: 1
2025-07-28 14:21:48,409:INFO:_display_container: 2
2025-07-28 14:21:48,410:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-28 14:21:48,410:INFO:create_model() successfully completed......................................
2025-07-28 14:21:48,793:ERROR:create_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception or returned all 0.0:
2025-07-28 14:21:48,793:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 14:21:48,793:INFO:Initializing K Neighbors Classifier
2025-07-28 14:21:48,793:INFO:Total runtime is 0.3138617753982544 minutes
2025-07-28 14:21:48,793:INFO:SubProcess create_model() called ==================================
2025-07-28 14:21:48,793:INFO:Initializing create_model()
2025-07-28 14:21:48,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:21:48,793:INFO:Checking exceptions
2025-07-28 14:21:48,793:INFO:Importing libraries
2025-07-28 14:21:48,793:INFO:Copying training dataset
2025-07-28 14:21:49,063:INFO:Defining folds
2025-07-28 14:21:49,063:INFO:Declaring metric variables
2025-07-28 14:21:49,063:INFO:Importing untrained model
2025-07-28 14:21:49,063:INFO:K Neighbors Classifier Imported successfully
2025-07-28 14:21:49,063:INFO:Starting cross validation
2025-07-28 14:21:49,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:21:52,594:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:21:52,594:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 14:21:52,594:INFO:Initializing create_model()
2025-07-28 14:21:52,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:21:52,594:INFO:Checking exceptions
2025-07-28 14:21:52,594:INFO:Importing libraries
2025-07-28 14:21:52,594:INFO:Copying training dataset
2025-07-28 14:21:52,926:INFO:Defining folds
2025-07-28 14:21:52,926:INFO:Declaring metric variables
2025-07-28 14:21:52,926:INFO:Importing untrained model
2025-07-28 14:21:52,926:INFO:K Neighbors Classifier Imported successfully
2025-07-28 14:21:52,926:INFO:Starting cross validation
2025-07-28 14:21:52,926:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:23:25,310:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:25,378:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:25,460:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:25,910:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:25,977:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:26,065:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:26,278:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
4 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:23:26,278:INFO:Calculating mean and std
2025-07-28 14:23:26,278:INFO:Creating metrics dataframe
2025-07-28 14:23:26,278:INFO:Uploading results into container
2025-07-28 14:23:26,278:INFO:Uploading model into container now
2025-07-28 14:23:26,278:INFO:_master_model_container: 2
2025-07-28 14:23:26,278:INFO:_display_container: 2
2025-07-28 14:23:26,278:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-28 14:23:26,278:INFO:create_model() successfully completed......................................
2025-07-28 14:23:26,378:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2025-07-28 14:23:26,378:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 14:23:26,378:INFO:Initializing Naive Bayes
2025-07-28 14:23:26,378:INFO:Total runtime is 1.9402813871701559 minutes
2025-07-28 14:23:26,393:INFO:SubProcess create_model() called ==================================
2025-07-28 14:23:26,393:INFO:Initializing create_model()
2025-07-28 14:23:26,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:23:26,393:INFO:Checking exceptions
2025-07-28 14:23:26,393:INFO:Importing libraries
2025-07-28 14:23:26,393:INFO:Copying training dataset
2025-07-28 14:23:26,644:INFO:Defining folds
2025-07-28 14:23:26,644:INFO:Declaring metric variables
2025-07-28 14:23:26,644:INFO:Importing untrained model
2025-07-28 14:23:26,644:INFO:Naive Bayes Imported successfully
2025-07-28 14:23:26,644:INFO:Starting cross validation
2025-07-28 14:23:26,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:23:32,727:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:32,795:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:32,877:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:33,098:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
9 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:23:33,098:INFO:Calculating mean and std
2025-07-28 14:23:33,098:INFO:Creating metrics dataframe
2025-07-28 14:23:33,098:INFO:Uploading results into container
2025-07-28 14:23:33,098:INFO:Uploading model into container now
2025-07-28 14:23:33,098:INFO:_master_model_container: 3
2025-07-28 14:23:33,098:INFO:_display_container: 2
2025-07-28 14:23:33,098:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-28 14:23:33,098:INFO:create_model() successfully completed......................................
2025-07-28 14:23:33,206:INFO:SubProcess create_model() end ==================================
2025-07-28 14:23:33,206:INFO:Creating metrics dataframe
2025-07-28 14:23:33,207:INFO:Initializing Decision Tree Classifier
2025-07-28 14:23:33,207:INFO:Total runtime is 2.0541073203086855 minutes
2025-07-28 14:23:33,207:INFO:SubProcess create_model() called ==================================
2025-07-28 14:23:33,208:INFO:Initializing create_model()
2025-07-28 14:23:33,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:23:33,208:INFO:Checking exceptions
2025-07-28 14:23:33,208:INFO:Importing libraries
2025-07-28 14:23:33,208:INFO:Copying training dataset
2025-07-28 14:23:33,476:INFO:Defining folds
2025-07-28 14:23:33,476:INFO:Declaring metric variables
2025-07-28 14:23:33,476:INFO:Importing untrained model
2025-07-28 14:23:33,477:INFO:Decision Tree Classifier Imported successfully
2025-07-28 14:23:33,477:INFO:Starting cross validation
2025-07-28 14:23:33,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:23:36,745:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:23:36,745:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
4 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 267, in transform
    new_X = X if X is None else X.set_index(new_y.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32


2025-07-28 14:23:36,745:INFO:Initializing create_model()
2025-07-28 14:23:36,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:23:36,745:INFO:Checking exceptions
2025-07-28 14:23:36,745:INFO:Importing libraries
2025-07-28 14:23:36,745:INFO:Copying training dataset
2025-07-28 14:23:37,013:INFO:Defining folds
2025-07-28 14:23:37,013:INFO:Declaring metric variables
2025-07-28 14:23:37,013:INFO:Importing untrained model
2025-07-28 14:23:37,013:INFO:Decision Tree Classifier Imported successfully
2025-07-28 14:23:37,013:INFO:Starting cross validation
2025-07-28 14:23:37,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:23:39,494:ERROR:create_model() for dt raised an exception or returned all 0.0:
2025-07-28 14:23:39,494:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\queues.py", line 159, in _feed
    obj_ = dumps(obj, reducers=reducers)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 215, in dumps
    dump(obj, buf, reducers=reducers, protocol=protocol)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 208, in dump
    _LokyPickler(file, reducers=reducers, protocol=protocol).dump(obj)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\cloudpickle\cloudpickle_fast.py", line 632, in dump
    return Pickler.dump(self, obj)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-07-28 14:23:39,494:INFO:Initializing SVM - Linear Kernel
2025-07-28 14:23:39,494:INFO:Total runtime is 2.1588886737823487 minutes
2025-07-28 14:23:39,494:INFO:SubProcess create_model() called ==================================
2025-07-28 14:23:39,494:INFO:Initializing create_model()
2025-07-28 14:23:39,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:23:39,494:INFO:Checking exceptions
2025-07-28 14:23:39,494:INFO:Importing libraries
2025-07-28 14:23:39,494:INFO:Copying training dataset
2025-07-28 14:23:39,761:INFO:Defining folds
2025-07-28 14:23:39,761:INFO:Declaring metric variables
2025-07-28 14:23:39,761:INFO:Importing untrained model
2025-07-28 14:23:39,761:INFO:SVM - Linear Kernel Imported successfully
2025-07-28 14:23:39,761:INFO:Starting cross validation
2025-07-28 14:23:39,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:23:50,030:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:23:50,077:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:50,206:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:50,315:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:50,780:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:23:50,780:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:23:50,811:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:50,811:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:50,894:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:50,894:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:50,968:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:50,968:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:23:51,192:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
7 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210685) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:23:51,192:INFO:Calculating mean and std
2025-07-28 14:23:51,192:INFO:Creating metrics dataframe
2025-07-28 14:23:51,192:INFO:Uploading results into container
2025-07-28 14:23:51,192:INFO:Uploading model into container now
2025-07-28 14:23:51,192:INFO:_master_model_container: 4
2025-07-28 14:23:51,192:INFO:_display_container: 2
2025-07-28 14:23:51,192:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-28 14:23:51,207:INFO:create_model() successfully completed......................................
2025-07-28 14:23:51,300:WARNING:create_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:23:51,300:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:23:51,300:INFO:Initializing create_model()
2025-07-28 14:23:51,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:23:51,300:INFO:Checking exceptions
2025-07-28 14:23:51,300:INFO:Importing libraries
2025-07-28 14:23:51,300:INFO:Copying training dataset
2025-07-28 14:23:51,568:INFO:Defining folds
2025-07-28 14:23:51,568:INFO:Declaring metric variables
2025-07-28 14:23:51,569:INFO:Importing untrained model
2025-07-28 14:23:51,569:INFO:SVM - Linear Kernel Imported successfully
2025-07-28 14:23:51,570:INFO:Starting cross validation
2025-07-28 14:23:51,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:23:55,576:ERROR:create_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception or returned all 0.0:
2025-07-28 14:23:55,576:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 14:23:55,576:INFO:Initializing Ridge Classifier
2025-07-28 14:23:55,576:INFO:Total runtime is 2.4269264539082847 minutes
2025-07-28 14:23:55,576:INFO:SubProcess create_model() called ==================================
2025-07-28 14:23:55,576:INFO:Initializing create_model()
2025-07-28 14:23:55,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:23:55,576:INFO:Checking exceptions
2025-07-28 14:23:55,576:INFO:Importing libraries
2025-07-28 14:23:55,576:INFO:Copying training dataset
2025-07-28 14:23:55,875:INFO:Defining folds
2025-07-28 14:23:55,875:INFO:Declaring metric variables
2025-07-28 14:23:55,878:INFO:Importing untrained model
2025-07-28 14:23:55,878:INFO:Ridge Classifier Imported successfully
2025-07-28 14:23:55,878:INFO:Starting cross validation
2025-07-28 14:23:55,878:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:24:02,227:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:24:02,227:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 14:24:02,227:INFO:Initializing create_model()
2025-07-28 14:24:02,227:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:24:02,227:INFO:Checking exceptions
2025-07-28 14:24:02,227:INFO:Importing libraries
2025-07-28 14:24:02,227:INFO:Copying training dataset
2025-07-28 14:24:02,529:INFO:Defining folds
2025-07-28 14:24:02,529:INFO:Declaring metric variables
2025-07-28 14:24:02,529:INFO:Importing untrained model
2025-07-28 14:24:02,529:INFO:Ridge Classifier Imported successfully
2025-07-28 14:24:02,529:INFO:Starting cross validation
2025-07-28 14:24:02,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:24:08,828:ERROR:create_model() for ridge raised an exception or returned all 0.0:
2025-07-28 14:24:08,829:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32

2025-07-28 14:24:08,832:INFO:Initializing Random Forest Classifier
2025-07-28 14:24:08,832:INFO:Total runtime is 2.647846372922262 minutes
2025-07-28 14:24:08,832:INFO:SubProcess create_model() called ==================================
2025-07-28 14:24:08,832:INFO:Initializing create_model()
2025-07-28 14:24:08,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:24:08,832:INFO:Checking exceptions
2025-07-28 14:24:08,832:INFO:Importing libraries
2025-07-28 14:24:08,832:INFO:Copying training dataset
2025-07-28 14:24:09,129:INFO:Defining folds
2025-07-28 14:24:09,129:INFO:Declaring metric variables
2025-07-28 14:24:09,129:INFO:Importing untrained model
2025-07-28 14:24:09,129:INFO:Random Forest Classifier Imported successfully
2025-07-28 14:24:09,129:INFO:Starting cross validation
2025-07-28 14:24:09,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:24:23,714:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:23,858:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:23,985:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:24,401:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:24,478:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:24,554:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:24,776:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 308, in get_dummies
    base_df = base_df.set_index(X.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:24:24,777:INFO:Calculating mean and std
2025-07-28 14:24:24,779:INFO:Creating metrics dataframe
2025-07-28 14:24:24,782:INFO:Uploading results into container
2025-07-28 14:24:24,783:INFO:Uploading model into container now
2025-07-28 14:24:24,784:INFO:_master_model_container: 5
2025-07-28 14:24:24,784:INFO:_display_container: 2
2025-07-28 14:24:24,784:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-07-28 14:24:24,784:INFO:create_model() successfully completed......................................
2025-07-28 14:24:24,884:WARNING:create_model() for RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:24:24,884:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:24:24,884:INFO:Initializing create_model()
2025-07-28 14:24:24,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:24:24,884:INFO:Checking exceptions
2025-07-28 14:24:24,884:INFO:Importing libraries
2025-07-28 14:24:24,884:INFO:Copying training dataset
2025-07-28 14:24:25,143:INFO:Defining folds
2025-07-28 14:24:25,143:INFO:Declaring metric variables
2025-07-28 14:24:25,143:INFO:Importing untrained model
2025-07-28 14:24:25,144:INFO:Random Forest Classifier Imported successfully
2025-07-28 14:24:25,144:INFO:Starting cross validation
2025-07-28 14:24:25,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:24:29,208:ERROR:create_model() for RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) raised an exception or returned all 0.0:
2025-07-28 14:24:29,208:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210685, 1) and data type int32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210685, 1) and data type int32

2025-07-28 14:24:29,208:INFO:Initializing Quadratic Discriminant Analysis
2025-07-28 14:24:29,212:INFO:Total runtime is 2.987525570392609 minutes
2025-07-28 14:24:29,212:INFO:SubProcess create_model() called ==================================
2025-07-28 14:24:29,212:INFO:Initializing create_model()
2025-07-28 14:24:29,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:24:29,212:INFO:Checking exceptions
2025-07-28 14:24:29,212:INFO:Importing libraries
2025-07-28 14:24:29,212:INFO:Copying training dataset
2025-07-28 14:24:29,520:INFO:Defining folds
2025-07-28 14:24:29,520:INFO:Declaring metric variables
2025-07-28 14:24:29,520:INFO:Importing untrained model
2025-07-28 14:24:29,520:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-28 14:24:29,520:INFO:Starting cross validation
2025-07-28 14:24:29,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:24:37,612:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 14:24:38,479:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:24:38,523:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:38,595:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:38,662:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:24:38,878:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
9 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2242, in _merge_blocks
    new_values = np.vstack([b.values for b in blocks])  # type: ignore[misc]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\shape_base.py", line 289, in vstack
    return _nx.concatenate(arrs, 0, dtype=dtype, casting=casting)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:24:38,878:INFO:Calculating mean and std
2025-07-28 14:24:38,881:INFO:Creating metrics dataframe
2025-07-28 14:24:38,881:INFO:Uploading results into container
2025-07-28 14:24:38,881:INFO:Uploading model into container now
2025-07-28 14:24:38,881:INFO:_master_model_container: 6
2025-07-28 14:24:38,881:INFO:_display_container: 2
2025-07-28 14:24:38,881:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-28 14:24:38,881:INFO:create_model() successfully completed......................................
2025-07-28 14:24:38,980:WARNING:create_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:24:38,980:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:24:38,980:INFO:Initializing create_model()
2025-07-28 14:24:38,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:24:38,980:INFO:Checking exceptions
2025-07-28 14:24:38,980:INFO:Importing libraries
2025-07-28 14:24:38,980:INFO:Copying training dataset
2025-07-28 14:24:39,227:INFO:Defining folds
2025-07-28 14:24:39,228:INFO:Declaring metric variables
2025-07-28 14:24:39,228:INFO:Importing untrained model
2025-07-28 14:24:39,228:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-28 14:24:39,228:INFO:Starting cross validation
2025-07-28 14:24:39,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:24:43,579:ERROR:create_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception or returned all 0.0:
2025-07-28 14:24:43,579:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 14:24:43,579:INFO:Initializing Ada Boost Classifier
2025-07-28 14:24:43,579:INFO:Total runtime is 3.226961978276571 minutes
2025-07-28 14:24:43,579:INFO:SubProcess create_model() called ==================================
2025-07-28 14:24:43,579:INFO:Initializing create_model()
2025-07-28 14:24:43,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:24:43,579:INFO:Checking exceptions
2025-07-28 14:24:43,579:INFO:Importing libraries
2025-07-28 14:24:43,579:INFO:Copying training dataset
2025-07-28 14:24:43,879:INFO:Defining folds
2025-07-28 14:24:43,879:INFO:Declaring metric variables
2025-07-28 14:24:43,879:INFO:Importing untrained model
2025-07-28 14:24:43,879:INFO:Ada Boost Classifier Imported successfully
2025-07-28 14:24:43,879:INFO:Starting cross validation
2025-07-28 14:24:43,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:24:52,347:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:25:14,144:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:25:14,191:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:25:14,262:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:25:14,309:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:25:14,329:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:25:14,567:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
9 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5725, in filter
    return self.loc(axis=axis)[values]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1153, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1375, in _getitem_axis
    return self._getbool_axis(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1173, in _getbool_axis
    return self.obj._take_with_is_copy(inds, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210685) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210685) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:25:14,567:INFO:Calculating mean and std
2025-07-28 14:25:14,567:INFO:Creating metrics dataframe
2025-07-28 14:25:14,567:INFO:Uploading results into container
2025-07-28 14:25:14,567:INFO:Uploading model into container now
2025-07-28 14:25:14,567:INFO:_master_model_container: 7
2025-07-28 14:25:14,567:INFO:_display_container: 2
2025-07-28 14:25:14,567:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-28 14:25:14,567:INFO:create_model() successfully completed......................................
2025-07-28 14:25:14,661:WARNING:create_model() for AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:25:14,661:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:25:14,661:INFO:Initializing create_model()
2025-07-28 14:25:14,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:25:14,661:INFO:Checking exceptions
2025-07-28 14:25:14,661:INFO:Importing libraries
2025-07-28 14:25:14,661:INFO:Copying training dataset
2025-07-28 14:25:14,911:INFO:Defining folds
2025-07-28 14:25:14,911:INFO:Declaring metric variables
2025-07-28 14:25:14,911:INFO:Importing untrained model
2025-07-28 14:25:14,911:INFO:Ada Boost Classifier Imported successfully
2025-07-28 14:25:14,911:INFO:Starting cross validation
2025-07-28 14:25:14,911:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:25:20,582:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:25:42,613:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:25:42,647:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:25:42,728:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:25:42,763:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:25:42,794:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:25:43,036:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
9 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2242, in _merge_blocks
    new_values = np.vstack([b.values for b in blocks])  # type: ignore[misc]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\shape_base.py", line 289, in vstack
    return _nx.concatenate(arrs, 0, dtype=dtype, casting=casting)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210685) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 267, in transform
    new_X = X if X is None else X.set_index(new_y.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:25:43,036:INFO:Calculating mean and std
2025-07-28 14:25:43,036:INFO:Creating metrics dataframe
2025-07-28 14:25:43,036:INFO:Uploading results into container
2025-07-28 14:25:43,036:INFO:Uploading model into container now
2025-07-28 14:25:43,036:INFO:_master_model_container: 8
2025-07-28 14:25:43,036:INFO:_display_container: 2
2025-07-28 14:25:43,036:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-28 14:25:43,036:INFO:create_model() successfully completed......................................
2025-07-28 14:25:43,129:ERROR:create_model() for AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42) raised an exception or returned all 0.0:
2025-07-28 14:25:43,129:ERROR:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 14:25:43,129:INFO:Initializing Gradient Boosting Classifier
2025-07-28 14:25:43,129:INFO:Total runtime is 4.219462939103445 minutes
2025-07-28 14:25:43,129:INFO:SubProcess create_model() called ==================================
2025-07-28 14:25:43,129:INFO:Initializing create_model()
2025-07-28 14:25:43,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:25:43,129:INFO:Checking exceptions
2025-07-28 14:25:43,129:INFO:Importing libraries
2025-07-28 14:25:43,129:INFO:Copying training dataset
2025-07-28 14:25:43,396:INFO:Defining folds
2025-07-28 14:25:43,396:INFO:Declaring metric variables
2025-07-28 14:25:43,396:INFO:Importing untrained model
2025-07-28 14:25:43,396:INFO:Gradient Boosting Classifier Imported successfully
2025-07-28 14:25:43,396:INFO:Starting cross validation
2025-07-28 14:25:43,396:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:25:46,243:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:25:46,243:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\queues.py", line 159, in _feed
    obj_ = dumps(obj, reducers=reducers)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 215, in dumps
    dump(obj, buf, reducers=reducers, protocol=protocol)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 208, in dump
    _LokyPickler(file, reducers=reducers, protocol=protocol).dump(obj)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\cloudpickle\cloudpickle_fast.py", line 632, in dump
    return Pickler.dump(self, obj)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-07-28 14:25:46,243:INFO:Initializing create_model()
2025-07-28 14:25:46,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:25:46,243:INFO:Checking exceptions
2025-07-28 14:25:46,243:INFO:Importing libraries
2025-07-28 14:25:46,243:INFO:Copying training dataset
2025-07-28 14:25:46,516:INFO:Defining folds
2025-07-28 14:25:46,516:INFO:Declaring metric variables
2025-07-28 14:25:46,516:INFO:Importing untrained model
2025-07-28 14:25:46,516:INFO:Gradient Boosting Classifier Imported successfully
2025-07-28 14:25:46,516:INFO:Starting cross validation
2025-07-28 14:25:46,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:25:53,397:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2025-07-28 14:25:53,397:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32

2025-07-28 14:25:53,397:INFO:Initializing Linear Discriminant Analysis
2025-07-28 14:25:53,397:INFO:Total runtime is 4.390596707661947 minutes
2025-07-28 14:25:53,397:INFO:SubProcess create_model() called ==================================
2025-07-28 14:25:53,397:INFO:Initializing create_model()
2025-07-28 14:25:53,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:25:53,397:INFO:Checking exceptions
2025-07-28 14:25:53,397:INFO:Importing libraries
2025-07-28 14:25:53,397:INFO:Copying training dataset
2025-07-28 14:25:53,680:INFO:Defining folds
2025-07-28 14:25:53,680:INFO:Declaring metric variables
2025-07-28 14:25:53,680:INFO:Importing untrained model
2025-07-28 14:25:53,680:INFO:Linear Discriminant Analysis Imported successfully
2025-07-28 14:25:53,680:INFO:Starting cross validation
2025-07-28 14:25:53,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:26:01,605:WARNING:create_model() for lda raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:26:01,606:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-07-28 14:26:01,606:INFO:Initializing create_model()
2025-07-28 14:26:01,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:26:01,606:INFO:Checking exceptions
2025-07-28 14:26:01,606:INFO:Importing libraries
2025-07-28 14:26:01,606:INFO:Copying training dataset
2025-07-28 14:26:01,932:INFO:Defining folds
2025-07-28 14:26:01,932:INFO:Declaring metric variables
2025-07-28 14:26:01,932:INFO:Importing untrained model
2025-07-28 14:26:01,933:INFO:Linear Discriminant Analysis Imported successfully
2025-07-28 14:26:01,933:INFO:Starting cross validation
2025-07-28 14:26:01,934:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:26:09,431:ERROR:create_model() for lda raised an exception or returned all 0.0:
2025-07-28 14:26:09,431:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 14:26:09,431:INFO:Initializing Extra Trees Classifier
2025-07-28 14:26:09,431:INFO:Total runtime is 4.657840951283774 minutes
2025-07-28 14:26:09,431:INFO:SubProcess create_model() called ==================================
2025-07-28 14:26:09,431:INFO:Initializing create_model()
2025-07-28 14:26:09,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:26:09,431:INFO:Checking exceptions
2025-07-28 14:26:09,431:INFO:Importing libraries
2025-07-28 14:26:09,431:INFO:Copying training dataset
2025-07-28 14:26:09,737:INFO:Defining folds
2025-07-28 14:26:09,737:INFO:Declaring metric variables
2025-07-28 14:26:09,737:INFO:Importing untrained model
2025-07-28 14:26:09,737:INFO:Extra Trees Classifier Imported successfully
2025-07-28 14:26:09,740:INFO:Starting cross validation
2025-07-28 14:26:09,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:26:22,549:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:26:22,653:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:26:22,748:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:26:22,928:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:26:23,016:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:26:23,100:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:26:23,319:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:26:23,320:INFO:Calculating mean and std
2025-07-28 14:26:23,320:INFO:Creating metrics dataframe
2025-07-28 14:26:23,322:INFO:Uploading results into container
2025-07-28 14:26:23,322:INFO:Uploading model into container now
2025-07-28 14:26:23,323:INFO:_master_model_container: 9
2025-07-28 14:26:23,323:INFO:_display_container: 2
2025-07-28 14:26:23,323:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-28 14:26:23,323:INFO:create_model() successfully completed......................................
2025-07-28 14:26:23,414:WARNING:create_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:26:23,414:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:26:23,414:INFO:Initializing create_model()
2025-07-28 14:26:23,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:26:23,414:INFO:Checking exceptions
2025-07-28 14:26:23,414:INFO:Importing libraries
2025-07-28 14:26:23,414:INFO:Copying training dataset
2025-07-28 14:26:23,665:INFO:Defining folds
2025-07-28 14:26:23,665:INFO:Declaring metric variables
2025-07-28 14:26:23,665:INFO:Importing untrained model
2025-07-28 14:26:23,666:INFO:Extra Trees Classifier Imported successfully
2025-07-28 14:26:23,666:INFO:Starting cross validation
2025-07-28 14:26:23,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:26:29,182:ERROR:create_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception or returned all 0.0:
2025-07-28 14:26:29,183:ERROR:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 225, in fit
    args.append(X[self._include])
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 4.02 MiB for an array with shape (20, 210685) and data type int8

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32


2025-07-28 14:26:29,185:INFO:Initializing Extreme Gradient Boosting
2025-07-28 14:26:29,185:INFO:Total runtime is 4.987069312731426 minutes
2025-07-28 14:26:29,185:INFO:SubProcess create_model() called ==================================
2025-07-28 14:26:29,185:INFO:Initializing create_model()
2025-07-28 14:26:29,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:26:29,185:INFO:Checking exceptions
2025-07-28 14:26:29,185:INFO:Importing libraries
2025-07-28 14:26:29,185:INFO:Copying training dataset
2025-07-28 14:26:29,457:INFO:Defining folds
2025-07-28 14:26:29,457:INFO:Declaring metric variables
2025-07-28 14:26:29,457:INFO:Importing untrained model
2025-07-28 14:26:29,457:INFO:Extreme Gradient Boosting Imported successfully
2025-07-28 14:26:29,457:INFO:Starting cross validation
2025-07-28 14:26:29,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:26:33,196:WARNING:create_model() for xgboost raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:26:33,196:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210685, 1) and data type float32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210685, 1) and data type float32

2025-07-28 14:26:33,196:INFO:Initializing create_model()
2025-07-28 14:26:33,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:26:33,196:INFO:Checking exceptions
2025-07-28 14:26:33,196:INFO:Importing libraries
2025-07-28 14:26:33,196:INFO:Copying training dataset
2025-07-28 14:26:33,490:INFO:Defining folds
2025-07-28 14:26:33,490:INFO:Declaring metric variables
2025-07-28 14:26:33,490:INFO:Importing untrained model
2025-07-28 14:26:33,490:INFO:Extreme Gradient Boosting Imported successfully
2025-07-28 14:26:33,506:INFO:Starting cross validation
2025-07-28 14:26:33,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:26:41,302:ERROR:create_model() for xgboost raised an exception or returned all 0.0:
2025-07-28 14:26:41,302:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32

2025-07-28 14:26:41,302:INFO:Initializing Light Gradient Boosting Machine
2025-07-28 14:26:41,302:INFO:Total runtime is 5.189023979504904 minutes
2025-07-28 14:26:41,302:INFO:SubProcess create_model() called ==================================
2025-07-28 14:26:41,302:INFO:Initializing create_model()
2025-07-28 14:26:41,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:26:41,302:INFO:Checking exceptions
2025-07-28 14:26:41,302:INFO:Importing libraries
2025-07-28 14:26:41,302:INFO:Copying training dataset
2025-07-28 14:26:41,646:INFO:Defining folds
2025-07-28 14:26:41,646:INFO:Declaring metric variables
2025-07-28 14:26:41,646:INFO:Importing untrained model
2025-07-28 14:26:41,646:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 14:26:41,646:INFO:Starting cross validation
2025-07-28 14:26:41,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:27:05,891:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:06,062:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:06,081:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:06,228:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:06,253:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:06,429:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:07,098:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:07,256:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:07,276:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:07,369:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:07,396:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:07,492:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:07,727:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:27:07,728:INFO:Calculating mean and std
2025-07-28 14:27:07,728:INFO:Creating metrics dataframe
2025-07-28 14:27:07,729:INFO:Uploading results into container
2025-07-28 14:27:07,729:INFO:Uploading model into container now
2025-07-28 14:27:07,730:INFO:_master_model_container: 10
2025-07-28 14:27:07,730:INFO:_display_container: 2
2025-07-28 14:27:07,730:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 14:27:07,730:INFO:create_model() successfully completed......................................
2025-07-28 14:27:07,819:WARNING:create_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:27:07,819:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:27:07,819:INFO:Initializing create_model()
2025-07-28 14:27:07,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:27:07,819:INFO:Checking exceptions
2025-07-28 14:27:07,819:INFO:Importing libraries
2025-07-28 14:27:07,819:INFO:Copying training dataset
2025-07-28 14:27:08,066:INFO:Defining folds
2025-07-28 14:27:08,066:INFO:Declaring metric variables
2025-07-28 14:27:08,067:INFO:Importing untrained model
2025-07-28 14:27:08,067:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 14:27:08,067:INFO:Starting cross validation
2025-07-28 14:27:08,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:27:21,909:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:22,061:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:22,211:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:22,998:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:23,099:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:23,195:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:23,419:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 609, in transform
    mask_valid_features = missing_mask[:, valid_statistics_indexes]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 15.7 MiB for an array with shape (78, 210686) and data type bool

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:27:23,420:INFO:Calculating mean and std
2025-07-28 14:27:23,420:INFO:Creating metrics dataframe
2025-07-28 14:27:23,423:INFO:Uploading results into container
2025-07-28 14:27:23,424:INFO:Uploading model into container now
2025-07-28 14:27:23,424:INFO:_master_model_container: 11
2025-07-28 14:27:23,425:INFO:_display_container: 2
2025-07-28 14:27:23,425:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 14:27:23,425:INFO:create_model() successfully completed......................................
2025-07-28 14:27:23,523:INFO:SubProcess create_model() end ==================================
2025-07-28 14:27:23,523:INFO:Creating metrics dataframe
2025-07-28 14:27:23,525:INFO:Initializing Dummy Classifier
2025-07-28 14:27:23,525:INFO:Total runtime is 5.892731908957164 minutes
2025-07-28 14:27:23,525:INFO:SubProcess create_model() called ==================================
2025-07-28 14:27:23,525:INFO:Initializing create_model()
2025-07-28 14:27:23,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:27:23,525:INFO:Checking exceptions
2025-07-28 14:27:23,525:INFO:Importing libraries
2025-07-28 14:27:23,525:INFO:Copying training dataset
2025-07-28 14:27:23,782:INFO:Defining folds
2025-07-28 14:27:23,782:INFO:Declaring metric variables
2025-07-28 14:27:23,783:INFO:Importing untrained model
2025-07-28 14:27:23,783:INFO:Dummy Classifier Imported successfully
2025-07-28 14:27:23,783:INFO:Starting cross validation
2025-07-28 14:27:23,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:27:27,758:WARNING:create_model() for dummy raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:27:27,758:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 14:27:27,758:INFO:Initializing create_model()
2025-07-28 14:27:27,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE57310220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:27:27,758:INFO:Checking exceptions
2025-07-28 14:27:27,758:INFO:Importing libraries
2025-07-28 14:27:27,758:INFO:Copying training dataset
2025-07-28 14:27:28,054:INFO:Defining folds
2025-07-28 14:27:28,054:INFO:Declaring metric variables
2025-07-28 14:27:28,054:INFO:Importing untrained model
2025-07-28 14:27:28,054:INFO:Dummy Classifier Imported successfully
2025-07-28 14:27:28,054:INFO:Starting cross validation
2025-07-28 14:27:28,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:27:37,664:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:37,835:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:37,924:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:27:37,975:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:38,053:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:38,210:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:38,319:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:27:38,381:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:39,211:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:39,320:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:39,352:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:39,430:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:27:39,473:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:39,508:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:39,555:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:27:39,616:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:27:39,925:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5725, in filter
    return self.loc(axis=axis)[values]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1153, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1375, in _getitem_axis
    return self._getbool_axis(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1173, in _getbool_axis
    return self.obj._take_with_is_copy(inds, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210685) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:27:39,929:INFO:Calculating mean and std
2025-07-28 14:27:39,929:INFO:Creating metrics dataframe
2025-07-28 14:27:39,929:INFO:Uploading results into container
2025-07-28 14:27:39,929:INFO:Uploading model into container now
2025-07-28 14:27:39,929:INFO:_master_model_container: 12
2025-07-28 14:27:39,929:INFO:_display_container: 2
2025-07-28 14:27:39,929:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-07-28 14:27:39,929:INFO:create_model() successfully completed......................................
2025-07-28 14:27:40,163:ERROR:create_model() for DummyClassifier(constant=None, random_state=42, strategy='prior') raised an exception or returned all 0.0:
2025-07-28 14:27:40,163:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 14:27:40,163:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-07-28 14:27:40,163:INFO:Initializing create_model()
2025-07-28 14:27:40,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:27:40,163:INFO:Checking exceptions
2025-07-28 14:27:40,163:INFO:Importing libraries
2025-07-28 14:27:40,163:INFO:Copying training dataset
2025-07-28 14:27:40,961:INFO:Defining folds
2025-07-28 14:27:40,961:INFO:Declaring metric variables
2025-07-28 14:27:40,961:INFO:Importing untrained model
2025-07-28 14:27:40,961:INFO:Declaring custom model
2025-07-28 14:27:40,961:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 14:27:40,961:INFO:Cross validation set to False
2025-07-28 14:27:40,961:INFO:Fitting Model
2025-07-28 14:27:45,041:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 14:27:45,103:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.052086 seconds.
2025-07-28 14:27:45,103:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 14:27:45,103:INFO:[LightGBM] [Info] Total Bins 14146
2025-07-28 14:27:45,103:INFO:[LightGBM] [Info] Number of data points in the train set: 234095, number of used features: 80
2025-07-28 14:27:45,103:INFO:[LightGBM] [Info] Start training from score -1.430375
2025-07-28 14:27:45,103:INFO:[LightGBM] [Info] Start training from score -1.430375
2025-07-28 14:27:45,103:INFO:[LightGBM] [Info] Start training from score -1.430375
2025-07-28 14:27:45,103:INFO:[LightGBM] [Info] Start training from score -3.143687
2025-07-28 14:27:45,103:INFO:[LightGBM] [Info] Start training from score -1.430375
2025-07-28 14:27:45,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:45,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:45,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:45,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:50,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:50,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:50,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:51,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 14:27:52,032:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 14:27:52,032:INFO:create_model() successfully completed......................................
2025-07-28 14:27:52,198:ERROR:create_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception or returned all 0.0:
2025-07-28 14:27:52,198:ERROR:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 954, in compare_models
    np.sum(
AssertionError

2025-07-28 14:27:52,200:INFO:_master_model_container: 12
2025-07-28 14:27:52,201:INFO:_display_container: 2
2025-07-28 14:27:52,201:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 14:27:52,201:INFO:compare_models() successfully completed......................................
2025-07-28 14:27:52,202:INFO:Initializing tune_model()
2025-07-28 14:27:52,202:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 14:27:52,202:INFO:Checking exceptions
2025-07-28 14:27:52,421:INFO:Copying training dataset
2025-07-28 14:27:52,775:INFO:Checking base model
2025-07-28 14:27:52,775:INFO:Base model : Light Gradient Boosting Machine
2025-07-28 14:27:52,776:INFO:Declaring metric variables
2025-07-28 14:27:52,776:INFO:Defining Hyperparameters
2025-07-28 14:27:52,944:INFO:Tuning with n_jobs=-1
2025-07-28 14:27:52,944:INFO:Initializing RandomizedSearchCV
2025-07-28 14:34:46,901:INFO:Initializing compare_models()
2025-07-28 14:34:46,901:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-07-28 14:34:46,902:INFO:Checking exceptions
2025-07-28 14:34:47,010:INFO:Preparing display monitor
2025-07-28 14:34:47,013:INFO:Initializing Logistic Regression
2025-07-28 14:34:47,014:INFO:Total runtime is 1.6661485036214194e-05 minutes
2025-07-28 14:34:47,014:INFO:SubProcess create_model() called ==================================
2025-07-28 14:34:47,014:INFO:Initializing create_model()
2025-07-28 14:34:47,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:34:47,014:INFO:Checking exceptions
2025-07-28 14:34:47,015:INFO:Importing libraries
2025-07-28 14:34:47,015:INFO:Copying training dataset
2025-07-28 14:34:47,275:INFO:Defining folds
2025-07-28 14:34:47,276:INFO:Declaring metric variables
2025-07-28 14:34:47,276:INFO:Importing untrained model
2025-07-28 14:34:47,276:INFO:Logistic Regression Imported successfully
2025-07-28 14:34:47,277:INFO:Starting cross validation
2025-07-28 14:34:47,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:35:01,388:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:35:01,442:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,529:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,533:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:35:01,569:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,621:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,649:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,651:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:35:01,689:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,734:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,742:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:35:01,780:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,784:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,865:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,875:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:01,962:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,096:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:35:02,133:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,212:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:35:02,215:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,245:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,297:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,324:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,354:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:35:02,388:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,388:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:35:02,402:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,422:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,466:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,500:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,544:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,576:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:35:02,800:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:35:02,806:INFO:Calculating mean and std
2025-07-28 14:35:02,808:INFO:Creating metrics dataframe
2025-07-28 14:35:02,818:INFO:Uploading results into container
2025-07-28 14:35:02,818:INFO:Uploading model into container now
2025-07-28 14:35:02,819:INFO:_master_model_container: 13
2025-07-28 14:35:02,819:INFO:_display_container: 3
2025-07-28 14:35:02,820:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-28 14:35:02,820:INFO:create_model() successfully completed......................................
2025-07-28 14:35:02,979:INFO:SubProcess create_model() end ==================================
2025-07-28 14:35:02,979:INFO:Creating metrics dataframe
2025-07-28 14:35:02,981:INFO:Initializing K Neighbors Classifier
2025-07-28 14:35:02,981:INFO:Total runtime is 0.2661335229873657 minutes
2025-07-28 14:35:02,981:INFO:SubProcess create_model() called ==================================
2025-07-28 14:35:02,981:INFO:Initializing create_model()
2025-07-28 14:35:02,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:35:02,981:INFO:Checking exceptions
2025-07-28 14:35:02,981:INFO:Importing libraries
2025-07-28 14:35:02,981:INFO:Copying training dataset
2025-07-28 14:35:03,253:INFO:Defining folds
2025-07-28 14:35:03,254:INFO:Declaring metric variables
2025-07-28 14:35:03,254:INFO:Importing untrained model
2025-07-28 14:35:03,254:INFO:K Neighbors Classifier Imported successfully
2025-07-28 14:35:03,254:INFO:Starting cross validation
2025-07-28 14:35:03,256:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:35:09,332:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:35:09,332:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-07-28 14:35:09,333:INFO:Initializing create_model()
2025-07-28 14:35:09,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:35:09,333:INFO:Checking exceptions
2025-07-28 14:35:09,333:INFO:Importing libraries
2025-07-28 14:35:09,333:INFO:Copying training dataset
2025-07-28 14:35:09,628:INFO:Defining folds
2025-07-28 14:35:09,628:INFO:Declaring metric variables
2025-07-28 14:35:09,629:INFO:Importing untrained model
2025-07-28 14:35:09,629:INFO:K Neighbors Classifier Imported successfully
2025-07-28 14:35:09,629:INFO:Starting cross validation
2025-07-28 14:35:09,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:37:26,922:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,050:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,082:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,162:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,202:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,323:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,521:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,534:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,627:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,634:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,635:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,644:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,678:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,728:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,734:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,736:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,745:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,778:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,815:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,834:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,840:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,876:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:27,917:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:28,013:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:28,246:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:37:28,247:INFO:Calculating mean and std
2025-07-28 14:37:28,252:INFO:Creating metrics dataframe
2025-07-28 14:37:28,255:INFO:Uploading results into container
2025-07-28 14:37:28,255:INFO:Uploading model into container now
2025-07-28 14:37:28,256:INFO:_master_model_container: 14
2025-07-28 14:37:28,256:INFO:_display_container: 3
2025-07-28 14:37:28,256:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-28 14:37:28,256:INFO:create_model() successfully completed......................................
2025-07-28 14:37:28,386:INFO:SubProcess create_model() end ==================================
2025-07-28 14:37:28,386:INFO:Creating metrics dataframe
2025-07-28 14:37:28,390:INFO:Initializing Naive Bayes
2025-07-28 14:37:28,390:INFO:Total runtime is 2.689617665608724 minutes
2025-07-28 14:37:28,390:INFO:SubProcess create_model() called ==================================
2025-07-28 14:37:28,390:INFO:Initializing create_model()
2025-07-28 14:37:28,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:37:28,390:INFO:Checking exceptions
2025-07-28 14:37:28,390:INFO:Importing libraries
2025-07-28 14:37:28,390:INFO:Copying training dataset
2025-07-28 14:37:28,659:INFO:Defining folds
2025-07-28 14:37:28,659:INFO:Declaring metric variables
2025-07-28 14:37:28,659:INFO:Importing untrained model
2025-07-28 14:37:28,659:INFO:Naive Bayes Imported successfully
2025-07-28 14:37:28,660:INFO:Starting cross validation
2025-07-28 14:37:28,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:37:39,983:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,036:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,078:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,124:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,145:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,172:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,218:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,237:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,318:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,512:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,541:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,561:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,603:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,629:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,651:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,692:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,715:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,737:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:40,974:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210685) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 1043, in transform
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1060, in check_array
    array = _asarray_with_order(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 519, in _asarray_with_order
    array = numpy.array(array, order=order, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:37:40,976:INFO:Calculating mean and std
2025-07-28 14:37:40,981:INFO:Creating metrics dataframe
2025-07-28 14:37:40,984:INFO:Uploading results into container
2025-07-28 14:37:40,984:INFO:Uploading model into container now
2025-07-28 14:37:40,984:INFO:_master_model_container: 15
2025-07-28 14:37:40,985:INFO:_display_container: 3
2025-07-28 14:37:40,985:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-28 14:37:40,985:INFO:create_model() successfully completed......................................
2025-07-28 14:37:41,104:WARNING:create_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:37:41,104:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:37:41,104:INFO:Initializing create_model()
2025-07-28 14:37:41,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:37:41,105:INFO:Checking exceptions
2025-07-28 14:37:41,105:INFO:Importing libraries
2025-07-28 14:37:41,105:INFO:Copying training dataset
2025-07-28 14:37:41,369:INFO:Defining folds
2025-07-28 14:37:41,369:INFO:Declaring metric variables
2025-07-28 14:37:41,370:INFO:Importing untrained model
2025-07-28 14:37:41,370:INFO:Naive Bayes Imported successfully
2025-07-28 14:37:41,370:INFO:Starting cross validation
2025-07-28 14:37:41,371:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:37:49,633:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:49,731:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:49,837:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:49,882:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:49,977:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:50,074:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:50,184:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:50,280:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:50,370:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:50,649:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:50,734:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:50,820:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:51,025:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:51,065:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:51,104:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:51,143:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:51,180:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:51,219:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:37:51,443:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:37:51,445:INFO:Calculating mean and std
2025-07-28 14:37:51,449:INFO:Creating metrics dataframe
2025-07-28 14:37:51,451:INFO:Uploading results into container
2025-07-28 14:37:51,452:INFO:Uploading model into container now
2025-07-28 14:37:51,452:INFO:_master_model_container: 16
2025-07-28 14:37:51,452:INFO:_display_container: 3
2025-07-28 14:37:51,452:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-28 14:37:51,453:INFO:create_model() successfully completed......................................
2025-07-28 14:37:51,574:INFO:SubProcess create_model() end ==================================
2025-07-28 14:37:51,574:INFO:Creating metrics dataframe
2025-07-28 14:37:51,575:INFO:Initializing Decision Tree Classifier
2025-07-28 14:37:51,575:INFO:Total runtime is 3.076035197575887 minutes
2025-07-28 14:37:51,576:INFO:SubProcess create_model() called ==================================
2025-07-28 14:37:51,576:INFO:Initializing create_model()
2025-07-28 14:37:51,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:37:51,576:INFO:Checking exceptions
2025-07-28 14:37:51,576:INFO:Importing libraries
2025-07-28 14:37:51,576:INFO:Copying training dataset
2025-07-28 14:37:51,840:INFO:Defining folds
2025-07-28 14:37:51,840:INFO:Declaring metric variables
2025-07-28 14:37:51,840:INFO:Importing untrained model
2025-07-28 14:37:51,840:INFO:Decision Tree Classifier Imported successfully
2025-07-28 14:37:51,840:INFO:Starting cross validation
2025-07-28 14:37:51,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:38:00,019:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:00,129:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:00,153:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:00,232:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:00,264:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:00,381:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:00,802:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:00,909:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,005:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,017:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,106:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,208:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,319:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,414:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,504:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,515:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,601:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,689:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,908:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:01,987:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:02,022:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:02,063:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:02,099:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:02,176:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:02,393:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:38:02,394:INFO:Calculating mean and std
2025-07-28 14:38:02,398:INFO:Creating metrics dataframe
2025-07-28 14:38:02,401:INFO:Uploading results into container
2025-07-28 14:38:02,401:INFO:Uploading model into container now
2025-07-28 14:38:02,402:INFO:_master_model_container: 17
2025-07-28 14:38:02,402:INFO:_display_container: 3
2025-07-28 14:38:02,402:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-07-28 14:38:02,402:INFO:create_model() successfully completed......................................
2025-07-28 14:38:02,521:INFO:SubProcess create_model() end ==================================
2025-07-28 14:38:02,521:INFO:Creating metrics dataframe
2025-07-28 14:38:02,524:INFO:Initializing SVM - Linear Kernel
2025-07-28 14:38:02,524:INFO:Total runtime is 3.258515413602193 minutes
2025-07-28 14:38:02,524:INFO:SubProcess create_model() called ==================================
2025-07-28 14:38:02,524:INFO:Initializing create_model()
2025-07-28 14:38:02,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:38:02,524:INFO:Checking exceptions
2025-07-28 14:38:02,524:INFO:Importing libraries
2025-07-28 14:38:02,524:INFO:Copying training dataset
2025-07-28 14:38:02,784:INFO:Defining folds
2025-07-28 14:38:02,784:INFO:Declaring metric variables
2025-07-28 14:38:02,784:INFO:Importing untrained model
2025-07-28 14:38:02,785:INFO:SVM - Linear Kernel Imported successfully
2025-07-28 14:38:02,785:INFO:Starting cross validation
2025-07-28 14:38:02,786:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:38:11,241:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:11,307:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:11,467:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:11,630:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:11,789:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:11,846:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:11,991:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:12,116:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:12,209:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:12,259:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:12,383:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:12,509:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:12,679:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:12,727:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:12,835:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:12,958:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:12,996:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:13,049:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:13,194:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:13,321:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:13,613:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:13,649:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:13,734:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:13,814:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:13,820:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:13,853:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:13,931:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:14,008:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:14,233:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1116, in _incremental_mean_and_var
    X_nan_mask = np.isnan(X)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 18.7 MiB for an array with shape (210685, 93) and data type bool

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:38:14,235:INFO:Calculating mean and std
2025-07-28 14:38:14,239:INFO:Creating metrics dataframe
2025-07-28 14:38:14,242:INFO:Uploading results into container
2025-07-28 14:38:14,242:INFO:Uploading model into container now
2025-07-28 14:38:14,243:INFO:_master_model_container: 18
2025-07-28 14:38:14,243:INFO:_display_container: 3
2025-07-28 14:38:14,243:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-28 14:38:14,243:INFO:create_model() successfully completed......................................
2025-07-28 14:38:14,353:INFO:SubProcess create_model() end ==================================
2025-07-28 14:38:14,353:INFO:Creating metrics dataframe
2025-07-28 14:38:14,355:INFO:Initializing Ridge Classifier
2025-07-28 14:38:14,355:INFO:Total runtime is 3.455704617500305 minutes
2025-07-28 14:38:14,355:INFO:SubProcess create_model() called ==================================
2025-07-28 14:38:14,355:INFO:Initializing create_model()
2025-07-28 14:38:14,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:38:14,355:INFO:Checking exceptions
2025-07-28 14:38:14,355:INFO:Importing libraries
2025-07-28 14:38:14,355:INFO:Copying training dataset
2025-07-28 14:38:14,611:INFO:Defining folds
2025-07-28 14:38:14,612:INFO:Declaring metric variables
2025-07-28 14:38:14,612:INFO:Importing untrained model
2025-07-28 14:38:14,612:INFO:Ridge Classifier Imported successfully
2025-07-28 14:38:14,612:INFO:Starting cross validation
2025-07-28 14:38:14,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:38:19,970:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:38:19,971:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\queues.py", line 159, in _feed
    obj_ = dumps(obj, reducers=reducers)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 215, in dumps
    dump(obj, buf, reducers=reducers, protocol=protocol)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 208, in dump
    _LokyPickler(file, reducers=reducers, protocol=protocol).dump(obj)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\cloudpickle\cloudpickle_fast.py", line 632, in dump
    return Pickler.dump(self, obj)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-07-28 14:38:19,971:INFO:Initializing create_model()
2025-07-28 14:38:19,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:38:19,971:INFO:Checking exceptions
2025-07-28 14:38:19,971:INFO:Importing libraries
2025-07-28 14:38:19,971:INFO:Copying training dataset
2025-07-28 14:38:20,258:INFO:Defining folds
2025-07-28 14:38:20,259:INFO:Declaring metric variables
2025-07-28 14:38:20,259:INFO:Importing untrained model
2025-07-28 14:38:20,259:INFO:Ridge Classifier Imported successfully
2025-07-28 14:38:20,259:INFO:Starting cross validation
2025-07-28 14:38:20,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:38:32,986:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:33,017:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:33,037:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,072:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,158:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,181:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,268:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,287:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,360:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:33,381:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:33,411:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,430:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,451:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:33,494:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,512:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,549:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,603:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,616:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,653:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,712:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:33,994:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:34,032:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,122:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,209:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,229:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:34,265:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,343:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:38:34,349:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,379:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,431:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,462:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,546:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:38:34,772:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:38:34,773:INFO:Calculating mean and std
2025-07-28 14:38:34,778:INFO:Creating metrics dataframe
2025-07-28 14:38:34,781:INFO:Uploading results into container
2025-07-28 14:38:34,782:INFO:Uploading model into container now
2025-07-28 14:38:34,782:INFO:_master_model_container: 19
2025-07-28 14:38:34,782:INFO:_display_container: 3
2025-07-28 14:38:34,783:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-07-28 14:38:34,783:INFO:create_model() successfully completed......................................
2025-07-28 14:38:34,912:INFO:SubProcess create_model() end ==================================
2025-07-28 14:38:34,912:INFO:Creating metrics dataframe
2025-07-28 14:38:34,913:INFO:Initializing Random Forest Classifier
2025-07-28 14:38:34,914:INFO:Total runtime is 3.798349026838938 minutes
2025-07-28 14:38:34,914:INFO:SubProcess create_model() called ==================================
2025-07-28 14:38:34,914:INFO:Initializing create_model()
2025-07-28 14:38:34,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:38:34,914:INFO:Checking exceptions
2025-07-28 14:38:34,914:INFO:Importing libraries
2025-07-28 14:38:34,914:INFO:Copying training dataset
2025-07-28 14:38:35,182:INFO:Defining folds
2025-07-28 14:38:35,183:INFO:Declaring metric variables
2025-07-28 14:38:35,183:INFO:Importing untrained model
2025-07-28 14:38:35,183:INFO:Random Forest Classifier Imported successfully
2025-07-28 14:38:35,183:INFO:Starting cross validation
2025-07-28 14:38:35,184:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:39:06,052:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,173:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,251:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,352:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,455:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,519:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,551:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,553:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,653:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,668:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,695:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,763:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,795:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,817:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:06,870:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:07,109:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:07,196:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:07,208:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:07,284:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:07,295:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:07,366:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:07,596:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 427, in fit
    self.statistics_ = self._dense_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 484, in _dense_fit
    mean_masked = np.ma.mean(masked_X, axis=0)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\ma\core.py", line 6882, in __call__
    return method(marr, *args, **params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\ma\core.py", line 5344, in mean
    cnt = self.count(axis=axis, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\ma\core.py", line 4622, in count
    return (~m).sum(axis=axis, dtype=np.intp, **kwargs)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 15.7 MiB for an array with shape (210686, 78) and data type bool

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:39:07,597:INFO:Calculating mean and std
2025-07-28 14:39:07,601:INFO:Creating metrics dataframe
2025-07-28 14:39:07,604:INFO:Uploading results into container
2025-07-28 14:39:07,605:INFO:Uploading model into container now
2025-07-28 14:39:07,605:INFO:_master_model_container: 20
2025-07-28 14:39:07,605:INFO:_display_container: 3
2025-07-28 14:39:07,606:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-07-28 14:39:07,606:INFO:create_model() successfully completed......................................
2025-07-28 14:39:07,726:INFO:SubProcess create_model() end ==================================
2025-07-28 14:39:07,726:INFO:Creating metrics dataframe
2025-07-28 14:39:07,728:INFO:Initializing Quadratic Discriminant Analysis
2025-07-28 14:39:07,728:INFO:Total runtime is 4.345253459612528 minutes
2025-07-28 14:39:07,728:INFO:SubProcess create_model() called ==================================
2025-07-28 14:39:07,728:INFO:Initializing create_model()
2025-07-28 14:39:07,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:39:07,728:INFO:Checking exceptions
2025-07-28 14:39:07,728:INFO:Importing libraries
2025-07-28 14:39:07,728:INFO:Copying training dataset
2025-07-28 14:39:07,987:INFO:Defining folds
2025-07-28 14:39:07,987:INFO:Declaring metric variables
2025-07-28 14:39:07,988:INFO:Importing untrained model
2025-07-28 14:39:07,988:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-28 14:39:07,988:INFO:Starting cross validation
2025-07-28 14:39:07,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:39:15,486:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 14:39:18,157:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 14:39:18,397:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 14:39:18,623:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 14:39:18,979:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 14:39:19,108:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 14:39:19,155:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:39:19,218:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:19,368:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:19,489:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:20,499:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:39:20,540:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:20,638:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:20,731:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:39:20,739:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:20,783:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:20,815:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:39:20,862:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:20,894:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:20,960:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:20,998:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:21,070:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:21,112:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:39:21,122:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:39:21,151:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:21,162:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:21,242:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:21,252:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:21,331:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:21,343:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:39:21,584:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210686, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 308, in get_dummies
    base_df = base_df.set_index(X.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2242, in _merge_blocks
    new_values = np.vstack([b.values for b in blocks])  # type: ignore[misc]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\shape_base.py", line 289, in vstack
    return _nx.concatenate(arrs, 0, dtype=dtype, casting=casting)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:39:21,585:INFO:Calculating mean and std
2025-07-28 14:39:21,591:INFO:Creating metrics dataframe
2025-07-28 14:39:21,595:INFO:Uploading results into container
2025-07-28 14:39:21,595:INFO:Uploading model into container now
2025-07-28 14:39:21,596:INFO:_master_model_container: 21
2025-07-28 14:39:21,596:INFO:_display_container: 3
2025-07-28 14:39:21,596:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-28 14:39:21,596:INFO:create_model() successfully completed......................................
2025-07-28 14:39:21,719:INFO:SubProcess create_model() end ==================================
2025-07-28 14:39:21,719:INFO:Creating metrics dataframe
2025-07-28 14:39:21,722:INFO:Initializing Ada Boost Classifier
2025-07-28 14:39:21,722:INFO:Total runtime is 4.578484165668487 minutes
2025-07-28 14:39:21,722:INFO:SubProcess create_model() called ==================================
2025-07-28 14:39:21,722:INFO:Initializing create_model()
2025-07-28 14:39:21,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:39:21,722:INFO:Checking exceptions
2025-07-28 14:39:21,723:INFO:Importing libraries
2025-07-28 14:39:21,723:INFO:Copying training dataset
2025-07-28 14:39:21,990:INFO:Defining folds
2025-07-28 14:39:21,991:INFO:Declaring metric variables
2025-07-28 14:39:21,991:INFO:Importing untrained model
2025-07-28 14:39:21,991:INFO:Ada Boost Classifier Imported successfully
2025-07-28 14:39:21,992:INFO:Starting cross validation
2025-07-28 14:39:21,993:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:39:27,792:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:39:28,109:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:39:29,777:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:39:30,091:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:39:30,591:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:39:30,936:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:39:31,247:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 14:40:04,586:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:40:04,633:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:04,744:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:04,801:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:40:04,848:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:05,056:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:40:05,099:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:05,207:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:05,265:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:40:05,305:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:05,677:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:40:05,721:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:05,821:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:05,880:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:40:05,931:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,194:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:40:06,237:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,329:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,350:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:40:06,384:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:40:06,387:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,422:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,452:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:40:06,476:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,489:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,529:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:40:06,567:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,579:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,582:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:40:06,618:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,630:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:40:06,666:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,704:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:06,752:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:40:06,787:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:40:07,445:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 314, in get_dummies
    X = X.reindex(columns=cols)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5141, in reindex
    return super().reindex(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5521, in reindex
    return self._reindex_axes(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5549, in _reindex_axes
    obj = obj._reindex_with_indexers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5597, in _reindex_with_indexers
    new_data = new_data.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:40:07,446:INFO:Calculating mean and std
2025-07-28 14:40:07,447:INFO:Creating metrics dataframe
2025-07-28 14:40:07,449:INFO:Uploading results into container
2025-07-28 14:40:07,450:INFO:Uploading model into container now
2025-07-28 14:40:07,450:INFO:_master_model_container: 22
2025-07-28 14:40:07,450:INFO:_display_container: 3
2025-07-28 14:40:07,450:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-28 14:40:07,450:INFO:create_model() successfully completed......................................
2025-07-28 14:40:07,569:INFO:SubProcess create_model() end ==================================
2025-07-28 14:40:07,569:INFO:Creating metrics dataframe
2025-07-28 14:40:07,571:INFO:Initializing Gradient Boosting Classifier
2025-07-28 14:40:07,571:INFO:Total runtime is 5.342644055684407 minutes
2025-07-28 14:40:07,571:INFO:SubProcess create_model() called ==================================
2025-07-28 14:40:07,571:INFO:Initializing create_model()
2025-07-28 14:40:07,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:40:07,571:INFO:Checking exceptions
2025-07-28 14:40:07,571:INFO:Importing libraries
2025-07-28 14:40:07,571:INFO:Copying training dataset
2025-07-28 14:40:07,839:INFO:Defining folds
2025-07-28 14:40:07,840:INFO:Declaring metric variables
2025-07-28 14:40:07,840:INFO:Importing untrained model
2025-07-28 14:40:07,841:INFO:Gradient Boosting Classifier Imported successfully
2025-07-28 14:40:07,841:INFO:Starting cross validation
2025-07-28 14:40:07,842:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:51:53,553:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:51:53,610:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:53,755:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:53,872:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:55,375:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:51:55,429:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:55,543:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:55,596:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:51:55,644:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:55,649:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:55,749:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:55,849:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,140:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:51:58,185:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,289:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,384:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,534:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:51:58,576:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,588:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:51:58,630:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,677:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,724:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,768:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:51:58,813:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:01,954:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:01,988:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:02,071:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:02,152:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:02,972:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:03,009:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:03,084:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:03,164:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:03,399:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 1043, in transform
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1060, in check_array
    array = _asarray_with_order(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 519, in _asarray_with_order
    array = numpy.array(array, order=order, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:52:03,403:INFO:Calculating mean and std
2025-07-28 14:52:03,408:INFO:Creating metrics dataframe
2025-07-28 14:52:03,419:INFO:Uploading results into container
2025-07-28 14:52:03,420:INFO:Uploading model into container now
2025-07-28 14:52:03,422:INFO:_master_model_container: 23
2025-07-28 14:52:03,422:INFO:_display_container: 3
2025-07-28 14:52:03,423:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-28 14:52:03,424:INFO:create_model() successfully completed......................................
2025-07-28 14:52:03,634:INFO:SubProcess create_model() end ==================================
2025-07-28 14:52:03,634:INFO:Creating metrics dataframe
2025-07-28 14:52:03,636:INFO:Initializing Linear Discriminant Analysis
2025-07-28 14:52:03,636:INFO:Total runtime is 17.277046048641203 minutes
2025-07-28 14:52:03,636:INFO:SubProcess create_model() called ==================================
2025-07-28 14:52:03,637:INFO:Initializing create_model()
2025-07-28 14:52:03,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:52:03,637:INFO:Checking exceptions
2025-07-28 14:52:03,637:INFO:Importing libraries
2025-07-28 14:52:03,637:INFO:Copying training dataset
2025-07-28 14:52:04,005:INFO:Defining folds
2025-07-28 14:52:04,005:INFO:Declaring metric variables
2025-07-28 14:52:04,005:INFO:Importing untrained model
2025-07-28 14:52:04,005:INFO:Linear Discriminant Analysis Imported successfully
2025-07-28 14:52:04,005:INFO:Starting cross validation
2025-07-28 14:52:04,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:52:25,546:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:25,595:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:25,704:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:25,771:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:52:25,818:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:26,454:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:26,508:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:26,632:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:26,693:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:52:26,738:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:26,848:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:26,893:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:26,995:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:27,057:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:52:27,104:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,205:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:28,222:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:28,243:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,259:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,276:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:28,317:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,343:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,346:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,395:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:52:28,397:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:52:28,405:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,411:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 14:52:28,432:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,435:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,448:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,456:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:52:28,493:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,541:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,601:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:52:28,641:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:28,868:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 628, in fit
    self._solve_svd(X, y)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 511, in _solve_svd
    Xc = xp.concat(Xc, axis=0)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 310, in concat
    return numpy.concatenate(arrays, axis=axis)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210686, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:52:28,868:INFO:Calculating mean and std
2025-07-28 14:52:28,872:INFO:Creating metrics dataframe
2025-07-28 14:52:28,874:INFO:Uploading results into container
2025-07-28 14:52:28,875:INFO:Uploading model into container now
2025-07-28 14:52:28,875:INFO:_master_model_container: 24
2025-07-28 14:52:28,875:INFO:_display_container: 3
2025-07-28 14:52:28,876:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-28 14:52:28,876:INFO:create_model() successfully completed......................................
2025-07-28 14:52:29,012:INFO:SubProcess create_model() end ==================================
2025-07-28 14:52:29,013:INFO:Creating metrics dataframe
2025-07-28 14:52:29,014:INFO:Initializing Extra Trees Classifier
2025-07-28 14:52:29,014:INFO:Total runtime is 17.700014408429464 minutes
2025-07-28 14:52:29,015:INFO:SubProcess create_model() called ==================================
2025-07-28 14:52:29,015:INFO:Initializing create_model()
2025-07-28 14:52:29,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:52:29,015:INFO:Checking exceptions
2025-07-28 14:52:29,015:INFO:Importing libraries
2025-07-28 14:52:29,015:INFO:Copying training dataset
2025-07-28 14:52:29,298:INFO:Defining folds
2025-07-28 14:52:29,298:INFO:Declaring metric variables
2025-07-28 14:52:29,298:INFO:Importing untrained model
2025-07-28 14:52:29,299:INFO:Extra Trees Classifier Imported successfully
2025-07-28 14:52:29,299:INFO:Starting cross validation
2025-07-28 14:52:29,300:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:52:55,568:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:55,572:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:55,699:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:55,715:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:55,854:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:55,869:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:55,977:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:55,996:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,030:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,138:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,140:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,188:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,251:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,270:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,282:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,284:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,315:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,374:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,378:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,479:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,480:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:52:56,724:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:52:56,724:INFO:Calculating mean and std
2025-07-28 14:52:56,726:INFO:Creating metrics dataframe
2025-07-28 14:52:56,728:INFO:Uploading results into container
2025-07-28 14:52:56,728:INFO:Uploading model into container now
2025-07-28 14:52:56,728:INFO:_master_model_container: 25
2025-07-28 14:52:56,728:INFO:_display_container: 3
2025-07-28 14:52:56,729:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-28 14:52:56,729:INFO:create_model() successfully completed......................................
2025-07-28 14:52:56,847:WARNING:create_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:52:56,848:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:52:56,848:INFO:Initializing create_model()
2025-07-28 14:52:56,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:52:56,848:INFO:Checking exceptions
2025-07-28 14:52:56,848:INFO:Importing libraries
2025-07-28 14:52:56,848:INFO:Copying training dataset
2025-07-28 14:52:57,110:INFO:Defining folds
2025-07-28 14:52:57,110:INFO:Declaring metric variables
2025-07-28 14:52:57,111:INFO:Importing untrained model
2025-07-28 14:52:57,111:INFO:Extra Trees Classifier Imported successfully
2025-07-28 14:52:57,111:INFO:Starting cross validation
2025-07-28 14:52:57,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:53:14,372:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:15,107:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:15,927:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,295:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,402:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,446:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,472:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,568:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,605:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,644:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,820:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,873:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,884:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,907:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:21,943:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:22,008:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:22,027:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:22,068:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:22,130:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:22,148:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:22,190:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:22,468:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 248, in transform
    args.append(X[self._include])
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210686, 93) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:53:22,469:INFO:Calculating mean and std
2025-07-28 14:53:22,477:INFO:Creating metrics dataframe
2025-07-28 14:53:22,481:INFO:Uploading results into container
2025-07-28 14:53:22,482:INFO:Uploading model into container now
2025-07-28 14:53:22,483:INFO:_master_model_container: 26
2025-07-28 14:53:22,483:INFO:_display_container: 3
2025-07-28 14:53:22,484:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-28 14:53:22,484:INFO:create_model() successfully completed......................................
2025-07-28 14:53:22,678:INFO:SubProcess create_model() end ==================================
2025-07-28 14:53:22,678:INFO:Creating metrics dataframe
2025-07-28 14:53:22,682:INFO:Initializing Extreme Gradient Boosting
2025-07-28 14:53:22,683:INFO:Total runtime is 18.594490202267966 minutes
2025-07-28 14:53:22,683:INFO:SubProcess create_model() called ==================================
2025-07-28 14:53:22,684:INFO:Initializing create_model()
2025-07-28 14:53:22,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:53:22,685:INFO:Checking exceptions
2025-07-28 14:53:22,686:INFO:Importing libraries
2025-07-28 14:53:22,686:INFO:Copying training dataset
2025-07-28 14:53:23,387:INFO:Defining folds
2025-07-28 14:53:23,387:INFO:Declaring metric variables
2025-07-28 14:53:23,389:INFO:Importing untrained model
2025-07-28 14:53:23,389:INFO:Extreme Gradient Boosting Imported successfully
2025-07-28 14:53:23,390:INFO:Starting cross validation
2025-07-28 14:53:23,392:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:53:55,885:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,051:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,127:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,199:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,220:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,272:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,279:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,363:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,415:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,427:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,527:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,569:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,582:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,648:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,723:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,795:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,862:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:56,933:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:57,034:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:57,074:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:57,159:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:57,217:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:57,288:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:57,350:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:53:57,628:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:53:57,629:INFO:Calculating mean and std
2025-07-28 14:53:57,633:INFO:Creating metrics dataframe
2025-07-28 14:53:57,636:INFO:Uploading results into container
2025-07-28 14:53:57,637:INFO:Uploading model into container now
2025-07-28 14:53:57,637:INFO:_master_model_container: 27
2025-07-28 14:53:57,637:INFO:_display_container: 3
2025-07-28 14:53:57,640:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-28 14:53:57,640:INFO:create_model() successfully completed......................................
2025-07-28 14:53:57,841:INFO:SubProcess create_model() end ==================================
2025-07-28 14:53:57,841:INFO:Creating metrics dataframe
2025-07-28 14:53:57,844:INFO:Initializing Light Gradient Boosting Machine
2025-07-28 14:53:57,844:INFO:Total runtime is 19.180528076489768 minutes
2025-07-28 14:53:57,844:INFO:SubProcess create_model() called ==================================
2025-07-28 14:53:57,845:INFO:Initializing create_model()
2025-07-28 14:53:57,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:53:57,845:INFO:Checking exceptions
2025-07-28 14:53:57,845:INFO:Importing libraries
2025-07-28 14:53:57,845:INFO:Copying training dataset
2025-07-28 14:53:58,457:INFO:Defining folds
2025-07-28 14:53:58,457:INFO:Declaring metric variables
2025-07-28 14:53:58,457:INFO:Importing untrained model
2025-07-28 14:53:58,458:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 14:53:58,459:INFO:Starting cross validation
2025-07-28 14:53:58,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:54:35,205:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:35,491:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:35,606:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:35,644:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:35,745:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:35,881:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:36,709:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:36,844:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:37,067:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:37,462:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:37,556:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:37,584:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:37,674:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:37,703:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:37,789:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:54:38,057:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
5 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 289, in transform
    return X.rename(columns=lambda x: re.sub(self.match, "", str(x)))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:54:38,059:INFO:Calculating mean and std
2025-07-28 14:54:38,060:INFO:Creating metrics dataframe
2025-07-28 14:54:38,063:INFO:Uploading results into container
2025-07-28 14:54:38,064:INFO:Uploading model into container now
2025-07-28 14:54:38,065:INFO:_master_model_container: 28
2025-07-28 14:54:38,065:INFO:_display_container: 3
2025-07-28 14:54:38,067:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 14:54:38,067:INFO:create_model() successfully completed......................................
2025-07-28 14:54:38,271:WARNING:create_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 14:54:38,273:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 14:54:38,274:INFO:Initializing create_model()
2025-07-28 14:54:38,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:54:38,274:INFO:Checking exceptions
2025-07-28 14:54:38,274:INFO:Importing libraries
2025-07-28 14:54:38,275:INFO:Copying training dataset
2025-07-28 14:54:38,828:INFO:Defining folds
2025-07-28 14:54:38,828:INFO:Declaring metric variables
2025-07-28 14:54:38,829:INFO:Importing untrained model
2025-07-28 14:54:38,829:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 14:54:38,829:INFO:Starting cross validation
2025-07-28 14:54:38,831:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:55:30,647:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:30,789:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:30,931:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:35,615:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:35,751:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:35,891:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:36,490:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:36,579:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:36,628:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:36,714:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:36,769:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:36,848:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:37,498:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:37,686:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:37,717:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:37,892:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:37,988:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:38,002:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:38,144:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:38,184:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:38,207:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:38,311:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:38,336:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:38,467:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:38,756:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:55:38,757:INFO:Calculating mean and std
2025-07-28 14:55:38,758:INFO:Creating metrics dataframe
2025-07-28 14:55:38,762:INFO:Uploading results into container
2025-07-28 14:55:38,763:INFO:Uploading model into container now
2025-07-28 14:55:38,763:INFO:_master_model_container: 29
2025-07-28 14:55:38,763:INFO:_display_container: 3
2025-07-28 14:55:38,764:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 14:55:38,764:INFO:create_model() successfully completed......................................
2025-07-28 14:55:38,956:INFO:SubProcess create_model() end ==================================
2025-07-28 14:55:38,957:INFO:Creating metrics dataframe
2025-07-28 14:55:38,962:INFO:Initializing Dummy Classifier
2025-07-28 14:55:38,962:INFO:Total runtime is 20.865823984146118 minutes
2025-07-28 14:55:38,962:INFO:SubProcess create_model() called ==================================
2025-07-28 14:55:38,963:INFO:Initializing create_model()
2025-07-28 14:55:38,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE571EF280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:55:38,963:INFO:Checking exceptions
2025-07-28 14:55:38,963:INFO:Importing libraries
2025-07-28 14:55:38,963:INFO:Copying training dataset
2025-07-28 14:55:39,563:INFO:Defining folds
2025-07-28 14:55:39,564:INFO:Declaring metric variables
2025-07-28 14:55:39,564:INFO:Importing untrained model
2025-07-28 14:55:39,565:INFO:Dummy Classifier Imported successfully
2025-07-28 14:55:39,565:INFO:Starting cross validation
2025-07-28 14:55:39,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 14:55:46,564:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:46,691:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:46,765:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:55:46,818:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:47,347:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:47,473:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:47,545:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:55:47,597:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:47,848:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:47,972:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:48,045:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:55:48,096:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:48,564:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:48,684:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:48,754:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:55:48,800:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:48,807:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:48,924:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:48,993:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:55:49,042:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:49,213:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:49,326:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:49,378:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:49,403:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:55:49,458:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:49,502:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:49,564:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 14:55:49,612:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 14:55:49,907:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 1043, in transform
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1060, in check_array
    array = _asarray_with_order(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 519, in _asarray_with_order
    array = numpy.array(array, order=order, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 14:55:49,908:INFO:Calculating mean and std
2025-07-28 14:55:49,908:INFO:Creating metrics dataframe
2025-07-28 14:55:49,909:INFO:Uploading results into container
2025-07-28 14:55:49,910:INFO:Uploading model into container now
2025-07-28 14:55:49,910:INFO:_master_model_container: 30
2025-07-28 14:55:49,910:INFO:_display_container: 3
2025-07-28 14:55:49,910:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-07-28 14:55:49,910:INFO:create_model() successfully completed......................................
2025-07-28 14:55:50,117:INFO:SubProcess create_model() end ==================================
2025-07-28 14:55:50,117:INFO:Creating metrics dataframe
2025-07-28 14:55:50,123:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-07-28 14:55:50,124:INFO:Initializing create_model()
2025-07-28 14:55:50,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 14:55:50,124:INFO:Checking exceptions
2025-07-28 14:55:50,126:INFO:Importing libraries
2025-07-28 14:55:50,126:INFO:Copying training dataset
2025-07-28 14:55:50,737:INFO:Defining folds
2025-07-28 14:55:50,737:INFO:Declaring metric variables
2025-07-28 14:55:50,737:INFO:Importing untrained model
2025-07-28 14:55:50,737:INFO:Declaring custom model
2025-07-28 14:55:50,738:INFO:Logistic Regression Imported successfully
2025-07-28 14:55:50,739:INFO:Cross validation set to False
2025-07-28 14:55:50,740:INFO:Fitting Model
2025-07-28 14:55:53,932:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-28 14:55:53,933:INFO:create_model() successfully completed......................................
2025-07-28 14:55:54,146:INFO:_master_model_container: 30
2025-07-28 14:55:54,146:INFO:_display_container: 3
2025-07-28 14:55:54,146:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-28 14:55:54,146:INFO:compare_models() successfully completed......................................
2025-07-28 14:55:54,149:INFO:Initializing tune_model()
2025-07-28 14:55:54,149:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 14:55:54,149:INFO:Checking exceptions
2025-07-28 14:55:54,379:INFO:Copying training dataset
2025-07-28 14:55:54,752:INFO:Checking base model
2025-07-28 14:55:54,752:INFO:Base model : Logistic Regression
2025-07-28 14:55:54,753:INFO:Declaring metric variables
2025-07-28 14:55:54,753:INFO:Defining Hyperparameters
2025-07-28 14:55:54,934:INFO:Tuning with n_jobs=-1
2025-07-28 14:55:54,934:INFO:Initializing RandomizedSearchCV
2025-07-28 17:09:02,045:INFO:Initializing compare_models()
2025-07-28 17:09:02,047:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-07-28 17:09:02,048:INFO:Checking exceptions
2025-07-28 17:09:02,321:INFO:Preparing display monitor
2025-07-28 17:09:02,333:INFO:Initializing Logistic Regression
2025-07-28 17:09:02,335:INFO:Total runtime is 1.6617774963378907e-05 minutes
2025-07-28 17:09:02,335:INFO:SubProcess create_model() called ==================================
2025-07-28 17:09:02,336:INFO:Initializing create_model()
2025-07-28 17:09:02,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:09:02,337:INFO:Checking exceptions
2025-07-28 17:09:02,337:INFO:Importing libraries
2025-07-28 17:09:02,337:INFO:Copying training dataset
2025-07-28 17:09:02,602:INFO:Defining folds
2025-07-28 17:09:02,602:INFO:Declaring metric variables
2025-07-28 17:09:02,602:INFO:Importing untrained model
2025-07-28 17:09:02,604:INFO:Logistic Regression Imported successfully
2025-07-28 17:09:02,604:INFO:Starting cross validation
2025-07-28 17:09:02,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:09:15,669:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:09:15,705:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:09:15,764:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:09:15,785:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:09:15,797:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:09:15,861:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:09:15,873:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:09:15,949:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:09:16,172:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
5 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:09:16,174:INFO:Calculating mean and std
2025-07-28 17:09:16,176:INFO:Creating metrics dataframe
2025-07-28 17:09:16,182:INFO:Uploading results into container
2025-07-28 17:09:16,183:INFO:Uploading model into container now
2025-07-28 17:09:16,184:INFO:_master_model_container: 31
2025-07-28 17:09:16,184:INFO:_display_container: 4
2025-07-28 17:09:16,185:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-28 17:09:16,185:INFO:create_model() successfully completed......................................
2025-07-28 17:09:16,693:WARNING:create_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:09:16,694:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 17:09:16,694:INFO:Initializing create_model()
2025-07-28 17:09:16,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:09:16,694:INFO:Checking exceptions
2025-07-28 17:09:16,694:INFO:Importing libraries
2025-07-28 17:09:16,694:INFO:Copying training dataset
2025-07-28 17:09:16,970:INFO:Defining folds
2025-07-28 17:09:16,970:INFO:Declaring metric variables
2025-07-28 17:09:16,970:INFO:Importing untrained model
2025-07-28 17:09:16,970:INFO:Logistic Regression Imported successfully
2025-07-28 17:09:16,971:INFO:Starting cross validation
2025-07-28 17:09:16,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:09:22,039:ERROR:create_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception or returned all 0.0:
2025-07-28 17:09:22,041:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32

2025-07-28 17:09:22,044:INFO:Initializing K Neighbors Classifier
2025-07-28 17:09:22,044:INFO:Total runtime is 0.32852075894673666 minutes
2025-07-28 17:09:22,045:INFO:SubProcess create_model() called ==================================
2025-07-28 17:09:22,045:INFO:Initializing create_model()
2025-07-28 17:09:22,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:09:22,045:INFO:Checking exceptions
2025-07-28 17:09:22,045:INFO:Importing libraries
2025-07-28 17:09:22,045:INFO:Copying training dataset
2025-07-28 17:09:22,396:INFO:Defining folds
2025-07-28 17:09:22,396:INFO:Declaring metric variables
2025-07-28 17:09:22,397:INFO:Importing untrained model
2025-07-28 17:09:22,397:INFO:K Neighbors Classifier Imported successfully
2025-07-28 17:09:22,397:INFO:Starting cross validation
2025-07-28 17:09:22,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:09:29,814:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:09:29,815:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-07-28 17:09:29,815:INFO:Initializing create_model()
2025-07-28 17:09:29,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:09:29,815:INFO:Checking exceptions
2025-07-28 17:09:29,815:INFO:Importing libraries
2025-07-28 17:09:29,815:INFO:Copying training dataset
2025-07-28 17:09:30,162:INFO:Defining folds
2025-07-28 17:09:30,163:INFO:Declaring metric variables
2025-07-28 17:09:30,163:INFO:Importing untrained model
2025-07-28 17:09:30,163:INFO:K Neighbors Classifier Imported successfully
2025-07-28 17:09:30,163:INFO:Starting cross validation
2025-07-28 17:09:30,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:11:17,207:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:17,296:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:17,339:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:17,385:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:17,428:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:17,516:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:17,960:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:17,990:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:18,036:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:18,068:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:18,112:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:18,146:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:18,378:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 308, in get_dummies
    base_df = base_df.set_index(X.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 1.61 MiB for an array with shape (1, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 307, in get_dummies
    base_df = mod.reindex(X[col].fillna(-2))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5141, in reindex
    return super().reindex(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5521, in reindex
    return self._reindex_axes(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5549, in _reindex_axes
    obj = obj._reindex_with_indexers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5597, in _reindex_with_indexers
    new_data = new_data.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 1.61 MiB for an array with shape (210685, 1) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 267, in transform
    new_X = X if X is None else X.set_index(new_y.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:11:18,379:INFO:Calculating mean and std
2025-07-28 17:11:18,383:INFO:Creating metrics dataframe
2025-07-28 17:11:18,386:INFO:Uploading results into container
2025-07-28 17:11:18,387:INFO:Uploading model into container now
2025-07-28 17:11:18,387:INFO:_master_model_container: 32
2025-07-28 17:11:18,387:INFO:_display_container: 4
2025-07-28 17:11:18,387:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-28 17:11:18,387:INFO:create_model() successfully completed......................................
2025-07-28 17:11:18,505:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2025-07-28 17:11:18,506:ERROR:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 17:11:18,508:INFO:Initializing Naive Bayes
2025-07-28 17:11:18,509:INFO:Total runtime is 2.2696105003356934 minutes
2025-07-28 17:11:18,509:INFO:SubProcess create_model() called ==================================
2025-07-28 17:11:18,509:INFO:Initializing create_model()
2025-07-28 17:11:18,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:11:18,509:INFO:Checking exceptions
2025-07-28 17:11:18,509:INFO:Importing libraries
2025-07-28 17:11:18,509:INFO:Copying training dataset
2025-07-28 17:11:18,774:INFO:Defining folds
2025-07-28 17:11:18,774:INFO:Declaring metric variables
2025-07-28 17:11:18,774:INFO:Importing untrained model
2025-07-28 17:11:18,775:INFO:Naive Bayes Imported successfully
2025-07-28 17:11:18,775:INFO:Starting cross validation
2025-07-28 17:11:18,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:11:26,008:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:26,085:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:26,164:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:26,390:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
9 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210685) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 178, in _reorder_cols
    return new_df[columns]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 156, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype, order="F")
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 1.61 MiB for an array with shape (210686, 1) and data type object

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:11:26,393:INFO:Calculating mean and std
2025-07-28 17:11:26,397:INFO:Creating metrics dataframe
2025-07-28 17:11:26,399:INFO:Uploading results into container
2025-07-28 17:11:26,399:INFO:Uploading model into container now
2025-07-28 17:11:26,400:INFO:_master_model_container: 33
2025-07-28 17:11:26,400:INFO:_display_container: 4
2025-07-28 17:11:26,400:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-28 17:11:26,400:INFO:create_model() successfully completed......................................
2025-07-28 17:11:26,509:WARNING:create_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:11:26,510:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 17:11:26,510:INFO:Initializing create_model()
2025-07-28 17:11:26,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:11:26,510:INFO:Checking exceptions
2025-07-28 17:11:26,510:INFO:Importing libraries
2025-07-28 17:11:26,510:INFO:Copying training dataset
2025-07-28 17:11:26,779:INFO:Defining folds
2025-07-28 17:11:26,779:INFO:Declaring metric variables
2025-07-28 17:11:26,779:INFO:Importing untrained model
2025-07-28 17:11:26,780:INFO:Naive Bayes Imported successfully
2025-07-28 17:11:26,780:INFO:Starting cross validation
2025-07-28 17:11:26,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:11:30,679:ERROR:create_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception or returned all 0.0:
2025-07-28 17:11:30,679:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 17:11:30,679:INFO:Initializing Decision Tree Classifier
2025-07-28 17:11:30,679:INFO:Total runtime is 2.4724382321039835 minutes
2025-07-28 17:11:30,679:INFO:SubProcess create_model() called ==================================
2025-07-28 17:11:30,680:INFO:Initializing create_model()
2025-07-28 17:11:30,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:11:30,680:INFO:Checking exceptions
2025-07-28 17:11:30,680:INFO:Importing libraries
2025-07-28 17:11:30,680:INFO:Copying training dataset
2025-07-28 17:11:31,031:INFO:Defining folds
2025-07-28 17:11:31,031:INFO:Declaring metric variables
2025-07-28 17:11:31,032:INFO:Importing untrained model
2025-07-28 17:11:31,032:INFO:Decision Tree Classifier Imported successfully
2025-07-28 17:11:31,032:INFO:Starting cross validation
2025-07-28 17:11:31,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:11:38,599:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:11:38,599:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 158, in _safe_split
    X_subset = _safe_indexing(X, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (210686, 1) and data type float32

2025-07-28 17:11:38,600:INFO:Initializing create_model()
2025-07-28 17:11:38,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:11:38,600:INFO:Checking exceptions
2025-07-28 17:11:38,600:INFO:Importing libraries
2025-07-28 17:11:38,600:INFO:Copying training dataset
2025-07-28 17:11:38,899:INFO:Defining folds
2025-07-28 17:11:38,899:INFO:Declaring metric variables
2025-07-28 17:11:38,900:INFO:Importing untrained model
2025-07-28 17:11:38,900:INFO:Decision Tree Classifier Imported successfully
2025-07-28 17:11:38,900:INFO:Starting cross validation
2025-07-28 17:11:38,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:11:49,744:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:49,830:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:49,915:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,185:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,270:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,357:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,398:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,455:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,481:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,539:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,565:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,620:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:11:50,849:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:11:50,850:INFO:Calculating mean and std
2025-07-28 17:11:50,855:INFO:Creating metrics dataframe
2025-07-28 17:11:50,858:INFO:Uploading results into container
2025-07-28 17:11:50,859:INFO:Uploading model into container now
2025-07-28 17:11:50,859:INFO:_master_model_container: 34
2025-07-28 17:11:50,859:INFO:_display_container: 4
2025-07-28 17:11:50,859:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-07-28 17:11:50,859:INFO:create_model() successfully completed......................................
2025-07-28 17:11:50,976:INFO:SubProcess create_model() end ==================================
2025-07-28 17:11:50,976:INFO:Creating metrics dataframe
2025-07-28 17:11:50,979:INFO:Initializing SVM - Linear Kernel
2025-07-28 17:11:50,979:INFO:Total runtime is 2.8107778072357177 minutes
2025-07-28 17:11:50,979:INFO:SubProcess create_model() called ==================================
2025-07-28 17:11:50,979:INFO:Initializing create_model()
2025-07-28 17:11:50,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:11:50,979:INFO:Checking exceptions
2025-07-28 17:11:50,979:INFO:Importing libraries
2025-07-28 17:11:50,979:INFO:Copying training dataset
2025-07-28 17:11:51,238:INFO:Defining folds
2025-07-28 17:11:51,238:INFO:Declaring metric variables
2025-07-28 17:11:51,238:INFO:Importing untrained model
2025-07-28 17:11:51,239:INFO:SVM - Linear Kernel Imported successfully
2025-07-28 17:11:51,239:INFO:Starting cross validation
2025-07-28 17:11:51,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:12:00,118:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:00,130:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:00,149:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:00,153:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,165:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,185:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,237:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,250:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,268:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,321:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,333:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,353:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:00,593:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
7 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 178, in _reorder_cols
    return new_df[columns]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:12:00,594:INFO:Calculating mean and std
2025-07-28 17:12:00,596:INFO:Creating metrics dataframe
2025-07-28 17:12:00,599:INFO:Uploading results into container
2025-07-28 17:12:00,599:INFO:Uploading model into container now
2025-07-28 17:12:00,599:INFO:_master_model_container: 35
2025-07-28 17:12:00,599:INFO:_display_container: 4
2025-07-28 17:12:00,600:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-28 17:12:00,600:INFO:create_model() successfully completed......................................
2025-07-28 17:12:00,710:WARNING:create_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:12:00,711:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 17:12:00,711:INFO:Initializing create_model()
2025-07-28 17:12:00,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:12:00,711:INFO:Checking exceptions
2025-07-28 17:12:00,711:INFO:Importing libraries
2025-07-28 17:12:00,711:INFO:Copying training dataset
2025-07-28 17:12:00,973:INFO:Defining folds
2025-07-28 17:12:00,973:INFO:Declaring metric variables
2025-07-28 17:12:00,973:INFO:Importing untrained model
2025-07-28 17:12:00,974:INFO:SVM - Linear Kernel Imported successfully
2025-07-28 17:12:00,974:INFO:Starting cross validation
2025-07-28 17:12:00,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:12:07,196:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:07,238:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:07,326:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:07,414:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:07,428:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:07,464:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:07,548:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:07,626:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:07,854:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:12:07,855:INFO:Calculating mean and std
2025-07-28 17:12:07,857:INFO:Creating metrics dataframe
2025-07-28 17:12:07,859:INFO:Uploading results into container
2025-07-28 17:12:07,859:INFO:Uploading model into container now
2025-07-28 17:12:07,860:INFO:_master_model_container: 36
2025-07-28 17:12:07,860:INFO:_display_container: 4
2025-07-28 17:12:07,860:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-28 17:12:07,860:INFO:create_model() successfully completed......................................
2025-07-28 17:12:07,968:ERROR:create_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception or returned all 0.0:
2025-07-28 17:12:07,969:ERROR:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 17:12:07,969:INFO:Initializing Ridge Classifier
2025-07-28 17:12:07,969:INFO:Total runtime is 3.0939418792724607 minutes
2025-07-28 17:12:07,969:INFO:SubProcess create_model() called ==================================
2025-07-28 17:12:07,969:INFO:Initializing create_model()
2025-07-28 17:12:07,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:12:07,969:INFO:Checking exceptions
2025-07-28 17:12:07,969:INFO:Importing libraries
2025-07-28 17:12:07,969:INFO:Copying training dataset
2025-07-28 17:12:08,235:INFO:Defining folds
2025-07-28 17:12:08,235:INFO:Declaring metric variables
2025-07-28 17:12:08,235:INFO:Importing untrained model
2025-07-28 17:12:08,235:INFO:Ridge Classifier Imported successfully
2025-07-28 17:12:08,236:INFO:Starting cross validation
2025-07-28 17:12:08,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:12:12,365:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:12:12,366:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 887, in _fit_and_score
    X_train, y_train = _safe_split(estimator, X, y, train)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\metaestimators.py", line 161, in _safe_split
    y_subset = _safe_indexing(y, indices)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 407, in _safe_indexing
    return _pandas_indexing(X, indices, indices_dtype, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\__init__.py", line 219, in _pandas_indexing
    return X.take(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 876, in take
    new_labels = self.axes[axis].take(indexer)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexes\base.py", line 1159, in take
    taken = algos.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\algorithms.py", line 1319, in take
    result = arr.take(indices, axis=axis)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 1.61 MiB for an array with shape (210686,) and data type int64
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 1.61 MiB for an array with shape (210686,) and data type int64

2025-07-28 17:12:12,366:INFO:Initializing create_model()
2025-07-28 17:12:12,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:12:12,367:INFO:Checking exceptions
2025-07-28 17:12:12,367:INFO:Importing libraries
2025-07-28 17:12:12,367:INFO:Copying training dataset
2025-07-28 17:12:12,664:INFO:Defining folds
2025-07-28 17:12:12,665:INFO:Declaring metric variables
2025-07-28 17:12:12,665:INFO:Importing untrained model
2025-07-28 17:12:12,666:INFO:Ridge Classifier Imported successfully
2025-07-28 17:12:12,666:INFO:Starting cross validation
2025-07-28 17:12:12,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:12:20,606:ERROR:create_model() for ridge raised an exception or returned all 0.0:
2025-07-28 17:12:20,607:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 17:12:20,607:INFO:Initializing Random Forest Classifier
2025-07-28 17:12:20,607:INFO:Total runtime is 3.304566395282745 minutes
2025-07-28 17:12:20,607:INFO:SubProcess create_model() called ==================================
2025-07-28 17:12:20,608:INFO:Initializing create_model()
2025-07-28 17:12:20,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:12:20,608:INFO:Checking exceptions
2025-07-28 17:12:20,608:INFO:Importing libraries
2025-07-28 17:12:20,608:INFO:Copying training dataset
2025-07-28 17:12:20,964:INFO:Defining folds
2025-07-28 17:12:20,964:INFO:Declaring metric variables
2025-07-28 17:12:20,964:INFO:Importing untrained model
2025-07-28 17:12:20,965:INFO:Random Forest Classifier Imported successfully
2025-07-28 17:12:20,965:INFO:Starting cross validation
2025-07-28 17:12:20,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:12:28,457:WARNING:create_model() for rf raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:12:28,458:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\__init__.py", line 14, in <module>
    from category_encoders.glmm import GLMMEncoder
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\glmm.py", line 8, in <module>
    import statsmodels.formula.api as smf
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\statsmodels\formula\api.py", line 8, in <module>
    import statsmodels.duration.hazard_regression as hr_
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 879, in exec_module
  File "<frozen importlib._bootstrap_external>", line 975, in get_code
  File "<frozen importlib._bootstrap_external>", line 1074, in get_data
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 17:12:28,458:INFO:Initializing create_model()
2025-07-28 17:12:28,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:12:28,458:INFO:Checking exceptions
2025-07-28 17:12:28,458:INFO:Importing libraries
2025-07-28 17:12:28,458:INFO:Copying training dataset
2025-07-28 17:12:28,759:INFO:Defining folds
2025-07-28 17:12:28,759:INFO:Declaring metric variables
2025-07-28 17:12:28,760:INFO:Importing untrained model
2025-07-28 17:12:28,760:INFO:Random Forest Classifier Imported successfully
2025-07-28 17:12:28,760:INFO:Starting cross validation
2025-07-28 17:12:28,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:12:36,730:ERROR:create_model() for rf raised an exception or returned all 0.0:
2025-07-28 17:12:36,731:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 17:12:36,731:INFO:Initializing Quadratic Discriminant Analysis
2025-07-28 17:12:36,731:INFO:Total runtime is 3.573298426469167 minutes
2025-07-28 17:12:36,731:INFO:SubProcess create_model() called ==================================
2025-07-28 17:12:36,731:INFO:Initializing create_model()
2025-07-28 17:12:36,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:12:36,731:INFO:Checking exceptions
2025-07-28 17:12:36,731:INFO:Importing libraries
2025-07-28 17:12:36,731:INFO:Copying training dataset
2025-07-28 17:12:37,037:INFO:Defining folds
2025-07-28 17:12:37,037:INFO:Declaring metric variables
2025-07-28 17:12:37,037:INFO:Importing untrained model
2025-07-28 17:12:37,038:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-28 17:12:37,038:INFO:Starting cross validation
2025-07-28 17:12:37,039:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:12:45,368:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:12:45,368:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 17:12:45,368:INFO:Initializing create_model()
2025-07-28 17:12:45,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:12:45,369:INFO:Checking exceptions
2025-07-28 17:12:45,369:INFO:Importing libraries
2025-07-28 17:12:45,369:INFO:Copying training dataset
2025-07-28 17:12:45,679:INFO:Defining folds
2025-07-28 17:12:45,680:INFO:Declaring metric variables
2025-07-28 17:12:45,680:INFO:Importing untrained model
2025-07-28 17:12:45,680:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-28 17:12:45,681:INFO:Starting cross validation
2025-07-28 17:12:45,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:12:56,156:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 17:12:56,630:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 17:12:56,852:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 17:12:56,914:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 17:12:57,867:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:57,910:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,008:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,106:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,221:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:58,263:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,360:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,452:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,464:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:58,502:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

his is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:12:58,541:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,592:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,631:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,678:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,717:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:12:58,949:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210685) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:12:58,949:INFO:Calculating mean and std
2025-07-28 17:12:58,952:INFO:Creating metrics dataframe
2025-07-28 17:12:58,953:INFO:Uploading results into container
2025-07-28 17:12:58,953:INFO:Uploading model into container now
2025-07-28 17:12:58,955:INFO:_master_model_container: 37
2025-07-28 17:12:58,955:INFO:_display_container: 4
2025-07-28 17:12:58,955:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-28 17:12:58,955:INFO:create_model() successfully completed......................................
2025-07-28 17:12:59,070:ERROR:create_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception or returned all 0.0:
2025-07-28 17:12:59,071:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 122, in get
    return _ForkingPickler.loads(res)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 17:12:59,074:INFO:Initializing Ada Boost Classifier
2025-07-28 17:12:59,074:INFO:Total runtime is 3.9456851840019223 minutes
2025-07-28 17:12:59,074:INFO:SubProcess create_model() called ==================================
2025-07-28 17:12:59,074:INFO:Initializing create_model()
2025-07-28 17:12:59,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:12:59,074:INFO:Checking exceptions
2025-07-28 17:12:59,074:INFO:Importing libraries
2025-07-28 17:12:59,074:INFO:Copying training dataset
2025-07-28 17:12:59,353:INFO:Defining folds
2025-07-28 17:12:59,353:INFO:Declaring metric variables
2025-07-28 17:12:59,354:INFO:Importing untrained model
2025-07-28 17:12:59,354:INFO:Ada Boost Classifier Imported successfully
2025-07-28 17:12:59,354:INFO:Starting cross validation
2025-07-28 17:12:59,355:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:13:06,466:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 17:13:06,705:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 17:13:30,898:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:13:30,936:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:13:31,028:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:13:31,079:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:13:31,116:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:13:31,120:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:13:31,156:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:13:31,243:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:13:31,294:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:13:31,330:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:13:31,561:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:13:31,561:INFO:Calculating mean and std
2025-07-28 17:13:31,563:INFO:Creating metrics dataframe
2025-07-28 17:13:31,565:INFO:Uploading results into container
2025-07-28 17:13:31,565:INFO:Uploading model into container now
2025-07-28 17:13:31,566:INFO:_master_model_container: 38
2025-07-28 17:13:31,566:INFO:_display_container: 4
2025-07-28 17:13:31,566:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-28 17:13:31,566:INFO:create_model() successfully completed......................................
2025-07-28 17:13:31,683:WARNING:create_model() for AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:13:31,683:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 17:13:31,684:INFO:Initializing create_model()
2025-07-28 17:13:31,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:13:31,684:INFO:Checking exceptions
2025-07-28 17:13:31,684:INFO:Importing libraries
2025-07-28 17:13:31,684:INFO:Copying training dataset
2025-07-28 17:13:31,959:INFO:Defining folds
2025-07-28 17:13:31,959:INFO:Declaring metric variables
2025-07-28 17:13:31,959:INFO:Importing untrained model
2025-07-28 17:13:31,959:INFO:Ada Boost Classifier Imported successfully
2025-07-28 17:13:31,959:INFO:Starting cross validation
2025-07-28 17:13:31,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:13:38,070:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 17:13:38,073:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 17:14:02,311:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:14:02,315:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:14:02,347:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:14:02,350:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:14:02,430:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:14:02,433:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:14:02,477:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:14:02,480:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:14:02,510:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:14:02,514:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:14:02,737:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:14:02,738:INFO:Calculating mean and std
2025-07-28 17:14:02,739:INFO:Creating metrics dataframe
2025-07-28 17:14:02,741:INFO:Uploading results into container
2025-07-28 17:14:02,741:INFO:Uploading model into container now
2025-07-28 17:14:02,741:INFO:_master_model_container: 39
2025-07-28 17:14:02,741:INFO:_display_container: 4
2025-07-28 17:14:02,741:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-28 17:14:02,741:INFO:create_model() successfully completed......................................
2025-07-28 17:14:02,858:INFO:SubProcess create_model() end ==================================
2025-07-28 17:14:02,858:INFO:Creating metrics dataframe
2025-07-28 17:14:02,860:INFO:Initializing Gradient Boosting Classifier
2025-07-28 17:14:02,860:INFO:Total runtime is 5.008785617351531 minutes
2025-07-28 17:14:02,860:INFO:SubProcess create_model() called ==================================
2025-07-28 17:14:02,860:INFO:Initializing create_model()
2025-07-28 17:14:02,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:14:02,861:INFO:Checking exceptions
2025-07-28 17:14:02,861:INFO:Importing libraries
2025-07-28 17:14:02,861:INFO:Copying training dataset
2025-07-28 17:14:03,122:INFO:Defining folds
2025-07-28 17:14:03,122:INFO:Declaring metric variables
2025-07-28 17:14:03,122:INFO:Importing untrained model
2025-07-28 17:14:03,123:INFO:Gradient Boosting Classifier Imported successfully
2025-07-28 17:14:03,123:INFO:Starting cross validation
2025-07-28 17:14:03,124:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:14:07,192:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:14:07,193:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\queues.py", line 159, in _feed
    obj_ = dumps(obj, reducers=reducers)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 215, in dumps
    dump(obj, buf, reducers=reducers, protocol=protocol)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 208, in dump
    _LokyPickler(file, reducers=reducers, protocol=protocol).dump(obj)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\cloudpickle\cloudpickle_fast.py", line 632, in dump
    return Pickler.dump(self, obj)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-07-28 17:14:07,193:INFO:Initializing create_model()
2025-07-28 17:14:07,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:14:07,194:INFO:Checking exceptions
2025-07-28 17:14:07,194:INFO:Importing libraries
2025-07-28 17:14:07,194:INFO:Copying training dataset
2025-07-28 17:14:07,693:INFO:Defining folds
2025-07-28 17:14:07,693:INFO:Declaring metric variables
2025-07-28 17:14:07,694:INFO:Importing untrained model
2025-07-28 17:14:07,694:INFO:Gradient Boosting Classifier Imported successfully
2025-07-28 17:14:07,694:INFO:Starting cross validation
2025-07-28 17:14:07,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:21:56,364:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:21:56,401:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:21:56,489:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:21:56,575:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:21:58,644:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:21:58,676:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:21:58,751:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:21:58,827:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:01,215:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:22:01,249:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:01,325:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:01,402:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:01,632:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
7 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210685) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (1, 210686) and data type int32

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:22:01,634:INFO:Calculating mean and std
2025-07-28 17:22:01,639:INFO:Creating metrics dataframe
2025-07-28 17:22:01,642:INFO:Uploading results into container
2025-07-28 17:22:01,642:INFO:Uploading model into container now
2025-07-28 17:22:01,642:INFO:_master_model_container: 40
2025-07-28 17:22:01,643:INFO:_display_container: 4
2025-07-28 17:22:01,643:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-28 17:22:01,643:INFO:create_model() successfully completed......................................
2025-07-28 17:22:01,764:INFO:SubProcess create_model() end ==================================
2025-07-28 17:22:01,765:INFO:Creating metrics dataframe
2025-07-28 17:22:01,766:INFO:Initializing Linear Discriminant Analysis
2025-07-28 17:22:01,766:INFO:Total runtime is 12.990552377700805 minutes
2025-07-28 17:22:01,766:INFO:SubProcess create_model() called ==================================
2025-07-28 17:22:01,766:INFO:Initializing create_model()
2025-07-28 17:22:01,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:22:01,766:INFO:Checking exceptions
2025-07-28 17:22:01,766:INFO:Importing libraries
2025-07-28 17:22:01,766:INFO:Copying training dataset
2025-07-28 17:22:02,040:INFO:Defining folds
2025-07-28 17:22:02,040:INFO:Declaring metric variables
2025-07-28 17:22:02,041:INFO:Importing untrained model
2025-07-28 17:22:02,041:INFO:Linear Discriminant Analysis Imported successfully
2025-07-28 17:22:02,041:INFO:Starting cross validation
2025-07-28 17:22:02,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:22:15,508:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:22:15,545:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:15,635:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:15,686:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:22:15,725:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:18,520:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:22:18,560:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:18,649:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:18,699:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:22:18,736:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:18,828:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:22:18,863:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:18,949:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:18,997:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:22:19,031:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:19,097:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:22:19,130:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:19,207:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:19,250:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:22:19,283:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:19,502:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 178, in _reorder_cols
    return new_df[columns]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 628, in fit
    self._solve_svd(X, y)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 522, in _solve_svd
    U, S, Vt = svd(X, full_matrices=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\scipy\linalg\_decomp_svd.py", line 127, in svd
    u, s, v, info = gesXd(a1, compute_uv=compute_uv, lwork=lwork,
TypeError: _ArrayMemoryError.__init__() missing 1 required positional argument: 'dtype'

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 628, in fit
    self._solve_svd(X, y)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 507, in _solve_svd
    Xc.append(Xg - self.means_[idx, :])
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 35.8 MiB for an array with shape (50400, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:22:19,503:INFO:Calculating mean and std
2025-07-28 17:22:19,511:INFO:Creating metrics dataframe
2025-07-28 17:22:19,514:INFO:Uploading results into container
2025-07-28 17:22:19,515:INFO:Uploading model into container now
2025-07-28 17:22:19,515:INFO:_master_model_container: 41
2025-07-28 17:22:19,515:INFO:_display_container: 4
2025-07-28 17:22:19,515:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-28 17:22:19,515:INFO:create_model() successfully completed......................................
2025-07-28 17:22:19,637:WARNING:create_model() for LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:22:19,637:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 17:22:19,637:INFO:Initializing create_model()
2025-07-28 17:22:19,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:22:19,638:INFO:Checking exceptions
2025-07-28 17:22:19,638:INFO:Importing libraries
2025-07-28 17:22:19,638:INFO:Copying training dataset
2025-07-28 17:22:19,909:INFO:Defining folds
2025-07-28 17:22:19,909:INFO:Declaring metric variables
2025-07-28 17:22:19,909:INFO:Importing untrained model
2025-07-28 17:22:19,909:INFO:Linear Discriminant Analysis Imported successfully
2025-07-28 17:22:19,909:INFO:Starting cross validation
2025-07-28 17:22:19,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:22:30,826:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 17:22:30,858:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:30,858:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:30,934:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:30,977:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:22:30,977:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:22:31,008:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:31,010:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:31,227:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 308, in get_dummies
    base_df = base_df.set_index(X.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 1.61 MiB for an array with shape (1, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 314, in get_dummies
    X = X.reindex(columns=cols)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5141, in reindex
    return super().reindex(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5521, in reindex
    return self._reindex_axes(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5549, in _reindex_axes
    obj = obj._reindex_with_indexers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5597, in _reindex_with_indexers
    new_data = new_data.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:22:31,228:INFO:Calculating mean and std
2025-07-28 17:22:31,228:INFO:Creating metrics dataframe
2025-07-28 17:22:31,230:INFO:Uploading results into container
2025-07-28 17:22:31,231:INFO:Uploading model into container now
2025-07-28 17:22:31,231:INFO:_master_model_container: 42
2025-07-28 17:22:31,231:INFO:_display_container: 4
2025-07-28 17:22:31,231:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-28 17:22:31,231:INFO:create_model() successfully completed......................................
2025-07-28 17:22:31,348:ERROR:create_model() for LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) raised an exception or returned all 0.0:
2025-07-28 17:22:31,348:ERROR:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 17:22:31,348:INFO:Initializing Extra Trees Classifier
2025-07-28 17:22:31,348:INFO:Total runtime is 13.483592128753662 minutes
2025-07-28 17:22:31,349:INFO:SubProcess create_model() called ==================================
2025-07-28 17:22:31,349:INFO:Initializing create_model()
2025-07-28 17:22:31,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:22:31,349:INFO:Checking exceptions
2025-07-28 17:22:31,349:INFO:Importing libraries
2025-07-28 17:22:31,349:INFO:Copying training dataset
2025-07-28 17:22:31,616:INFO:Defining folds
2025-07-28 17:22:31,616:INFO:Declaring metric variables
2025-07-28 17:22:31,616:INFO:Importing untrained model
2025-07-28 17:22:31,616:INFO:Extra Trees Classifier Imported successfully
2025-07-28 17:22:31,617:INFO:Starting cross validation
2025-07-28 17:22:31,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:22:41,692:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:41,722:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:41,777:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:41,803:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:41,856:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:41,881:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:22:42,097:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (1, 210685) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 823. KiB for an array with shape (1, 210685) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 912, in partial_fit
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:22:42,100:INFO:Calculating mean and std
2025-07-28 17:22:42,100:INFO:Creating metrics dataframe
2025-07-28 17:22:42,105:INFO:Uploading results into container
2025-07-28 17:22:42,106:INFO:Uploading model into container now
2025-07-28 17:22:42,107:INFO:_master_model_container: 43
2025-07-28 17:22:42,107:INFO:_display_container: 4
2025-07-28 17:22:42,107:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-28 17:22:42,108:INFO:create_model() successfully completed......................................
2025-07-28 17:22:42,221:WARNING:create_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:22:42,221:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 17:22:42,221:INFO:Initializing create_model()
2025-07-28 17:22:42,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:22:42,222:INFO:Checking exceptions
2025-07-28 17:22:42,222:INFO:Importing libraries
2025-07-28 17:22:42,222:INFO:Copying training dataset
2025-07-28 17:22:42,493:INFO:Defining folds
2025-07-28 17:22:42,493:INFO:Declaring metric variables
2025-07-28 17:22:42,493:INFO:Importing untrained model
2025-07-28 17:22:42,493:INFO:Extra Trees Classifier Imported successfully
2025-07-28 17:22:42,493:INFO:Starting cross validation
2025-07-28 17:22:42,494:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:22:45,669:ERROR:create_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception or returned all 0.0:
2025-07-28 17:22:45,671:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\queues.py", line 159, in _feed
    obj_ = dumps(obj, reducers=reducers)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 215, in dumps
    dump(obj, buf, reducers=reducers, protocol=protocol)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 208, in dump
    _LokyPickler(file, reducers=reducers, protocol=protocol).dump(obj)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\cloudpickle\cloudpickle_fast.py", line 632, in dump
    return Pickler.dump(self, obj)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-07-28 17:22:45,671:INFO:Initializing Extreme Gradient Boosting
2025-07-28 17:22:45,671:INFO:Total runtime is 13.722297994295756 minutes
2025-07-28 17:22:45,672:INFO:SubProcess create_model() called ==================================
2025-07-28 17:22:45,672:INFO:Initializing create_model()
2025-07-28 17:22:45,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:22:45,672:INFO:Checking exceptions
2025-07-28 17:22:45,672:INFO:Importing libraries
2025-07-28 17:22:45,672:INFO:Copying training dataset
2025-07-28 17:22:45,942:INFO:Defining folds
2025-07-28 17:22:45,942:INFO:Declaring metric variables
2025-07-28 17:22:45,942:INFO:Importing untrained model
2025-07-28 17:22:45,944:INFO:Extreme Gradient Boosting Imported successfully
2025-07-28 17:22:45,944:INFO:Starting cross validation
2025-07-28 17:22:45,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:23:08,582:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,592:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,661:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,671:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,688:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,749:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,758:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,776:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,835:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,863:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:08,955:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:09,042:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:09,263:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2242, in _merge_blocks
    new_values = np.vstack([b.values for b in blocks])  # type: ignore[misc]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\shape_base.py", line 289, in vstack
    return _nx.concatenate(arrs, 0, dtype=dtype, casting=casting)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:23:09,264:INFO:Calculating mean and std
2025-07-28 17:23:09,264:INFO:Creating metrics dataframe
2025-07-28 17:23:09,267:INFO:Uploading results into container
2025-07-28 17:23:09,267:INFO:Uploading model into container now
2025-07-28 17:23:09,267:INFO:_master_model_container: 44
2025-07-28 17:23:09,267:INFO:_display_container: 4
2025-07-28 17:23:09,268:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-28 17:23:09,268:INFO:create_model() successfully completed......................................
2025-07-28 17:23:09,387:INFO:SubProcess create_model() end ==================================
2025-07-28 17:23:09,388:INFO:Creating metrics dataframe
2025-07-28 17:23:09,390:INFO:Initializing Light Gradient Boosting Machine
2025-07-28 17:23:09,390:INFO:Total runtime is 14.117614448070526 minutes
2025-07-28 17:23:09,390:INFO:SubProcess create_model() called ==================================
2025-07-28 17:23:09,390:INFO:Initializing create_model()
2025-07-28 17:23:09,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:23:09,390:INFO:Checking exceptions
2025-07-28 17:23:09,390:INFO:Importing libraries
2025-07-28 17:23:09,390:INFO:Copying training dataset
2025-07-28 17:23:09,648:INFO:Defining folds
2025-07-28 17:23:09,649:INFO:Declaring metric variables
2025-07-28 17:23:09,649:INFO:Importing untrained model
2025-07-28 17:23:09,649:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 17:23:09,649:INFO:Starting cross validation
2025-07-28 17:23:09,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:23:28,580:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:28,753:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:28,912:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:29,263:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:29,441:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:29,604:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:29,868:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:30,010:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:30,145:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:30,147:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:30,253:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:30,344:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:30,580:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2242, in _merge_blocks
    new_values = np.vstack([b.values for b in blocks])  # type: ignore[misc]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\shape_base.py", line 289, in vstack
    return _nx.concatenate(arrs, 0, dtype=dtype, casting=casting)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:23:30,584:INFO:Calculating mean and std
2025-07-28 17:23:30,585:INFO:Creating metrics dataframe
2025-07-28 17:23:30,588:INFO:Uploading results into container
2025-07-28 17:23:30,589:INFO:Uploading model into container now
2025-07-28 17:23:30,589:INFO:_master_model_container: 45
2025-07-28 17:23:30,589:INFO:_display_container: 4
2025-07-28 17:23:30,590:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 17:23:30,590:INFO:create_model() successfully completed......................................
2025-07-28 17:23:30,707:WARNING:create_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 17:23:30,707:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 17:23:30,707:INFO:Initializing create_model()
2025-07-28 17:23:30,707:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:23:30,707:INFO:Checking exceptions
2025-07-28 17:23:30,707:INFO:Importing libraries
2025-07-28 17:23:30,707:INFO:Copying training dataset
2025-07-28 17:23:30,963:INFO:Defining folds
2025-07-28 17:23:30,963:INFO:Declaring metric variables
2025-07-28 17:23:30,963:INFO:Importing untrained model
2025-07-28 17:23:30,963:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 17:23:30,963:INFO:Starting cross validation
2025-07-28 17:23:30,965:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:23:34,346:ERROR:create_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception or returned all 0.0:
2025-07-28 17:23:34,348:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\queues.py", line 159, in _feed
    obj_ = dumps(obj, reducers=reducers)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 215, in dumps
    dump(obj, buf, reducers=reducers, protocol=protocol)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 208, in dump
    _LokyPickler(file, reducers=reducers, protocol=protocol).dump(obj)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\cloudpickle\cloudpickle_fast.py", line 632, in dump
    return Pickler.dump(self, obj)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-07-28 17:23:34,352:INFO:Initializing Dummy Classifier
2025-07-28 17:23:34,352:INFO:Total runtime is 14.533649178345998 minutes
2025-07-28 17:23:34,353:INFO:SubProcess create_model() called ==================================
2025-07-28 17:23:34,353:INFO:Initializing create_model()
2025-07-28 17:23:34,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BEA5CE5C30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:23:34,353:INFO:Checking exceptions
2025-07-28 17:23:34,353:INFO:Importing libraries
2025-07-28 17:23:34,353:INFO:Copying training dataset
2025-07-28 17:23:34,630:INFO:Defining folds
2025-07-28 17:23:34,630:INFO:Declaring metric variables
2025-07-28 17:23:34,630:INFO:Importing untrained model
2025-07-28 17:23:34,631:INFO:Dummy Classifier Imported successfully
2025-07-28 17:23:34,631:INFO:Starting cross validation
2025-07-28 17:23:34,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 17:23:45,254:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,271:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,279:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,342:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,358:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,370:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,377:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,416:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:23:45,427:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:23:45,433:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:23:45,439:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,458:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,467:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,474:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,496:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:23:45,536:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,899:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:45,976:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:46,020:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 17:23:46,052:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 17:23:46,267:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
5 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 17:23:46,267:INFO:Calculating mean and std
2025-07-28 17:23:46,267:INFO:Creating metrics dataframe
2025-07-28 17:23:46,268:INFO:Uploading results into container
2025-07-28 17:23:46,268:INFO:Uploading model into container now
2025-07-28 17:23:46,268:INFO:_master_model_container: 46
2025-07-28 17:23:46,268:INFO:_display_container: 4
2025-07-28 17:23:46,268:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-07-28 17:23:46,268:INFO:create_model() successfully completed......................................
2025-07-28 17:23:46,378:INFO:SubProcess create_model() end ==================================
2025-07-28 17:23:46,378:INFO:Creating metrics dataframe
2025-07-28 17:23:46,380:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-07-28 17:23:46,382:INFO:Initializing create_model()
2025-07-28 17:23:46,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 17:23:46,382:INFO:Checking exceptions
2025-07-28 17:23:46,383:INFO:Importing libraries
2025-07-28 17:23:46,383:INFO:Copying training dataset
2025-07-28 17:23:46,653:INFO:Defining folds
2025-07-28 17:23:46,653:INFO:Declaring metric variables
2025-07-28 17:23:46,654:INFO:Importing untrained model
2025-07-28 17:23:46,654:INFO:Declaring custom model
2025-07-28 17:23:46,654:INFO:Decision Tree Classifier Imported successfully
2025-07-28 17:23:46,655:INFO:Cross validation set to False
2025-07-28 17:23:46,655:INFO:Fitting Model
2025-07-28 17:23:49,496:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-07-28 17:23:49,496:INFO:create_model() successfully completed......................................
2025-07-28 17:23:49,606:INFO:_master_model_container: 46
2025-07-28 17:23:49,606:INFO:_display_container: 4
2025-07-28 17:23:49,607:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-07-28 17:23:49,607:INFO:compare_models() successfully completed......................................
2025-07-28 17:23:49,608:INFO:Initializing tune_model()
2025-07-28 17:23:49,608:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 17:23:49,608:INFO:Checking exceptions
2025-07-28 17:23:49,706:INFO:Copying training dataset
2025-07-28 17:23:49,888:INFO:Checking base model
2025-07-28 17:23:49,889:INFO:Base model : Decision Tree Classifier
2025-07-28 17:23:49,889:INFO:Declaring metric variables
2025-07-28 17:23:49,889:INFO:Defining Hyperparameters
2025-07-28 17:23:49,992:INFO:Tuning with n_jobs=-1
2025-07-28 17:23:49,992:INFO:Initializing RandomizedSearchCV
2025-07-28 22:27:18,797:INFO:Initializing compare_models()
2025-07-28 22:27:18,797:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-07-28 22:27:18,797:INFO:Checking exceptions
2025-07-28 22:27:18,907:INFO:Preparing display monitor
2025-07-28 22:27:18,910:INFO:Initializing Logistic Regression
2025-07-28 22:27:18,910:INFO:Total runtime is 0.0 minutes
2025-07-28 22:27:18,911:INFO:SubProcess create_model() called ==================================
2025-07-28 22:27:18,911:INFO:Initializing create_model()
2025-07-28 22:27:18,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:27:18,911:INFO:Checking exceptions
2025-07-28 22:27:18,911:INFO:Importing libraries
2025-07-28 22:27:18,911:INFO:Copying training dataset
2025-07-28 22:27:19,187:INFO:Defining folds
2025-07-28 22:27:19,187:INFO:Declaring metric variables
2025-07-28 22:27:19,187:INFO:Importing untrained model
2025-07-28 22:27:19,188:INFO:Logistic Regression Imported successfully
2025-07-28 22:27:19,188:INFO:Starting cross validation
2025-07-28 22:27:19,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:27:30,024:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:27:30,058:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:27:30,117:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:27:30,138:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:27:30,151:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:27:30,217:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:27:30,230:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:27:30,307:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:27:30,547:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
4 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5725, in filter
    return self.loc(axis=axis)[values]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1153, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1375, in _getitem_axis
    return self._getbool_axis(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1173, in _getbool_axis
    return self.obj._take_with_is_copy(inds, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:27:30,548:INFO:Calculating mean and std
2025-07-28 22:27:30,550:INFO:Creating metrics dataframe
2025-07-28 22:27:30,552:INFO:Uploading results into container
2025-07-28 22:27:30,552:INFO:Uploading model into container now
2025-07-28 22:27:30,553:INFO:_master_model_container: 47
2025-07-28 22:27:30,553:INFO:_display_container: 5
2025-07-28 22:27:30,553:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-28 22:27:30,553:INFO:create_model() successfully completed......................................
2025-07-28 22:27:30,678:INFO:SubProcess create_model() end ==================================
2025-07-28 22:27:30,679:INFO:Creating metrics dataframe
2025-07-28 22:27:30,680:INFO:Initializing K Neighbors Classifier
2025-07-28 22:27:30,680:INFO:Total runtime is 0.19615972836812337 minutes
2025-07-28 22:27:30,680:INFO:SubProcess create_model() called ==================================
2025-07-28 22:27:30,681:INFO:Initializing create_model()
2025-07-28 22:27:30,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:27:30,681:INFO:Checking exceptions
2025-07-28 22:27:30,681:INFO:Importing libraries
2025-07-28 22:27:30,681:INFO:Copying training dataset
2025-07-28 22:27:30,958:INFO:Defining folds
2025-07-28 22:27:30,959:INFO:Declaring metric variables
2025-07-28 22:27:30,959:INFO:Importing untrained model
2025-07-28 22:27:30,959:INFO:K Neighbors Classifier Imported successfully
2025-07-28 22:27:30,959:INFO:Starting cross validation
2025-07-28 22:27:30,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:29:23,198:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,225:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,280:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,295:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,321:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,377:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,389:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,417:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,443:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,485:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,486:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,537:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,580:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,635:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,673:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:29:23,910:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
5 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:29:23,911:INFO:Calculating mean and std
2025-07-28 22:29:23,912:INFO:Creating metrics dataframe
2025-07-28 22:29:23,915:INFO:Uploading results into container
2025-07-28 22:29:23,916:INFO:Uploading model into container now
2025-07-28 22:29:23,916:INFO:_master_model_container: 48
2025-07-28 22:29:23,917:INFO:_display_container: 5
2025-07-28 22:29:23,917:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-28 22:29:23,917:INFO:create_model() successfully completed......................................
2025-07-28 22:29:24,045:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 22:29:24,047:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 22:29:24,047:INFO:Initializing create_model()
2025-07-28 22:29:24,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:29:24,047:INFO:Checking exceptions
2025-07-28 22:29:24,047:INFO:Importing libraries
2025-07-28 22:29:24,047:INFO:Copying training dataset
2025-07-28 22:29:24,318:INFO:Defining folds
2025-07-28 22:29:24,318:INFO:Declaring metric variables
2025-07-28 22:29:24,319:INFO:Importing untrained model
2025-07-28 22:29:24,319:INFO:K Neighbors Classifier Imported successfully
2025-07-28 22:29:24,319:INFO:Starting cross validation
2025-07-28 22:29:24,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:31:35,576:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:35,686:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:35,790:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,170:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,282:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,396:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,511:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,615:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,641:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,713:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,745:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:36,842:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:37,810:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:37,894:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:37,976:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:38,060:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:38,098:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:38,144:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:38,180:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:38,223:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:38,257:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:38,479:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:31:38,481:INFO:Calculating mean and std
2025-07-28 22:31:38,485:INFO:Creating metrics dataframe
2025-07-28 22:31:38,489:INFO:Uploading results into container
2025-07-28 22:31:38,490:INFO:Uploading model into container now
2025-07-28 22:31:38,490:INFO:_master_model_container: 49
2025-07-28 22:31:38,490:INFO:_display_container: 5
2025-07-28 22:31:38,490:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-28 22:31:38,490:INFO:create_model() successfully completed......................................
2025-07-28 22:31:38,614:INFO:SubProcess create_model() end ==================================
2025-07-28 22:31:38,615:INFO:Creating metrics dataframe
2025-07-28 22:31:38,618:INFO:Initializing Naive Bayes
2025-07-28 22:31:38,618:INFO:Total runtime is 4.328456083933513 minutes
2025-07-28 22:31:38,618:INFO:SubProcess create_model() called ==================================
2025-07-28 22:31:38,618:INFO:Initializing create_model()
2025-07-28 22:31:38,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:31:38,618:INFO:Checking exceptions
2025-07-28 22:31:38,618:INFO:Importing libraries
2025-07-28 22:31:38,618:INFO:Copying training dataset
2025-07-28 22:31:38,892:INFO:Defining folds
2025-07-28 22:31:38,892:INFO:Declaring metric variables
2025-07-28 22:31:38,893:INFO:Importing untrained model
2025-07-28 22:31:38,893:INFO:Naive Bayes Imported successfully
2025-07-28 22:31:38,893:INFO:Starting cross validation
2025-07-28 22:31:38,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:31:44,022:WARNING:create_model() for nb raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 22:31:44,023:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\queues.py", line 159, in _feed
    obj_ = dumps(obj, reducers=reducers)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 215, in dumps
    dump(obj, buf, reducers=reducers, protocol=protocol)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\backend\reduction.py", line 208, in dump
    _LokyPickler(file, reducers=reducers, protocol=protocol).dump(obj)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\cloudpickle\cloudpickle_fast.py", line 632, in dump
    return Pickler.dump(self, obj)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-07-28 22:31:44,023:INFO:Initializing create_model()
2025-07-28 22:31:44,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:31:44,023:INFO:Checking exceptions
2025-07-28 22:31:44,023:INFO:Importing libraries
2025-07-28 22:31:44,023:INFO:Copying training dataset
2025-07-28 22:31:44,317:INFO:Defining folds
2025-07-28 22:31:44,317:INFO:Declaring metric variables
2025-07-28 22:31:44,318:INFO:Importing untrained model
2025-07-28 22:31:44,318:INFO:Naive Bayes Imported successfully
2025-07-28 22:31:44,318:INFO:Starting cross validation
2025-07-28 22:31:44,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:31:58,539:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:58,553:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:58,601:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:58,655:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:58,666:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:58,708:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:58,763:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:58,780:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:58,815:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,492:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,592:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,606:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,608:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,637:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,694:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,708:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,719:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,746:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,792:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,806:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:31:59,846:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:00,104:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 308, in get_dummies
    base_df = base_df.set_index(X.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:32:00,106:INFO:Calculating mean and std
2025-07-28 22:32:00,108:INFO:Creating metrics dataframe
2025-07-28 22:32:00,110:INFO:Uploading results into container
2025-07-28 22:32:00,110:INFO:Uploading model into container now
2025-07-28 22:32:00,111:INFO:_master_model_container: 50
2025-07-28 22:32:00,111:INFO:_display_container: 5
2025-07-28 22:32:00,111:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-28 22:32:00,111:INFO:create_model() successfully completed......................................
2025-07-28 22:32:00,239:INFO:SubProcess create_model() end ==================================
2025-07-28 22:32:00,239:INFO:Creating metrics dataframe
2025-07-28 22:32:00,241:INFO:Initializing Decision Tree Classifier
2025-07-28 22:32:00,241:INFO:Total runtime is 4.6888405084609985 minutes
2025-07-28 22:32:00,241:INFO:SubProcess create_model() called ==================================
2025-07-28 22:32:00,241:INFO:Initializing create_model()
2025-07-28 22:32:00,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:32:00,242:INFO:Checking exceptions
2025-07-28 22:32:00,242:INFO:Importing libraries
2025-07-28 22:32:00,242:INFO:Copying training dataset
2025-07-28 22:32:00,512:INFO:Defining folds
2025-07-28 22:32:00,512:INFO:Declaring metric variables
2025-07-28 22:32:00,512:INFO:Importing untrained model
2025-07-28 22:32:00,513:INFO:Decision Tree Classifier Imported successfully
2025-07-28 22:32:00,513:INFO:Starting cross validation
2025-07-28 22:32:00,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:32:12,675:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:12,757:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:12,787:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:12,841:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:12,871:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:12,888:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:12,943:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:12,972:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:12,995:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,008:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,024:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,043:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,054:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,099:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,108:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,125:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,161:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,200:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,207:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,225:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,259:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:13,501:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:32:13,501:INFO:Calculating mean and std
2025-07-28 22:32:13,503:INFO:Creating metrics dataframe
2025-07-28 22:32:13,505:INFO:Uploading results into container
2025-07-28 22:32:13,505:INFO:Uploading model into container now
2025-07-28 22:32:13,505:INFO:_master_model_container: 51
2025-07-28 22:32:13,505:INFO:_display_container: 5
2025-07-28 22:32:13,506:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-07-28 22:32:13,506:INFO:create_model() successfully completed......................................
2025-07-28 22:32:13,626:INFO:SubProcess create_model() end ==================================
2025-07-28 22:32:13,626:INFO:Creating metrics dataframe
2025-07-28 22:32:13,629:INFO:Initializing SVM - Linear Kernel
2025-07-28 22:32:13,629:INFO:Total runtime is 4.911975244681041 minutes
2025-07-28 22:32:13,629:INFO:SubProcess create_model() called ==================================
2025-07-28 22:32:13,629:INFO:Initializing create_model()
2025-07-28 22:32:13,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:32:13,629:INFO:Checking exceptions
2025-07-28 22:32:13,629:INFO:Importing libraries
2025-07-28 22:32:13,630:INFO:Copying training dataset
2025-07-28 22:32:13,904:INFO:Defining folds
2025-07-28 22:32:13,905:INFO:Declaring metric variables
2025-07-28 22:32:13,905:INFO:Importing untrained model
2025-07-28 22:32:13,905:INFO:SVM - Linear Kernel Imported successfully
2025-07-28 22:32:13,905:INFO:Starting cross validation
2025-07-28 22:32:13,906:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:32:22,988:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:23,045:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:23,191:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:23,321:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:23,408:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:23,463:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:23,592:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:23,719:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:24,822:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:24,870:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:24,976:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:25,071:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,058:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:27,060:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:27,076:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:27,084:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:27,099:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,102:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,116:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,126:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,197:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,200:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,208:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,228:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,287:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,290:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,296:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,318:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:27,575:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210686) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210686, 93) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:32:27,575:INFO:Calculating mean and std
2025-07-28 22:32:27,578:INFO:Creating metrics dataframe
2025-07-28 22:32:27,580:INFO:Uploading results into container
2025-07-28 22:32:27,581:INFO:Uploading model into container now
2025-07-28 22:32:27,581:INFO:_master_model_container: 52
2025-07-28 22:32:27,581:INFO:_display_container: 5
2025-07-28 22:32:27,581:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-28 22:32:27,582:INFO:create_model() successfully completed......................................
2025-07-28 22:32:27,744:INFO:SubProcess create_model() end ==================================
2025-07-28 22:32:27,744:INFO:Creating metrics dataframe
2025-07-28 22:32:27,745:INFO:Initializing Ridge Classifier
2025-07-28 22:32:27,746:INFO:Total runtime is 5.147265048821767 minutes
2025-07-28 22:32:27,746:INFO:SubProcess create_model() called ==================================
2025-07-28 22:32:27,746:INFO:Initializing create_model()
2025-07-28 22:32:27,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:32:27,746:INFO:Checking exceptions
2025-07-28 22:32:27,746:INFO:Importing libraries
2025-07-28 22:32:27,747:INFO:Copying training dataset
2025-07-28 22:32:28,023:INFO:Defining folds
2025-07-28 22:32:28,023:INFO:Declaring metric variables
2025-07-28 22:32:28,024:INFO:Importing untrained model
2025-07-28 22:32:28,024:INFO:Ridge Classifier Imported successfully
2025-07-28 22:32:28,024:INFO:Starting cross validation
2025-07-28 22:32:28,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:32:35,653:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:35,692:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:35,798:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:35,900:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:35,900:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:35,941:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:36,033:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:36,126:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:36,892:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:36,931:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,024:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,116:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,139:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:37,177:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,269:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,358:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,437:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:37,474:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,567:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,636:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:37,648:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,671:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,755:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:37,840:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:38,060:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\linear_model\_ridge.py", line 1479, in fit
    super().fit(X, Y, sample_weight=sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\linear_model\_ridge.py", line 893, in fit
    X, y, X_offset, y_offset, X_scale = _preprocess_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\linear_model\_base.py", line 178, in _preprocess_data
    X_offset = np.average(X, axis=0, weights=sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\lib\function_base.py", line 553, in average
    avg = avg_as_array = np.multiply(a, wgt,
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:32:38,061:INFO:Calculating mean and std
2025-07-28 22:32:38,064:INFO:Creating metrics dataframe
2025-07-28 22:32:38,066:INFO:Uploading results into container
2025-07-28 22:32:38,066:INFO:Uploading model into container now
2025-07-28 22:32:38,067:INFO:_master_model_container: 53
2025-07-28 22:32:38,067:INFO:_display_container: 5
2025-07-28 22:32:38,067:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-07-28 22:32:38,067:INFO:create_model() successfully completed......................................
2025-07-28 22:32:38,192:WARNING:create_model() for RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 22:32:38,193:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 22:32:38,193:INFO:Initializing create_model()
2025-07-28 22:32:38,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:32:38,193:INFO:Checking exceptions
2025-07-28 22:32:38,193:INFO:Importing libraries
2025-07-28 22:32:38,193:INFO:Copying training dataset
2025-07-28 22:32:38,462:INFO:Defining folds
2025-07-28 22:32:38,462:INFO:Declaring metric variables
2025-07-28 22:32:38,462:INFO:Importing untrained model
2025-07-28 22:32:38,463:INFO:Ridge Classifier Imported successfully
2025-07-28 22:32:38,463:INFO:Starting cross validation
2025-07-28 22:32:38,464:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:32:45,681:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:45,738:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:45,857:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:45,987:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:46,237:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:46,282:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:46,393:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:46,476:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:46,514:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:46,515:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:46,621:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:46,733:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,189:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:47,232:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,326:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,426:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,435:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:47,475:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,577:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,623:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:47,661:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,671:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,763:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:47,860:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:48,039:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:32:48,073:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:48,153:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:48,230:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:32:48,450:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 912, in partial_fit
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:32:48,451:INFO:Calculating mean and std
2025-07-28 22:32:48,455:INFO:Creating metrics dataframe
2025-07-28 22:32:48,457:INFO:Uploading results into container
2025-07-28 22:32:48,458:INFO:Uploading model into container now
2025-07-28 22:32:48,458:INFO:_master_model_container: 54
2025-07-28 22:32:48,458:INFO:_display_container: 5
2025-07-28 22:32:48,459:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-07-28 22:32:48,459:INFO:create_model() successfully completed......................................
2025-07-28 22:32:48,578:INFO:SubProcess create_model() end ==================================
2025-07-28 22:32:48,579:INFO:Creating metrics dataframe
2025-07-28 22:32:48,581:INFO:Initializing Random Forest Classifier
2025-07-28 22:32:48,581:INFO:Total runtime is 5.494516158103942 minutes
2025-07-28 22:32:48,581:INFO:SubProcess create_model() called ==================================
2025-07-28 22:32:48,583:INFO:Initializing create_model()
2025-07-28 22:32:48,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:32:48,583:INFO:Checking exceptions
2025-07-28 22:32:48,583:INFO:Importing libraries
2025-07-28 22:32:48,583:INFO:Copying training dataset
2025-07-28 22:32:48,847:INFO:Defining folds
2025-07-28 22:32:48,847:INFO:Declaring metric variables
2025-07-28 22:32:48,847:INFO:Importing untrained model
2025-07-28 22:32:48,848:INFO:Random Forest Classifier Imported successfully
2025-07-28 22:32:48,848:INFO:Starting cross validation
2025-07-28 22:32:48,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:33:13,153:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:13,352:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:13,588:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:13,820:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:13,997:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,157:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,169:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,302:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,336:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,408:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,426:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,447:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,513:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,549:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,616:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,734:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,824:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:14,914:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:15,150:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 461, in fit
    X_transformed = self.transform(X, override_return_df=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 314, in get_dummies
    X = X.reindex(columns=cols)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5141, in reindex
    return super().reindex(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5521, in reindex
    return self._reindex_axes(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5549, in _reindex_axes
    obj = obj._reindex_with_indexers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5597, in _reindex_with_indexers
    new_data = new_data.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:33:15,151:INFO:Calculating mean and std
2025-07-28 22:33:15,153:INFO:Creating metrics dataframe
2025-07-28 22:33:15,154:INFO:Uploading results into container
2025-07-28 22:33:15,155:INFO:Uploading model into container now
2025-07-28 22:33:15,155:INFO:_master_model_container: 55
2025-07-28 22:33:15,155:INFO:_display_container: 5
2025-07-28 22:33:15,155:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-07-28 22:33:15,155:INFO:create_model() successfully completed......................................
2025-07-28 22:33:15,269:INFO:SubProcess create_model() end ==================================
2025-07-28 22:33:15,269:INFO:Creating metrics dataframe
2025-07-28 22:33:15,271:INFO:Initializing Quadratic Discriminant Analysis
2025-07-28 22:33:15,271:INFO:Total runtime is 5.939351471265157 minutes
2025-07-28 22:33:15,271:INFO:SubProcess create_model() called ==================================
2025-07-28 22:33:15,271:INFO:Initializing create_model()
2025-07-28 22:33:15,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:33:15,272:INFO:Checking exceptions
2025-07-28 22:33:15,272:INFO:Importing libraries
2025-07-28 22:33:15,272:INFO:Copying training dataset
2025-07-28 22:33:15,540:INFO:Defining folds
2025-07-28 22:33:15,542:INFO:Declaring metric variables
2025-07-28 22:33:15,542:INFO:Importing untrained model
2025-07-28 22:33:15,542:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-28 22:33:15,542:INFO:Starting cross validation
2025-07-28 22:33:15,544:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:33:21,333:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 22:33:21,567:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 22:33:22,159:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 22:33:22,824:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 22:33:23,389:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:33:23,433:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:23,549:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:23,608:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:33:23,647:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:23,647:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:23,741:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:23,832:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:23,932:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-28 22:33:24,006:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:33:24,043:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:24,130:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:24,218:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:24,419:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:33:24,456:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:24,537:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:24,617:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:24,970:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:33:25,003:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:25,080:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:25,157:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:33:25,383:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
5 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 461, in fit
    X_transformed = self.transform(X, override_return_df=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 307, in get_dummies
    base_df = mod.reindex(X[col].fillna(-2))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5141, in reindex
    return super().reindex(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5521, in reindex
    return self._reindex_axes(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5549, in _reindex_axes
    obj = obj._reindex_with_indexers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5597, in _reindex_with_indexers
    new_data = new_data.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 670, in reindex_indexer
    new_blocks = [
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 671, in <listcomp>
    blk.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 1.61 MiB for an array with shape (210685, 1) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 5725, in filter
    return self.loc(axis=axis)[values]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1153, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1375, in _getitem_axis
    return self._getbool_axis(key, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\indexing.py", line 1173, in _getbool_axis
    return self.obj._take_with_is_copy(inds, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210686) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:33:25,383:INFO:Calculating mean and std
2025-07-28 22:33:25,385:INFO:Creating metrics dataframe
2025-07-28 22:33:25,388:INFO:Uploading results into container
2025-07-28 22:33:25,388:INFO:Uploading model into container now
2025-07-28 22:33:25,388:INFO:_master_model_container: 56
2025-07-28 22:33:25,388:INFO:_display_container: 5
2025-07-28 22:33:25,389:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-28 22:33:25,389:INFO:create_model() successfully completed......................................
2025-07-28 22:33:25,513:INFO:SubProcess create_model() end ==================================
2025-07-28 22:33:25,514:INFO:Creating metrics dataframe
2025-07-28 22:33:25,515:INFO:Initializing Ada Boost Classifier
2025-07-28 22:33:25,515:INFO:Total runtime is 6.110079697767893 minutes
2025-07-28 22:33:25,516:INFO:SubProcess create_model() called ==================================
2025-07-28 22:33:25,516:INFO:Initializing create_model()
2025-07-28 22:33:25,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:33:25,516:INFO:Checking exceptions
2025-07-28 22:33:25,516:INFO:Importing libraries
2025-07-28 22:33:25,516:INFO:Copying training dataset
2025-07-28 22:33:25,787:INFO:Defining folds
2025-07-28 22:33:25,787:INFO:Declaring metric variables
2025-07-28 22:33:25,787:INFO:Importing untrained model
2025-07-28 22:33:25,787:INFO:Ada Boost Classifier Imported successfully
2025-07-28 22:33:25,788:INFO:Starting cross validation
2025-07-28 22:33:25,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:33:31,166:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 22:33:31,535:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 22:33:31,987:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 22:33:32,369:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 22:33:33,589:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 22:33:33,876:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 22:33:34,128:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-28 22:34:05,739:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:34:05,782:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:05,884:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:05,925:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:34:05,949:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:34:05,967:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:05,992:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:06,068:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:06,108:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:34:06,129:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:34:06,151:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:06,172:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:06,254:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:06,316:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:34:06,360:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:06,419:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:34:06,461:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:06,558:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:06,613:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:34:06,653:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,225:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:34:07,261:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,346:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,398:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:34:07,430:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:34:07,436:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,469:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,510:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:34:07,548:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,562:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,611:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:34:07,633:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,646:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,680:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:34:07,712:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:34:07,943:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
3 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:34:07,945:INFO:Calculating mean and std
2025-07-28 22:34:07,951:INFO:Creating metrics dataframe
2025-07-28 22:34:07,954:INFO:Uploading results into container
2025-07-28 22:34:07,955:INFO:Uploading model into container now
2025-07-28 22:34:07,956:INFO:_master_model_container: 57
2025-07-28 22:34:07,956:INFO:_display_container: 5
2025-07-28 22:34:07,956:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-28 22:34:07,956:INFO:create_model() successfully completed......................................
2025-07-28 22:34:08,071:INFO:SubProcess create_model() end ==================================
2025-07-28 22:34:08,071:INFO:Creating metrics dataframe
2025-07-28 22:34:08,073:INFO:Initializing Gradient Boosting Classifier
2025-07-28 22:34:08,074:INFO:Total runtime is 6.819398315747579 minutes
2025-07-28 22:34:08,074:INFO:SubProcess create_model() called ==================================
2025-07-28 22:34:08,074:INFO:Initializing create_model()
2025-07-28 22:34:08,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:34:08,074:INFO:Checking exceptions
2025-07-28 22:34:08,074:INFO:Importing libraries
2025-07-28 22:34:08,074:INFO:Copying training dataset
2025-07-28 22:34:08,333:INFO:Defining folds
2025-07-28 22:34:08,334:INFO:Declaring metric variables
2025-07-28 22:34:08,334:INFO:Importing untrained model
2025-07-28 22:34:08,334:INFO:Gradient Boosting Classifier Imported successfully
2025-07-28 22:34:08,334:INFO:Starting cross validation
2025-07-28 22:34:08,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:34:13,015:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 22:34:13,016:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 426, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\queues.py", line 117, in get
    res = self._recv_bytes()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\connection.py", line 318, in _recv_bytes
    return self._get_more_data(ov, maxsize)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\multiprocessing\connection.py", line 340, in _get_more_data
    ov, err = _winapi.ReadFile(self._handle, left, overlapped=True)
MemoryError
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2025-07-28 22:34:13,016:INFO:Initializing create_model()
2025-07-28 22:34:13,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:34:13,016:INFO:Checking exceptions
2025-07-28 22:34:13,016:INFO:Importing libraries
2025-07-28 22:34:13,016:INFO:Copying training dataset
2025-07-28 22:34:13,305:INFO:Defining folds
2025-07-28 22:34:13,305:INFO:Declaring metric variables
2025-07-28 22:34:13,305:INFO:Importing untrained model
2025-07-28 22:34:13,306:INFO:Gradient Boosting Classifier Imported successfully
2025-07-28 22:34:13,306:INFO:Starting cross validation
2025-07-28 22:34:13,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:45:25,744:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:25,790:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:25,895:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:26,019:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:26,478:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:26,525:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:26,637:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:26,757:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,104:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:27,131:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:27,148:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,175:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,250:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,273:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,349:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,371:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,763:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:27,803:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,875:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:27,890:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,910:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,975:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:27,987:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:27,996:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:28,026:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:28,081:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:28,113:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:28,199:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:30,753:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:30,786:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:30,861:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:30,938:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:31,162:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:45:31,164:INFO:Calculating mean and std
2025-07-28 22:45:31,170:INFO:Creating metrics dataframe
2025-07-28 22:45:31,174:INFO:Uploading results into container
2025-07-28 22:45:31,175:INFO:Uploading model into container now
2025-07-28 22:45:31,175:INFO:_master_model_container: 58
2025-07-28 22:45:31,175:INFO:_display_container: 5
2025-07-28 22:45:31,176:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-28 22:45:31,176:INFO:create_model() successfully completed......................................
2025-07-28 22:45:31,315:INFO:SubProcess create_model() end ==================================
2025-07-28 22:45:31,316:INFO:Creating metrics dataframe
2025-07-28 22:45:31,317:INFO:Initializing Linear Discriminant Analysis
2025-07-28 22:45:31,317:INFO:Total runtime is 18.206773698329926 minutes
2025-07-28 22:45:31,318:INFO:SubProcess create_model() called ==================================
2025-07-28 22:45:31,318:INFO:Initializing create_model()
2025-07-28 22:45:31,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:45:31,318:INFO:Checking exceptions
2025-07-28 22:45:31,318:INFO:Importing libraries
2025-07-28 22:45:31,318:INFO:Copying training dataset
2025-07-28 22:45:31,591:INFO:Defining folds
2025-07-28 22:45:31,591:INFO:Declaring metric variables
2025-07-28 22:45:31,592:INFO:Importing untrained model
2025-07-28 22:45:31,592:INFO:Linear Discriminant Analysis Imported successfully
2025-07-28 22:45:31,592:INFO:Starting cross validation
2025-07-28 22:45:31,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:45:50,125:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:50,163:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:50,261:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:50,318:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:45:50,362:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:51,320:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:51,360:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:51,454:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:51,509:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:45:51,547:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:51,719:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:51,757:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:51,856:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:51,889:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:51,912:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:45:51,926:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:51,953:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,015:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,048:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:52,067:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:45:52,086:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,104:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-28 22:45:52,104:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,140:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,174:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,225:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:45:52,227:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,260:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,278:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:45:52,313:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:45:52,538:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 628, in fit
    self._solve_svd(X, y)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 520, in _solve_svd
    X = xp.sqrt(fac) * (Xc / std)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210686, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 628, in fit
    self._solve_svd(X, y)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py", line 514, in _solve_svd
    std = xp.std(Xc, axis=0)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\fromnumeric.py", line 3645, in std
    return _methods._std(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\_methods.py", line 206, in _std
    ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\_methods.py", line 173, in _var
    x = asanyarray(arr - arrmean)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210686, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:45:52,541:INFO:Calculating mean and std
2025-07-28 22:45:52,547:INFO:Creating metrics dataframe
2025-07-28 22:45:52,550:INFO:Uploading results into container
2025-07-28 22:45:52,551:INFO:Uploading model into container now
2025-07-28 22:45:52,551:INFO:_master_model_container: 59
2025-07-28 22:45:52,552:INFO:_display_container: 5
2025-07-28 22:45:52,552:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-28 22:45:52,552:INFO:create_model() successfully completed......................................
2025-07-28 22:45:52,678:INFO:SubProcess create_model() end ==================================
2025-07-28 22:45:52,678:INFO:Creating metrics dataframe
2025-07-28 22:45:52,679:INFO:Initializing Extra Trees Classifier
2025-07-28 22:45:52,679:INFO:Total runtime is 18.562810242176056 minutes
2025-07-28 22:45:52,681:INFO:SubProcess create_model() called ==================================
2025-07-28 22:45:52,681:INFO:Initializing create_model()
2025-07-28 22:45:52,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:45:52,681:INFO:Checking exceptions
2025-07-28 22:45:52,681:INFO:Importing libraries
2025-07-28 22:45:52,681:INFO:Copying training dataset
2025-07-28 22:45:52,941:INFO:Defining folds
2025-07-28 22:45:52,941:INFO:Declaring metric variables
2025-07-28 22:45:52,942:INFO:Importing untrained model
2025-07-28 22:45:52,942:INFO:Extra Trees Classifier Imported successfully
2025-07-28 22:45:52,943:INFO:Starting cross validation
2025-07-28 22:45:52,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:46:09,561:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:09,680:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:09,685:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:09,695:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:09,780:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:09,784:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:09,793:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:09,877:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:09,880:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:10,043:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:10,130:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:10,211:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:10,446:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210685) and data type int32

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 4.02 MiB for an array with shape (20, 210685) and data type int8

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 192, in _prepare_df
    out = to_df(out, index=X.index, columns=columns)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:46:10,447:INFO:Calculating mean and std
2025-07-28 22:46:10,450:INFO:Creating metrics dataframe
2025-07-28 22:46:10,452:INFO:Uploading results into container
2025-07-28 22:46:10,453:INFO:Uploading model into container now
2025-07-28 22:46:10,453:INFO:_master_model_container: 60
2025-07-28 22:46:10,453:INFO:_display_container: 5
2025-07-28 22:46:10,453:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-28 22:46:10,453:INFO:create_model() successfully completed......................................
2025-07-28 22:46:10,576:WARNING:create_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 22:46:10,576:WARNING:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-07-28 22:46:10,576:INFO:Initializing create_model()
2025-07-28 22:46:10,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:46:10,577:INFO:Checking exceptions
2025-07-28 22:46:10,577:INFO:Importing libraries
2025-07-28 22:46:10,577:INFO:Copying training dataset
2025-07-28 22:46:10,838:INFO:Defining folds
2025-07-28 22:46:10,839:INFO:Declaring metric variables
2025-07-28 22:46:10,839:INFO:Importing untrained model
2025-07-28 22:46:10,840:INFO:Extra Trees Classifier Imported successfully
2025-07-28 22:46:10,840:INFO:Starting cross validation
2025-07-28 22:46:10,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:46:24,196:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:24,603:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:24,912:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:29,110:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:29,325:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:29,544:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:29,801:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:29,967:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,145:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,489:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,516:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,599:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,621:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,694:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,717:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,890:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:30,976:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:31,056:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:31,283:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 410, in fit
    X = self._validate_input(X, in_fit=True)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1116, in _incremental_mean_and_var
    X_nan_mask = np.isnan(X)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 18.7 MiB for an array with shape (210686, 93) and data type bool

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:46:31,285:INFO:Calculating mean and std
2025-07-28 22:46:31,290:INFO:Creating metrics dataframe
2025-07-28 22:46:31,292:INFO:Uploading results into container
2025-07-28 22:46:31,292:INFO:Uploading model into container now
2025-07-28 22:46:31,293:INFO:_master_model_container: 61
2025-07-28 22:46:31,293:INFO:_display_container: 5
2025-07-28 22:46:31,293:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-28 22:46:31,293:INFO:create_model() successfully completed......................................
2025-07-28 22:46:31,408:INFO:SubProcess create_model() end ==================================
2025-07-28 22:46:31,408:INFO:Creating metrics dataframe
2025-07-28 22:46:31,410:INFO:Initializing Extreme Gradient Boosting
2025-07-28 22:46:31,410:INFO:Total runtime is 19.208327221870423 minutes
2025-07-28 22:46:31,410:INFO:SubProcess create_model() called ==================================
2025-07-28 22:46:31,410:INFO:Initializing create_model()
2025-07-28 22:46:31,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:46:31,410:INFO:Checking exceptions
2025-07-28 22:46:31,410:INFO:Importing libraries
2025-07-28 22:46:31,411:INFO:Copying training dataset
2025-07-28 22:46:31,674:INFO:Defining folds
2025-07-28 22:46:31,674:INFO:Declaring metric variables
2025-07-28 22:46:31,674:INFO:Importing untrained model
2025-07-28 22:46:31,675:INFO:Extreme Gradient Boosting Imported successfully
2025-07-28 22:46:31,675:INFO:Starting cross validation
2025-07-28 22:46:31,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:46:53,190:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,297:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,306:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,402:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,407:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,422:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,510:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,517:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,580:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,614:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,674:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,762:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,767:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,850:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,873:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,934:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:53,956:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:54,036:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:46:54,256:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210686, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 549, in transform
    X = self._validate_input(X, in_fit=False)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 322, in _validate_input
    X = self._validate_data(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 633, in _validate_data
    out = check_array(X, input_name="X", **check_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\validation.py", line 1059, in check_array
    if np.may_share_memory(array, array_orig):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 2083, in __array__
    values = self._values
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 1046, in _values
    return ensure_wrapped_if_datetimelike(self.values)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 12281, in values
    return self._mgr.as_array()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1656, in as_array
    arr = self._interleave(dtype=dtype, na_value=na_value)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1689, in _interleave
    result = np.empty(self.shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:46:54,262:INFO:Calculating mean and std
2025-07-28 22:46:54,262:INFO:Creating metrics dataframe
2025-07-28 22:46:54,263:INFO:Uploading results into container
2025-07-28 22:46:54,265:INFO:Uploading model into container now
2025-07-28 22:46:54,265:INFO:_master_model_container: 62
2025-07-28 22:46:54,265:INFO:_display_container: 5
2025-07-28 22:46:54,266:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-28 22:46:54,266:INFO:create_model() successfully completed......................................
2025-07-28 22:46:54,378:INFO:SubProcess create_model() end ==================================
2025-07-28 22:46:54,378:INFO:Creating metrics dataframe
2025-07-28 22:46:54,380:INFO:Initializing Light Gradient Boosting Machine
2025-07-28 22:46:54,380:INFO:Total runtime is 19.5911554257075 minutes
2025-07-28 22:46:54,380:INFO:SubProcess create_model() called ==================================
2025-07-28 22:46:54,380:INFO:Initializing create_model()
2025-07-28 22:46:54,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:46:54,380:INFO:Checking exceptions
2025-07-28 22:46:54,380:INFO:Importing libraries
2025-07-28 22:46:54,380:INFO:Copying training dataset
2025-07-28 22:46:54,638:INFO:Defining folds
2025-07-28 22:46:54,638:INFO:Declaring metric variables
2025-07-28 22:46:54,638:INFO:Importing untrained model
2025-07-28 22:46:54,639:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 22:46:54,639:INFO:Starting cross validation
2025-07-28 22:46:54,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:47:15,347:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:15,513:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:15,676:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:18,913:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:19,073:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:19,234:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:19,631:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:19,792:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:19,952:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:20,978:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,049:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,122:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,163:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,262:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,311:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,436:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,541:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,634:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:21,871:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 249, in _fit
    fitted_transformer = self._memory_fit(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 229, in fit
    self.transformer.fit(*args, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 876, in fit
    return self.partial_fit(X, y, sample_weight)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\preprocessing\_data.py", line 997, in partial_fit
    self.mean_, self.var_, self.n_samples_seen_ = _incremental_mean_and_var(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\extmath.py", line 1143, in _incremental_mean_and_var
    temp = X - T
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (210685, 93) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 149. MiB for an array with shape (93, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\utils.py", line 651, in transform
    X = self._transform(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 232, in _transform
    X = self.get_dummies(X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\category_encoders\one_hot.py", line 308, in get_dummies
    base_df = base_df.set_index(X.index)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5876, in set_index
    frame = self.copy(deep=None)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2249, in _merge_blocks
    new_values = new_values[argsort]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 24.1 MiB for an array with shape (15, 210686) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210686) and data type float64

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:47:21,872:INFO:Calculating mean and std
2025-07-28 22:47:21,872:INFO:Creating metrics dataframe
2025-07-28 22:47:21,874:INFO:Uploading results into container
2025-07-28 22:47:21,874:INFO:Uploading model into container now
2025-07-28 22:47:21,874:INFO:_master_model_container: 63
2025-07-28 22:47:21,874:INFO:_display_container: 5
2025-07-28 22:47:21,875:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 22:47:21,875:INFO:create_model() successfully completed......................................
2025-07-28 22:47:21,981:INFO:SubProcess create_model() end ==================================
2025-07-28 22:47:21,981:INFO:Creating metrics dataframe
2025-07-28 22:47:21,983:INFO:Initializing Dummy Classifier
2025-07-28 22:47:21,983:INFO:Total runtime is 20.051216622193653 minutes
2025-07-28 22:47:21,983:INFO:SubProcess create_model() called ==================================
2025-07-28 22:47:21,983:INFO:Initializing create_model()
2025-07-28 22:47:21,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:47:21,983:INFO:Checking exceptions
2025-07-28 22:47:21,983:INFO:Importing libraries
2025-07-28 22:47:21,983:INFO:Copying training dataset
2025-07-28 22:47:22,249:INFO:Defining folds
2025-07-28 22:47:22,249:INFO:Declaring metric variables
2025-07-28 22:47:22,249:INFO:Importing untrained model
2025-07-28 22:47:22,249:INFO:Dummy Classifier Imported successfully
2025-07-28 22:47:22,249:INFO:Starting cross validation
2025-07-28 22:47:22,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:47:28,408:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:28,931:WARNING:create_model() for dummy raised an exception or returned all 0.0, trying without fit_kwargs:
2025-07-28 22:47:28,931:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2242, in _merge_blocks
    new_values = np.vstack([b.values for b in blocks])  # type: ignore[misc]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\shape_base.py", line 289, in vstack
    return _nx.concatenate(arrs, 0, dtype=dtype, casting=casting)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 16.6 MiB for an array with shape (93, 23410) and data type float64
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 16.6 MiB for an array with shape (93, 23410) and data type float64

2025-07-28 22:47:28,932:INFO:Initializing create_model()
2025-07-28 22:47:28,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE97642FE0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:47:28,932:INFO:Checking exceptions
2025-07-28 22:47:28,932:INFO:Importing libraries
2025-07-28 22:47:28,932:INFO:Copying training dataset
2025-07-28 22:47:29,218:INFO:Defining folds
2025-07-28 22:47:29,218:INFO:Declaring metric variables
2025-07-28 22:47:29,218:INFO:Importing untrained model
2025-07-28 22:47:29,219:INFO:Dummy Classifier Imported successfully
2025-07-28 22:47:29,219:INFO:Starting cross validation
2025-07-28 22:47:29,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 22:47:41,421:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,467:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,471:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,473:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,521:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,523:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,566:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,577:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:47:41,579:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,580:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:47:41,587:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,587:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,618:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,623:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:47:41,624:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,636:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:47:41,649:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:47:41,663:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,682:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,689:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,697:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:41,753:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-28 22:47:41,795:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 22:47:42,052:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
4 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 169, in _reorder_cols
    new_df = df.merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 10487, in merge
    return merge(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 183, in merge
    return op.get_result(copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 885, in get_result
    result = self._reindex_and_concat(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\merge.py", line 876, in _reindex_and_concat
    result = concat([left, right], axis=1, copy=copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 393, in concat
    return op.get_result()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    new_data = concatenate_managers(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 131, in concatenate_managers
    mgrs = _maybe_reindex_columns_na_proxy(axes, mgrs_indexers, needs_copy)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\concat.py", line 230, in _maybe_reindex_columns_na_proxy
    mgr = mgr.copy()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 576, in copy
    res = self.apply("copy", deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 354, in apply
    applied = getattr(b, f)(**kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 645, in copy
    values = values.copy()
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.3 MiB for an array with shape (24, 210685) and data type float32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 176, in _reorder_cols
    new_df = new_df.drop(new_df.filter(regex="__drop__$").columns, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5344, in drop
    return super().drop(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4711, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4792, in _drop_axis
    new_mgr = self._mgr.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 125. MiB for an array with shape (78, 210685) and data type float64

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 263, in transform
    new_X = self._prepare_df(X, output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 196, in _prepare_df
    return self._reorder_cols(out, X)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 170, in _reorder_cols
    right=original_df[[col for col in original_df if col in columns]],
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 3908, in __getitem__
    data = self._take_with_is_copy(indexer, axis=1)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4088, in _take_with_is_copy
    result = self.take(indices=indices, axis=axis)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 4068, in take
    new_data = self._mgr.take(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 877, in take
    return self.reindex_indexer(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 663, in reindex_indexer
    new_blocks = self._slice_take_blocks_ax0(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 826, in _slice_take_blocks_ax0
    nb = blk.take_nd(taker, axis=0, new_mgr_locs=mgr_locs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\blocks.py", line 1061, in take_nd
    new_values = algos.take_nd(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 118, in take_nd
    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\array_algos\take.py", line 158, in _take_nd_ndarray
    out = np.empty(out_shape, dtype=dtype)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 27.3 MiB for an array with shape (34, 210686) and data type int32

--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 273, in fit
    X, y, _ = self._fit(X, y, routed_params)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 256, in _fit
    X, y = self._memory_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\impute\_base.py", line 609, in transform
    mask_valid_features = missing_mask[:, valid_statistics_indexes]
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 15.7 MiB for an array with shape (78, 210686) and data type bool

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-28 22:47:42,054:INFO:Calculating mean and std
2025-07-28 22:47:42,054:INFO:Creating metrics dataframe
2025-07-28 22:47:42,055:INFO:Uploading results into container
2025-07-28 22:47:42,056:INFO:Uploading model into container now
2025-07-28 22:47:42,056:INFO:_master_model_container: 64
2025-07-28 22:47:42,056:INFO:_display_container: 5
2025-07-28 22:47:42,056:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-07-28 22:47:42,056:INFO:create_model() successfully completed......................................
2025-07-28 22:47:42,171:ERROR:create_model() for DummyClassifier(constant=None, random_state=42, strategy='prior') raised an exception or returned all 0.0:
2025-07-28 22:47:42,172:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\utils\generic.py", line 109, in to_df
    data = data.rename(columns=lambda col: str(col))
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\frame.py", line 5518, in rename
    return super()._rename(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 1059, in _rename
    result = self if inplace else self.copy(deep=copy and not using_copy_on_write())
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\generic.py", line 6685, in copy
    data = self._mgr.copy(deep=deep)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 587, in copy
    res._consolidate_inplace()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 1750, in _consolidate_inplace
    self.blocks = _consolidate(self.blocks)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2217, in _consolidate
    merged_blocks, _ = _merge_blocks(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pandas\core\internals\managers.py", line 2242, in _merge_blocks
    new_values = np.vstack([b.values for b in blocks])  # type: ignore[misc]
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\numpy\core\shape_base.py", line 289, in vstack
    return _nx.concatenate(arrs, 0, dtype=dtype, casting=casting)
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 16.6 MiB for an array with shape (93, 23410) and data type float64
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 16.6 MiB for an array with shape (93, 23410) and data type float64

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2025-07-28 22:47:42,175:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-07-28 22:47:42,177:INFO:Initializing create_model()
2025-07-28 22:47:42,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 22:47:42,177:INFO:Checking exceptions
2025-07-28 22:47:42,178:INFO:Importing libraries
2025-07-28 22:47:42,178:INFO:Copying training dataset
2025-07-28 22:47:42,432:INFO:Defining folds
2025-07-28 22:47:42,432:INFO:Declaring metric variables
2025-07-28 22:47:42,432:INFO:Importing untrained model
2025-07-28 22:47:42,432:INFO:Declaring custom model
2025-07-28 22:47:42,433:INFO:Gradient Boosting Classifier Imported successfully
2025-07-28 22:47:42,434:INFO:Cross validation set to False
2025-07-28 22:47:42,434:INFO:Fitting Model
2025-07-28 22:55:35,337:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-28 22:55:35,337:INFO:create_model() successfully completed......................................
2025-07-28 22:55:35,454:ERROR:create_model() for GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) raised an exception or returned all 0.0:
2025-07-28 22:55:35,454:ERROR:Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 954, in compare_models
    np.sum(
AssertionError

2025-07-28 22:55:35,462:INFO:_master_model_container: 64
2025-07-28 22:55:35,463:INFO:_display_container: 5
2025-07-28 22:55:35,463:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-28 22:55:35,463:INFO:compare_models() successfully completed......................................
2025-07-28 23:13:59,514:INFO:Initializing tune_model()
2025-07-28 23:13:59,514:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=50, custom_grid={'n_estimators': [100, 200, 300], 'max_depth': [None, 10, 20, 30], 'min_samples_split': [2, 5, 10]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 23:13:59,514:INFO:Checking exceptions
2025-07-28 23:13:59,635:INFO:Copying training dataset
2025-07-28 23:13:59,805:INFO:Checking base model
2025-07-28 23:13:59,805:INFO:Base model : Gradient Boosting Classifier
2025-07-28 23:13:59,805:INFO:Declaring metric variables
2025-07-28 23:13:59,805:INFO:Defining Hyperparameters
2025-07-28 23:13:59,929:INFO:custom_grid: {'actual_estimator__n_estimators': [100, 200, 300], 'actual_estimator__max_depth': [None, 10, 20, 30], 'actual_estimator__min_samples_split': [2, 5, 10]}
2025-07-28 23:13:59,929:INFO:Tuning with n_jobs=-1
2025-07-28 23:13:59,929:INFO:Initializing RandomizedSearchCV
2025-07-28 23:13:59,931:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_search.py:318: UserWarning: The total space of parameters 36 is smaller than n_iter=50. Running 36 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2025-07-28 23:15:08,115:INFO:Initializing tune_model()
2025-07-28 23:15:08,115:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=50, custom_grid={'n_estimators': [100, 200, 300], 'max_depth': [None, 10, 20, 30], 'min_samples_split': [2, 5, 10]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={'n_jobs': 1}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 23:15:08,115:INFO:Checking exceptions
2025-07-28 23:15:08,239:INFO:Copying training dataset
2025-07-28 23:15:08,402:INFO:Checking base model
2025-07-28 23:15:08,403:INFO:Base model : Gradient Boosting Classifier
2025-07-28 23:15:08,403:INFO:Declaring metric variables
2025-07-28 23:15:08,403:INFO:Defining Hyperparameters
2025-07-28 23:15:08,548:INFO:custom_grid: {'actual_estimator__n_estimators': [100, 200, 300], 'actual_estimator__max_depth': [None, 10, 20, 30], 'actual_estimator__min_samples_split': [2, 5, 10]}
2025-07-28 23:15:08,548:INFO:Tuning with n_jobs=-1
2025-07-28 23:15:08,548:INFO:Initializing RandomizedSearchCV
2025-07-28 23:15:49,886:INFO:Initializing tune_model()
2025-07-28 23:15:49,886:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=50, custom_grid={'n_estimators': [100, 200, 300], 'max_depth': [None, 10, 20, 30], 'min_samples_split': [2, 5, 10]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 23:15:49,886:INFO:Checking exceptions
2025-07-28 23:15:49,993:INFO:Copying training dataset
2025-07-28 23:15:50,162:INFO:Checking base model
2025-07-28 23:15:50,162:INFO:Base model : Gradient Boosting Classifier
2025-07-28 23:15:50,162:INFO:Declaring metric variables
2025-07-28 23:15:50,162:INFO:Defining Hyperparameters
2025-07-28 23:15:50,284:INFO:custom_grid: {'actual_estimator__n_estimators': [100, 200, 300], 'actual_estimator__max_depth': [None, 10, 20, 30], 'actual_estimator__min_samples_split': [2, 5, 10]}
2025-07-28 23:15:50,284:INFO:Tuning with n_jobs=-1
2025-07-28 23:15:50,284:INFO:Initializing RandomizedSearchCV
2025-07-28 23:15:50,287:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\model_selection\_search.py:318: UserWarning: The total space of parameters 36 is smaller than n_iter=50. Running 36 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2025-07-28 23:16:58,898:INFO:Initializing tune_model()
2025-07-28 23:16:58,899:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=5, custom_grid={'n_estimators': [100, 200, 300], 'max_depth': [None, 10, 20, 30], 'min_samples_split': [2, 5, 10]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 23:16:58,899:INFO:Checking exceptions
2025-07-28 23:16:59,027:INFO:Copying training dataset
2025-07-28 23:16:59,193:INFO:Checking base model
2025-07-28 23:16:59,194:INFO:Base model : Gradient Boosting Classifier
2025-07-28 23:16:59,194:INFO:Declaring metric variables
2025-07-28 23:16:59,194:INFO:Defining Hyperparameters
2025-07-28 23:16:59,322:INFO:custom_grid: {'actual_estimator__n_estimators': [100, 200, 300], 'actual_estimator__max_depth': [None, 10, 20, 30], 'actual_estimator__min_samples_split': [2, 5, 10]}
2025-07-28 23:16:59,322:INFO:Tuning with n_jobs=-1
2025-07-28 23:16:59,322:INFO:Initializing RandomizedSearchCV
2025-07-28 23:17:26,505:INFO:Initializing predict_model()
2025-07-28 23:17:26,506:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BE57317A30>)
2025-07-28 23:17:26,506:INFO:Checking exceptions
2025-07-28 23:17:26,506:INFO:Preloading libraries
2025-07-28 23:17:26,506:INFO:Set up data.
2025-07-28 23:17:26,662:INFO:Set up index.
2025-07-28 23:17:28,898:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 23:17:29,202:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 23:17:29,501:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'PortScan') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-28 23:22:14,719:INFO:Initializing tune_model()
2025-07-28 23:22:14,719:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 23:22:14,719:INFO:Checking exceptions
2025-07-28 23:22:20,806:INFO:Initializing tune_model()
2025-07-28 23:22:20,806:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 23:22:20,806:INFO:Checking exceptions
2025-07-28 23:22:35,690:INFO:Initializing tune_model()
2025-07-28 23:22:35,690:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 23:22:35,690:INFO:Checking exceptions
2025-07-28 23:22:35,805:INFO:Copying training dataset
2025-07-28 23:22:35,977:INFO:Checking base model
2025-07-28 23:22:35,977:INFO:Base model : Gradient Boosting Classifier
2025-07-28 23:22:35,977:INFO:Declaring metric variables
2025-07-28 23:22:35,978:INFO:Defining Hyperparameters
2025-07-28 23:22:36,102:INFO:Tuning with n_jobs=-1
2025-07-28 23:22:36,102:INFO:Initializing RandomizedSearchCV
2025-07-28 23:23:40,618:INFO:Initializing tune_model()
2025-07-28 23:23:40,618:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD02F961D0>)
2025-07-28 23:23:40,618:INFO:Checking exceptions
2025-07-28 23:23:40,745:INFO:Copying training dataset
2025-07-28 23:23:40,920:INFO:Checking base model
2025-07-28 23:23:40,921:INFO:Base model : Gradient Boosting Classifier
2025-07-28 23:23:40,921:INFO:Declaring metric variables
2025-07-28 23:23:40,921:INFO:Defining Hyperparameters
2025-07-28 23:23:41,046:INFO:Tuning with n_jobs=-1
2025-07-28 23:23:41,047:INFO:Initializing RandomizedSearchCV
2025-07-29 10:23:55,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-29 10:23:55,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-29 10:23:55,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-29 10:23:55,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-29 10:31:50,992:WARNING:C:\Users\DELL\AppData\Local\Temp\ipykernel_5700\4054917973.py:8: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at C:\actions-runner\_work\pytorch\pytorch\pytorch\torch\csrc\utils\tensor_new.cpp:257.)
  edge_index = torch.tensor([A.row, A.col], dtype=torch.long)

2025-08-21 10:49:33,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-21 10:49:33,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-21 10:49:33,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-21 10:49:33,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-21 10:49:39,190:INFO:PyCaret ClassificationExperiment
2025-08-21 10:49:39,190:INFO:Logging name: clf-default-name
2025-08-21 10:49:39,190:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-21 10:49:39,191:INFO:version 3.3.2
2025-08-21 10:49:39,191:INFO:Initializing setup()
2025-08-21 10:49:39,191:INFO:self.USI: 39ed
2025-08-21 10:49:39,191:INFO:self._variable_keys: {'seed', 'gpu_param', 'y_test', 'n_jobs_param', 'fold_groups_param', 'fold_generator', '_ml_usecase', 'exp_name_log', 'gpu_n_jobs_param', 'pipeline', 'data', 'exp_id', 'USI', 'memory', 'log_plots_param', 'fold_shuffle_param', 'fix_imbalance', 'y_train', '_available_plots', 'X_train', 'target_param', 'idx', 'X', 'logging_param', 'is_multiclass', 'y', 'X_test', 'html_param'}
2025-08-21 10:49:39,191:INFO:Checking environment
2025-08-21 10:49:39,191:INFO:python_version: 3.10.13
2025-08-21 10:49:39,191:INFO:python_build: ('main', 'Sep 11 2023 13:15:57')
2025-08-21 10:49:39,192:INFO:machine: AMD64
2025-08-21 10:49:39,192:INFO:platform: Windows-10-10.0.22631-SP0
2025-08-21 10:49:39,192:INFO:Memory: svmem(total=16853479424, available=3581624320, percent=78.7, used=13271855104, free=3581624320)
2025-08-21 10:49:39,192:INFO:Physical Core: 16
2025-08-21 10:49:39,192:INFO:Logical Core: 24
2025-08-21 10:49:39,192:INFO:Checking libraries
2025-08-21 10:49:39,192:INFO:System:
2025-08-21 10:49:39,192:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:15:57) [MSC v.1916 64 bit (AMD64)]
2025-08-21 10:49:39,192:INFO:executable: c:\Users\DELL\anaconda3\envs\tf\python.exe
2025-08-21 10:49:39,192:INFO:   machine: Windows-10-10.0.22631-SP0
2025-08-21 10:49:39,192:INFO:PyCaret required dependencies:
2025-08-21 10:49:39,411:INFO:                 pip: 24.2
2025-08-21 10:49:39,411:INFO:          setuptools: 75.1.0
2025-08-21 10:49:39,411:INFO:             pycaret: 3.3.2
2025-08-21 10:49:39,411:INFO:             IPython: 8.36.0
2025-08-21 10:49:39,411:INFO:          ipywidgets: 8.1.7
2025-08-21 10:49:39,411:INFO:                tqdm: 4.67.1
2025-08-21 10:49:39,411:INFO:               numpy: 1.26.4
2025-08-21 10:49:39,411:INFO:              pandas: 2.1.4
2025-08-21 10:49:39,411:INFO:              jinja2: 3.1.6
2025-08-21 10:49:39,411:INFO:               scipy: 1.11.4
2025-08-21 10:49:39,411:INFO:              joblib: 1.3.2
2025-08-21 10:49:39,411:INFO:             sklearn: 1.4.2
2025-08-21 10:49:39,411:INFO:                pyod: 2.0.5
2025-08-21 10:49:39,411:INFO:            imblearn: 0.13.0
2025-08-21 10:49:39,411:INFO:   category_encoders: 2.7.0
2025-08-21 10:49:39,411:INFO:            lightgbm: 4.6.0
2025-08-21 10:49:39,411:INFO:               numba: 0.61.2
2025-08-21 10:49:39,411:INFO:            requests: 2.32.3
2025-08-21 10:49:39,411:INFO:          matplotlib: 3.7.5
2025-08-21 10:49:39,411:INFO:          scikitplot: 0.3.7
2025-08-21 10:49:39,411:INFO:         yellowbrick: 1.5
2025-08-21 10:49:39,411:INFO:              plotly: 5.24.1
2025-08-21 10:49:39,411:INFO:    plotly-resampler: Not installed
2025-08-21 10:49:39,411:INFO:             kaleido: 0.2.1
2025-08-21 10:49:39,411:INFO:           schemdraw: 0.15
2025-08-21 10:49:39,411:INFO:         statsmodels: 0.14.4
2025-08-21 10:49:39,411:INFO:              sktime: 0.26.0
2025-08-21 10:49:39,411:INFO:               tbats: 1.1.3
2025-08-21 10:49:39,411:INFO:            pmdarima: 2.0.4
2025-08-21 10:49:39,411:INFO:              psutil: 7.0.0
2025-08-21 10:49:39,411:INFO:          markupsafe: 2.1.3
2025-08-21 10:49:39,411:INFO:             pickle5: Not installed
2025-08-21 10:49:39,411:INFO:         cloudpickle: 2.2.1
2025-08-21 10:49:39,411:INFO:         deprecation: 2.1.0
2025-08-21 10:49:39,411:INFO:              xxhash: 3.5.0
2025-08-21 10:49:39,411:INFO:           wurlitzer: Not installed
2025-08-21 10:49:39,411:INFO:PyCaret optional dependencies:
2025-08-21 10:49:40,669:INFO:                shap: Not installed
2025-08-21 10:49:40,669:INFO:           interpret: Not installed
2025-08-21 10:49:40,669:INFO:                umap: Not installed
2025-08-21 10:49:40,669:INFO:     ydata_profiling: Not installed
2025-08-21 10:49:40,669:INFO:  explainerdashboard: Not installed
2025-08-21 10:49:40,669:INFO:             autoviz: Not installed
2025-08-21 10:49:40,669:INFO:           fairlearn: Not installed
2025-08-21 10:49:40,669:INFO:          deepchecks: Not installed
2025-08-21 10:49:40,669:INFO:             xgboost: 3.0.1
2025-08-21 10:49:40,669:INFO:            catboost: Not installed
2025-08-21 10:49:40,669:INFO:              kmodes: Not installed
2025-08-21 10:49:40,669:INFO:             mlxtend: Not installed
2025-08-21 10:49:40,669:INFO:       statsforecast: Not installed
2025-08-21 10:49:40,669:INFO:        tune_sklearn: Not installed
2025-08-21 10:49:40,669:INFO:                 ray: Not installed
2025-08-21 10:49:40,669:INFO:            hyperopt: Not installed
2025-08-21 10:49:40,669:INFO:              optuna: Not installed
2025-08-21 10:49:40,669:INFO:               skopt: Not installed
2025-08-21 10:49:40,669:INFO:              mlflow: 2.22.0
2025-08-21 10:49:40,669:INFO:              gradio: Not installed
2025-08-21 10:49:40,669:INFO:             fastapi: 0.115.12
2025-08-21 10:49:40,669:INFO:             uvicorn: 0.34.2
2025-08-21 10:49:40,669:INFO:              m2cgen: Not installed
2025-08-21 10:49:40,669:INFO:           evidently: Not installed
2025-08-21 10:49:40,669:INFO:               fugue: Not installed
2025-08-21 10:49:40,669:INFO:           streamlit: 1.45.1
2025-08-21 10:49:40,669:INFO:             prophet: Not installed
2025-08-21 10:49:40,669:INFO:None
2025-08-21 10:49:40,671:INFO:Set up data.
2025-08-21 11:00:10,275:INFO:PyCaret ClassificationExperiment
2025-08-21 11:00:10,275:INFO:Logging name: clf-default-name
2025-08-21 11:00:10,275:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-21 11:00:10,275:INFO:version 3.3.2
2025-08-21 11:00:10,275:INFO:Initializing setup()
2025-08-21 11:00:10,275:INFO:self.USI: 9567
2025-08-21 11:00:10,275:INFO:self._variable_keys: {'seed', 'gpu_param', 'y_test', 'n_jobs_param', 'fold_groups_param', 'fold_generator', '_ml_usecase', 'exp_name_log', 'gpu_n_jobs_param', 'pipeline', 'data', 'exp_id', 'USI', 'memory', 'log_plots_param', 'fold_shuffle_param', 'fix_imbalance', 'y_train', '_available_plots', 'X_train', 'target_param', 'idx', 'X', 'logging_param', 'is_multiclass', 'y', 'X_test', 'html_param'}
2025-08-21 11:00:10,275:INFO:Checking environment
2025-08-21 11:00:10,275:INFO:python_version: 3.10.13
2025-08-21 11:00:10,275:INFO:python_build: ('main', 'Sep 11 2023 13:15:57')
2025-08-21 11:00:10,275:INFO:machine: AMD64
2025-08-21 11:00:10,275:INFO:platform: Windows-10-10.0.22631-SP0
2025-08-21 11:00:10,279:INFO:Memory: svmem(total=16853479424, available=3414556672, percent=79.7, used=13438922752, free=3414556672)
2025-08-21 11:00:10,280:INFO:Physical Core: 16
2025-08-21 11:00:10,280:INFO:Logical Core: 24
2025-08-21 11:00:10,280:INFO:Checking libraries
2025-08-21 11:00:10,280:INFO:System:
2025-08-21 11:00:10,280:INFO:    python: 3.10.13 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:15:57) [MSC v.1916 64 bit (AMD64)]
2025-08-21 11:00:10,280:INFO:executable: c:\Users\DELL\anaconda3\envs\tf\python.exe
2025-08-21 11:00:10,280:INFO:   machine: Windows-10-10.0.22631-SP0
2025-08-21 11:00:10,280:INFO:PyCaret required dependencies:
2025-08-21 11:00:10,280:INFO:                 pip: 24.2
2025-08-21 11:00:10,280:INFO:          setuptools: 75.1.0
2025-08-21 11:00:10,280:INFO:             pycaret: 3.3.2
2025-08-21 11:00:10,280:INFO:             IPython: 8.36.0
2025-08-21 11:00:10,280:INFO:          ipywidgets: 8.1.7
2025-08-21 11:00:10,280:INFO:                tqdm: 4.67.1
2025-08-21 11:00:10,280:INFO:               numpy: 1.26.4
2025-08-21 11:00:10,280:INFO:              pandas: 2.1.4
2025-08-21 11:00:10,280:INFO:              jinja2: 3.1.6
2025-08-21 11:00:10,280:INFO:               scipy: 1.11.4
2025-08-21 11:00:10,280:INFO:              joblib: 1.3.2
2025-08-21 11:00:10,280:INFO:             sklearn: 1.4.2
2025-08-21 11:00:10,280:INFO:                pyod: 2.0.5
2025-08-21 11:00:10,280:INFO:            imblearn: 0.13.0
2025-08-21 11:00:10,280:INFO:   category_encoders: 2.7.0
2025-08-21 11:00:10,280:INFO:            lightgbm: 4.6.0
2025-08-21 11:00:10,280:INFO:               numba: 0.61.2
2025-08-21 11:00:10,280:INFO:            requests: 2.32.3
2025-08-21 11:00:10,280:INFO:          matplotlib: 3.7.5
2025-08-21 11:00:10,280:INFO:          scikitplot: 0.3.7
2025-08-21 11:00:10,281:INFO:         yellowbrick: 1.5
2025-08-21 11:00:10,281:INFO:              plotly: 5.24.1
2025-08-21 11:00:10,281:INFO:    plotly-resampler: Not installed
2025-08-21 11:00:10,281:INFO:             kaleido: 0.2.1
2025-08-21 11:00:10,281:INFO:           schemdraw: 0.15
2025-08-21 11:00:10,281:INFO:         statsmodels: 0.14.4
2025-08-21 11:00:10,281:INFO:              sktime: 0.26.0
2025-08-21 11:00:10,281:INFO:               tbats: 1.1.3
2025-08-21 11:00:10,281:INFO:            pmdarima: 2.0.4
2025-08-21 11:00:10,281:INFO:              psutil: 7.0.0
2025-08-21 11:00:10,281:INFO:          markupsafe: 2.1.3
2025-08-21 11:00:10,281:INFO:             pickle5: Not installed
2025-08-21 11:00:10,281:INFO:         cloudpickle: 2.2.1
2025-08-21 11:00:10,281:INFO:         deprecation: 2.1.0
2025-08-21 11:00:10,281:INFO:              xxhash: 3.5.0
2025-08-21 11:00:10,281:INFO:           wurlitzer: Not installed
2025-08-21 11:00:10,281:INFO:PyCaret optional dependencies:
2025-08-21 11:00:10,281:INFO:                shap: Not installed
2025-08-21 11:00:10,281:INFO:           interpret: Not installed
2025-08-21 11:00:10,281:INFO:                umap: Not installed
2025-08-21 11:00:10,281:INFO:     ydata_profiling: Not installed
2025-08-21 11:00:10,281:INFO:  explainerdashboard: Not installed
2025-08-21 11:00:10,281:INFO:             autoviz: Not installed
2025-08-21 11:00:10,281:INFO:           fairlearn: Not installed
2025-08-21 11:00:10,281:INFO:          deepchecks: Not installed
2025-08-21 11:00:10,281:INFO:             xgboost: 3.0.1
2025-08-21 11:00:10,281:INFO:            catboost: Not installed
2025-08-21 11:00:10,281:INFO:              kmodes: Not installed
2025-08-21 11:00:10,281:INFO:             mlxtend: Not installed
2025-08-21 11:00:10,281:INFO:       statsforecast: Not installed
2025-08-21 11:00:10,281:INFO:        tune_sklearn: Not installed
2025-08-21 11:00:10,281:INFO:                 ray: Not installed
2025-08-21 11:00:10,281:INFO:            hyperopt: Not installed
2025-08-21 11:00:10,281:INFO:              optuna: Not installed
2025-08-21 11:00:10,281:INFO:               skopt: Not installed
2025-08-21 11:00:10,281:INFO:              mlflow: 2.22.0
2025-08-21 11:00:10,281:INFO:              gradio: Not installed
2025-08-21 11:00:10,281:INFO:             fastapi: 0.115.12
2025-08-21 11:00:10,281:INFO:             uvicorn: 0.34.2
2025-08-21 11:00:10,281:INFO:              m2cgen: Not installed
2025-08-21 11:00:10,281:INFO:           evidently: Not installed
2025-08-21 11:00:10,282:INFO:               fugue: Not installed
2025-08-21 11:00:10,282:INFO:           streamlit: 1.45.1
2025-08-21 11:00:10,282:INFO:             prophet: Not installed
2025-08-21 11:00:10,282:INFO:None
2025-08-21 11:00:10,282:INFO:Set up data.
2025-08-21 11:00:10,328:INFO:Set up folding strategy.
2025-08-21 11:00:10,329:INFO:Set up train/test split.
2025-08-21 11:00:10,420:INFO:Set up index.
2025-08-21 11:00:10,420:INFO:Assigning column types.
2025-08-21 11:00:10,461:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-21 11:00:10,484:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-21 11:00:10,490:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-21 11:00:10,530:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:10,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:10,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-21 11:00:10,551:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-21 11:00:10,565:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:10,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:10,569:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-21 11:00:10,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-21 11:00:10,605:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:10,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:10,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-21 11:00:10,643:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:10,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:10,645:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-21 11:00:10,681:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:10,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:10,719:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:10,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:10,721:INFO:Preparing preprocessing pipeline...
2025-08-21 11:00:10,721:INFO:Set up label encoding.
2025-08-21 11:00:10,721:INFO:Set up simple imputation.
2025-08-21 11:00:10,811:INFO:Finished creating preprocessing pipeline.
2025-08-21 11:00:10,820:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DELL\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PC1', 'PC2', 'PC3', 'PC4', 'PC5',
                                             'PC6', 'PC7', 'PC8', 'PC9', 'PC10',
                                             'PC11', 'PC12', 'PC13', 'PC14',
                                             'PC15', 'PC16...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-21 11:00:10,820:INFO:Creating final display dataframe.
2025-08-21 11:00:11,050:INFO:Setup _display_container:                     Description                                        Value
0                    Session id                                           42
1                        Target                                       attack
2                   Target type                                   Multiclass
3                Target mapping  DoS: 0, Probe: 1, R2L: 2, U2R: 3, normal: 4
4           Original data shape                                 (125963, 21)
5        Transformed data shape                                 (125963, 21)
6   Transformed train set shape                                  (88174, 21)
7    Transformed test set shape                                  (37789, 21)
8              Numeric features                                           20
9                    Preprocess                                         True
10              Imputation type                                       simple
11           Numeric imputation                                         mean
12       Categorical imputation                                         mode
13               Fold Generator                              StratifiedKFold
14                  Fold Number                                           10
15                     CPU Jobs                                           -1
16                      Use GPU                                        False
17               Log Experiment                                        False
18              Experiment Name                             clf-default-name
19                          USI                                         9567
2025-08-21 11:00:11,082:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:11,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:11,121:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:11,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:11,121:INFO:setup() successfully completed in 0.85s...............
2025-08-21 11:00:11,121:INFO:gpu_param set to False
2025-08-21 11:00:11,160:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:11,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:00:11,200:INFO:Soft dependency imported: xgboost: 3.0.1
2025-08-21 11:00:11,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-21 11:01:29,734:INFO:Initializing compare_models()
2025-08-21 11:01:29,735:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-21 11:01:29,735:INFO:Checking exceptions
2025-08-21 11:01:29,762:INFO:Preparing display monitor
2025-08-21 11:01:29,768:INFO:Initializing Logistic Regression
2025-08-21 11:01:29,768:INFO:Total runtime is 0.0 minutes
2025-08-21 11:01:29,768:INFO:SubProcess create_model() called ==================================
2025-08-21 11:01:29,769:INFO:Initializing create_model()
2025-08-21 11:01:29,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:01:29,769:INFO:Checking exceptions
2025-08-21 11:01:29,769:INFO:Importing libraries
2025-08-21 11:01:29,769:INFO:Copying training dataset
2025-08-21 11:01:29,809:INFO:Defining folds
2025-08-21 11:01:29,809:INFO:Declaring metric variables
2025-08-21 11:01:29,809:INFO:Importing untrained model
2025-08-21 11:01:29,810:INFO:Logistic Regression Imported successfully
2025-08-21 11:01:29,810:INFO:Starting cross validation
2025-08-21 11:01:29,811:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:01:48,584:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:48,635:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:48,672:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:48,693:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:01:48,713:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:49,635:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:49,652:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:49,704:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:49,754:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,004:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:50,022:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,073:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,092:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:01:50,112:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,153:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:50,168:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,171:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:50,192:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,205:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,222:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:50,234:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,242:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,242:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,272:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,281:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,316:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,320:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:50,334:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,342:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:50,361:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,372:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,402:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,414:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,419:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

at the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:50,420:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:01:50,431:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,432:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,433:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,461:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,463:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,472:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:01:50,491:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,491:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:01:50,533:INFO:Calculating mean and std
2025-08-21 11:01:50,534:INFO:Creating metrics dataframe
2025-08-21 11:01:50,534:INFO:Uploading results into container
2025-08-21 11:01:50,534:INFO:Uploading model into container now
2025-08-21 11:01:50,534:INFO:_master_model_container: 1
2025-08-21 11:01:50,534:INFO:_display_container: 2
2025-08-21 11:01:50,534:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-21 11:01:50,534:INFO:create_model() successfully completed......................................
2025-08-21 11:01:50,653:INFO:SubProcess create_model() end ==================================
2025-08-21 11:01:50,653:INFO:Creating metrics dataframe
2025-08-21 11:01:50,661:INFO:Initializing K Neighbors Classifier
2025-08-21 11:01:50,661:INFO:Total runtime is 0.34822819630304974 minutes
2025-08-21 11:01:50,661:INFO:SubProcess create_model() called ==================================
2025-08-21 11:01:50,661:INFO:Initializing create_model()
2025-08-21 11:01:50,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:01:50,661:INFO:Checking exceptions
2025-08-21 11:01:50,661:INFO:Importing libraries
2025-08-21 11:01:50,661:INFO:Copying training dataset
2025-08-21 11:01:50,692:INFO:Defining folds
2025-08-21 11:01:50,692:INFO:Declaring metric variables
2025-08-21 11:01:50,700:INFO:Importing untrained model
2025-08-21 11:01:50,700:INFO:K Neighbors Classifier Imported successfully
2025-08-21 11:01:50,700:INFO:Starting cross validation
2025-08-21 11:01:50,701:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:02:00,117:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,161:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,167:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,205:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,212:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,219:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,241:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,262:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,301:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,301:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,312:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,342:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,352:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,365:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,372:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,392:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,400:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,401:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,410:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,431:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,441:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,442:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,452:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,461:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:00,472:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,472:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,491:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,502:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:00,520:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,631:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,651:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,683:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:00,732:INFO:Calculating mean and std
2025-08-21 11:02:00,733:INFO:Creating metrics dataframe
2025-08-21 11:02:00,733:INFO:Uploading results into container
2025-08-21 11:02:00,733:INFO:Uploading model into container now
2025-08-21 11:02:00,733:INFO:_master_model_container: 2
2025-08-21 11:02:00,733:INFO:_display_container: 2
2025-08-21 11:02:00,733:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-21 11:02:00,733:INFO:create_model() successfully completed......................................
2025-08-21 11:02:00,841:INFO:SubProcess create_model() end ==================================
2025-08-21 11:02:00,841:INFO:Creating metrics dataframe
2025-08-21 11:02:00,842:INFO:Initializing Naive Bayes
2025-08-21 11:02:00,842:INFO:Total runtime is 0.5179094513257345 minutes
2025-08-21 11:02:00,842:INFO:SubProcess create_model() called ==================================
2025-08-21 11:02:00,842:INFO:Initializing create_model()
2025-08-21 11:02:00,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:02:00,842:INFO:Checking exceptions
2025-08-21 11:02:00,842:INFO:Importing libraries
2025-08-21 11:02:00,842:INFO:Copying training dataset
2025-08-21 11:02:00,884:INFO:Defining folds
2025-08-21 11:02:00,884:INFO:Declaring metric variables
2025-08-21 11:02:00,884:INFO:Importing untrained model
2025-08-21 11:02:00,884:INFO:Naive Bayes Imported successfully
2025-08-21 11:02:00,884:INFO:Starting cross validation
2025-08-21 11:02:00,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:02:01,242:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,272:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,281:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,312:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,317:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,321:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,342:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,342:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,351:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,372:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,372:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,372:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,391:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,421:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,421:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,421:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,460:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:01,460:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,316:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,321:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,330:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,333:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,343:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,355:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,355:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,361:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,373:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,384:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,384:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,390:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:03,461:INFO:Calculating mean and std
2025-08-21 11:02:03,462:INFO:Creating metrics dataframe
2025-08-21 11:02:03,462:INFO:Uploading results into container
2025-08-21 11:02:03,462:INFO:Uploading model into container now
2025-08-21 11:02:03,462:INFO:_master_model_container: 3
2025-08-21 11:02:03,462:INFO:_display_container: 2
2025-08-21 11:02:03,462:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-21 11:02:03,462:INFO:create_model() successfully completed......................................
2025-08-21 11:02:03,571:INFO:SubProcess create_model() end ==================================
2025-08-21 11:02:03,572:INFO:Creating metrics dataframe
2025-08-21 11:02:03,572:INFO:Initializing Decision Tree Classifier
2025-08-21 11:02:03,572:INFO:Total runtime is 0.5634032448132833 minutes
2025-08-21 11:02:03,572:INFO:SubProcess create_model() called ==================================
2025-08-21 11:02:03,572:INFO:Initializing create_model()
2025-08-21 11:02:03,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:02:03,572:INFO:Checking exceptions
2025-08-21 11:02:03,572:INFO:Importing libraries
2025-08-21 11:02:03,572:INFO:Copying training dataset
2025-08-21 11:02:03,611:INFO:Defining folds
2025-08-21 11:02:03,611:INFO:Declaring metric variables
2025-08-21 11:02:03,611:INFO:Importing untrained model
2025-08-21 11:02:03,611:INFO:Decision Tree Classifier Imported successfully
2025-08-21 11:02:03,611:INFO:Starting cross validation
2025-08-21 11:02:03,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:02:06,818:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:06,852:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:06,887:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:06,984:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,019:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,021:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,050:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,063:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,072:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,084:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,101:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,111:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,117:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,117:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,142:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,150:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,151:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,172:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,222:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,256:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,271:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,283:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,301:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,316:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,321:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,328:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,345:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,345:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,371:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:07,415:INFO:Calculating mean and std
2025-08-21 11:02:07,416:INFO:Creating metrics dataframe
2025-08-21 11:02:07,418:INFO:Uploading results into container
2025-08-21 11:02:07,419:INFO:Uploading model into container now
2025-08-21 11:02:07,419:INFO:_master_model_container: 4
2025-08-21 11:02:07,419:INFO:_display_container: 2
2025-08-21 11:02:07,419:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-21 11:02:07,419:INFO:create_model() successfully completed......................................
2025-08-21 11:02:07,520:INFO:SubProcess create_model() end ==================================
2025-08-21 11:02:07,520:INFO:Creating metrics dataframe
2025-08-21 11:02:07,521:INFO:Initializing SVM - Linear Kernel
2025-08-21 11:02:07,521:INFO:Total runtime is 0.6292299270629883 minutes
2025-08-21 11:02:07,522:INFO:SubProcess create_model() called ==================================
2025-08-21 11:02:07,522:INFO:Initializing create_model()
2025-08-21 11:02:07,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:02:07,522:INFO:Checking exceptions
2025-08-21 11:02:07,522:INFO:Importing libraries
2025-08-21 11:02:07,522:INFO:Copying training dataset
2025-08-21 11:02:07,562:INFO:Defining folds
2025-08-21 11:02:07,562:INFO:Declaring metric variables
2025-08-21 11:02:07,562:INFO:Importing untrained model
2025-08-21 11:02:07,562:INFO:SVM - Linear Kernel Imported successfully
2025-08-21 11:02:07,563:INFO:Starting cross validation
2025-08-21 11:02:07,563:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:02:08,467:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,486:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,491:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,504:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,522:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,522:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,533:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,534:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,541:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,542:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,551:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,552:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,561:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:08,567:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,581:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,583:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,584:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,584:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,592:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,592:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,592:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,601:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:08,602:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,620:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,631:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,636:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,636:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,642:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,652:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,661:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:08,667:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,672:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:08,672:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,682:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,691:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,695:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,712:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,712:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:08,726:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,726:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,733:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:08,743:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:08,743:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,752:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:08,800:INFO:Calculating mean and std
2025-08-21 11:02:08,801:INFO:Creating metrics dataframe
2025-08-21 11:02:08,802:INFO:Uploading results into container
2025-08-21 11:02:08,803:INFO:Uploading model into container now
2025-08-21 11:02:08,803:INFO:_master_model_container: 5
2025-08-21 11:02:08,803:INFO:_display_container: 2
2025-08-21 11:02:08,803:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-21 11:02:08,803:INFO:create_model() successfully completed......................................
2025-08-21 11:02:08,912:INFO:SubProcess create_model() end ==================================
2025-08-21 11:02:08,912:INFO:Creating metrics dataframe
2025-08-21 11:02:08,912:INFO:Initializing Ridge Classifier
2025-08-21 11:02:08,912:INFO:Total runtime is 0.6524136662483215 minutes
2025-08-21 11:02:08,912:INFO:SubProcess create_model() called ==================================
2025-08-21 11:02:08,912:INFO:Initializing create_model()
2025-08-21 11:02:08,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:02:08,912:INFO:Checking exceptions
2025-08-21 11:02:08,912:INFO:Importing libraries
2025-08-21 11:02:08,912:INFO:Copying training dataset
2025-08-21 11:02:08,952:INFO:Defining folds
2025-08-21 11:02:08,952:INFO:Declaring metric variables
2025-08-21 11:02:08,952:INFO:Importing untrained model
2025-08-21 11:02:08,952:INFO:Ridge Classifier Imported successfully
2025-08-21 11:02:08,952:INFO:Starting cross validation
2025-08-21 11:02:08,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:02:09,162:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,173:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,182:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,193:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,210:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,223:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,231:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,231:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,241:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,241:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,246:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,263:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,263:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,272:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,283:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,292:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,302:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,310:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,313:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,322:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,331:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,334:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,341:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,352:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,352:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,371:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,376:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,384:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,387:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,392:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,406:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,410:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,422:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,422:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,422:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,437:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,443:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,452:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,452:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:09,452:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,467:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,467:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,471:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,484:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,486:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,492:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,492:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,512:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:09,525:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:09,566:INFO:Calculating mean and std
2025-08-21 11:02:09,567:INFO:Creating metrics dataframe
2025-08-21 11:02:09,567:INFO:Uploading results into container
2025-08-21 11:02:09,567:INFO:Uploading model into container now
2025-08-21 11:02:09,567:INFO:_master_model_container: 6
2025-08-21 11:02:09,567:INFO:_display_container: 2
2025-08-21 11:02:09,567:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-21 11:02:09,567:INFO:create_model() successfully completed......................................
2025-08-21 11:02:09,681:INFO:SubProcess create_model() end ==================================
2025-08-21 11:02:09,681:INFO:Creating metrics dataframe
2025-08-21 11:02:09,683:INFO:Initializing Random Forest Classifier
2025-08-21 11:02:09,683:INFO:Total runtime is 0.6652568936347961 minutes
2025-08-21 11:02:09,684:INFO:SubProcess create_model() called ==================================
2025-08-21 11:02:09,684:INFO:Initializing create_model()
2025-08-21 11:02:09,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:02:09,684:INFO:Checking exceptions
2025-08-21 11:02:09,684:INFO:Importing libraries
2025-08-21 11:02:09,684:INFO:Copying training dataset
2025-08-21 11:02:09,721:INFO:Defining folds
2025-08-21 11:02:09,721:INFO:Declaring metric variables
2025-08-21 11:02:09,721:INFO:Importing untrained model
2025-08-21 11:02:09,721:INFO:Random Forest Classifier Imported successfully
2025-08-21 11:02:09,721:INFO:Starting cross validation
2025-08-21 11:02:09,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:02:29,455:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,491:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,511:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,543:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,562:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,612:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,613:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,623:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,651:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,651:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,661:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,662:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,672:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,692:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:29,692:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,703:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,703:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,713:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,713:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,721:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,734:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,743:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:29,743:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,743:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,752:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,761:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,761:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,773:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:29,783:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,787:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,796:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,812:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:02:29,821:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:29,882:INFO:Calculating mean and std
2025-08-21 11:02:29,883:INFO:Creating metrics dataframe
2025-08-21 11:02:29,884:INFO:Uploading results into container
2025-08-21 11:02:29,884:INFO:Uploading model into container now
2025-08-21 11:02:29,884:INFO:_master_model_container: 7
2025-08-21 11:02:29,884:INFO:_display_container: 2
2025-08-21 11:02:29,884:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-21 11:02:29,884:INFO:create_model() successfully completed......................................
2025-08-21 11:02:29,992:INFO:SubProcess create_model() end ==================================
2025-08-21 11:02:29,992:INFO:Creating metrics dataframe
2025-08-21 11:02:29,992:INFO:Initializing Quadratic Discriminant Analysis
2025-08-21 11:02:29,992:INFO:Total runtime is 1.0037449479103089 minutes
2025-08-21 11:02:29,992:INFO:SubProcess create_model() called ==================================
2025-08-21 11:02:29,992:INFO:Initializing create_model()
2025-08-21 11:02:29,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:02:29,992:INFO:Checking exceptions
2025-08-21 11:02:29,992:INFO:Importing libraries
2025-08-21 11:02:29,992:INFO:Copying training dataset
2025-08-21 11:02:30,034:INFO:Defining folds
2025-08-21 11:02:30,034:INFO:Declaring metric variables
2025-08-21 11:02:30,034:INFO:Importing untrained model
2025-08-21 11:02:30,034:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-21 11:02:30,034:INFO:Starting cross validation
2025-08-21 11:02:30,034:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:02:30,293:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-21 11:02:30,346:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,361:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,363:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,363:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,372:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,372:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,402:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,411:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,413:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,423:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,443:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,443:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,453:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,459:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,485:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,492:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,502:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,535:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,543:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,543:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,553:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,585:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,602:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,603:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,603:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,603:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,622:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,631:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,634:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,642:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,643:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,652:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,672:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,672:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:30,686:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,687:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,692:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,719:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,725:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,760:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:30,816:INFO:Calculating mean and std
2025-08-21 11:02:30,817:INFO:Creating metrics dataframe
2025-08-21 11:02:30,817:INFO:Uploading results into container
2025-08-21 11:02:30,817:INFO:Uploading model into container now
2025-08-21 11:02:30,817:INFO:_master_model_container: 8
2025-08-21 11:02:30,817:INFO:_display_container: 2
2025-08-21 11:02:30,817:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-21 11:02:30,817:INFO:create_model() successfully completed......................................
2025-08-21 11:02:30,928:INFO:SubProcess create_model() end ==================================
2025-08-21 11:02:30,928:INFO:Creating metrics dataframe
2025-08-21 11:02:30,930:INFO:Initializing Ada Boost Classifier
2025-08-21 11:02:30,930:INFO:Total runtime is 1.01936989625295 minutes
2025-08-21 11:02:30,930:INFO:SubProcess create_model() called ==================================
2025-08-21 11:02:30,930:INFO:Initializing create_model()
2025-08-21 11:02:30,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:02:30,930:INFO:Checking exceptions
2025-08-21 11:02:30,930:INFO:Importing libraries
2025-08-21 11:02:30,930:INFO:Copying training dataset
2025-08-21 11:02:30,973:INFO:Defining folds
2025-08-21 11:02:30,973:INFO:Declaring metric variables
2025-08-21 11:02:30,973:INFO:Importing untrained model
2025-08-21 11:02:30,973:INFO:Ada Boost Classifier Imported successfully
2025-08-21 11:02:30,973:INFO:Starting cross validation
2025-08-21 11:02:30,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:02:31,123:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,153:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,183:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,230:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,264:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,296:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,352:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,376:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,404:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:31,433:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-21 11:02:46,147:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,169:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,219:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,274:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,347:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,370:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,429:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,449:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,471:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,489:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,534:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,561:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,574:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,581:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,599:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,602:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,628:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,632:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,647:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,649:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,652:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,662:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,668:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,682:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,706:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,711:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,723:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,732:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,760:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,774:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,783:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:46,791:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,802:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,851:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:46,904:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:47,011:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:02:47,026:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:47,057:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:47,090:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:02:47,151:INFO:Calculating mean and std
2025-08-21 11:02:47,152:INFO:Creating metrics dataframe
2025-08-21 11:02:47,153:INFO:Uploading results into container
2025-08-21 11:02:47,153:INFO:Uploading model into container now
2025-08-21 11:02:47,153:INFO:_master_model_container: 9
2025-08-21 11:02:47,153:INFO:_display_container: 2
2025-08-21 11:02:47,153:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-21 11:02:47,153:INFO:create_model() successfully completed......................................
2025-08-21 11:02:47,281:INFO:SubProcess create_model() end ==================================
2025-08-21 11:02:47,281:INFO:Creating metrics dataframe
2025-08-21 11:02:47,282:INFO:Initializing Gradient Boosting Classifier
2025-08-21 11:02:47,282:INFO:Total runtime is 1.2919023831685386 minutes
2025-08-21 11:02:47,283:INFO:SubProcess create_model() called ==================================
2025-08-21 11:02:47,283:INFO:Initializing create_model()
2025-08-21 11:02:47,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:02:47,283:INFO:Checking exceptions
2025-08-21 11:02:47,283:INFO:Importing libraries
2025-08-21 11:02:47,283:INFO:Copying training dataset
2025-08-21 11:02:47,322:INFO:Defining folds
2025-08-21 11:02:47,322:INFO:Declaring metric variables
2025-08-21 11:02:47,323:INFO:Importing untrained model
2025-08-21 11:02:47,323:INFO:Gradient Boosting Classifier Imported successfully
2025-08-21 11:02:47,323:INFO:Starting cross validation
2025-08-21 11:02:47,324:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:09:00,493:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:00,506:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:00,540:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:00,573:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:00,956:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:00,973:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,023:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,055:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:01,073:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,107:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:01,127:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,156:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,190:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:01,190:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,223:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,256:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,291:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,359:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:01,373:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,406:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:01,406:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,421:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,439:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,454:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,473:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,725:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:01,738:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,756:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:01,790:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,373:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:02,389:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,408:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,439:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,539:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:02,556:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,589:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,609:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,806:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:02,825:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,855:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,878:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:02,922:INFO:Calculating mean and std
2025-08-21 11:09:02,922:INFO:Creating metrics dataframe
2025-08-21 11:09:02,925:INFO:Uploading results into container
2025-08-21 11:09:02,925:INFO:Uploading model into container now
2025-08-21 11:09:02,925:INFO:_master_model_container: 10
2025-08-21 11:09:02,925:INFO:_display_container: 2
2025-08-21 11:09:02,926:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-21 11:09:02,926:INFO:create_model() successfully completed......................................
2025-08-21 11:09:03,042:INFO:SubProcess create_model() end ==================================
2025-08-21 11:09:03,042:INFO:Creating metrics dataframe
2025-08-21 11:09:03,042:INFO:Initializing Linear Discriminant Analysis
2025-08-21 11:09:03,042:INFO:Total runtime is 7.554567432403564 minutes
2025-08-21 11:09:03,042:INFO:SubProcess create_model() called ==================================
2025-08-21 11:09:03,042:INFO:Initializing create_model()
2025-08-21 11:09:03,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:09:03,042:INFO:Checking exceptions
2025-08-21 11:09:03,042:INFO:Importing libraries
2025-08-21 11:09:03,042:INFO:Copying training dataset
2025-08-21 11:09:03,089:INFO:Defining folds
2025-08-21 11:09:03,089:INFO:Declaring metric variables
2025-08-21 11:09:03,089:INFO:Importing untrained model
2025-08-21 11:09:03,089:INFO:Linear Discriminant Analysis Imported successfully
2025-08-21 11:09:03,089:INFO:Starting cross validation
2025-08-21 11:09:03,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:09:03,273:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:03,290:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,325:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,356:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,774:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:03,807:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,807:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:03,842:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,859:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,875:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:03,896:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,907:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,907:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:03,940:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,940:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,957:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,957:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:03,973:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,994:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:03,994:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:04,007:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,026:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,035:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,040:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:04,056:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,056:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,073:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:04,073:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,073:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,090:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,127:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,128:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-08-21 11:09:04,132:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,141:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,141:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,156:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,173:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,209:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,228:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,273:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:04,340:INFO:Calculating mean and std
2025-08-21 11:09:04,340:INFO:Creating metrics dataframe
2025-08-21 11:09:04,340:INFO:Uploading results into container
2025-08-21 11:09:04,340:INFO:Uploading model into container now
2025-08-21 11:09:04,340:INFO:_master_model_container: 11
2025-08-21 11:09:04,340:INFO:_display_container: 2
2025-08-21 11:09:04,340:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-21 11:09:04,340:INFO:create_model() successfully completed......................................
2025-08-21 11:09:04,523:INFO:SubProcess create_model() end ==================================
2025-08-21 11:09:04,523:INFO:Creating metrics dataframe
2025-08-21 11:09:04,526:INFO:Initializing Extra Trees Classifier
2025-08-21 11:09:04,526:INFO:Total runtime is 7.579297757148742 minutes
2025-08-21 11:09:04,526:INFO:SubProcess create_model() called ==================================
2025-08-21 11:09:04,527:INFO:Initializing create_model()
2025-08-21 11:09:04,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:09:04,527:INFO:Checking exceptions
2025-08-21 11:09:04,527:INFO:Importing libraries
2025-08-21 11:09:04,527:INFO:Copying training dataset
2025-08-21 11:09:04,590:INFO:Defining folds
2025-08-21 11:09:04,590:INFO:Declaring metric variables
2025-08-21 11:09:04,590:INFO:Importing untrained model
2025-08-21 11:09:04,590:INFO:Extra Trees Classifier Imported successfully
2025-08-21 11:09:04,590:INFO:Starting cross validation
2025-08-21 11:09:04,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:09:08,275:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,357:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,357:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,357:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,390:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,390:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,390:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,390:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,406:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,406:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,406:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,421:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,424:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,427:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,439:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,440:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,440:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,440:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,456:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,456:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,456:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:08,456:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,456:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,473:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,473:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,473:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:08,493:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,493:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,493:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,506:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,506:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,506:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:08,533:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:08,606:INFO:Calculating mean and std
2025-08-21 11:09:08,606:INFO:Creating metrics dataframe
2025-08-21 11:09:08,606:INFO:Uploading results into container
2025-08-21 11:09:08,606:INFO:Uploading model into container now
2025-08-21 11:09:08,606:INFO:_master_model_container: 12
2025-08-21 11:09:08,606:INFO:_display_container: 2
2025-08-21 11:09:08,606:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-21 11:09:08,606:INFO:create_model() successfully completed......................................
2025-08-21 11:09:08,732:INFO:SubProcess create_model() end ==================================
2025-08-21 11:09:08,732:INFO:Creating metrics dataframe
2025-08-21 11:09:08,734:INFO:Initializing Extreme Gradient Boosting
2025-08-21 11:09:08,734:INFO:Total runtime is 7.649445915222167 minutes
2025-08-21 11:09:08,734:INFO:SubProcess create_model() called ==================================
2025-08-21 11:09:08,734:INFO:Initializing create_model()
2025-08-21 11:09:08,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:09:08,734:INFO:Checking exceptions
2025-08-21 11:09:08,734:INFO:Importing libraries
2025-08-21 11:09:08,734:INFO:Copying training dataset
2025-08-21 11:09:08,773:INFO:Defining folds
2025-08-21 11:09:08,773:INFO:Declaring metric variables
2025-08-21 11:09:08,773:INFO:Importing untrained model
2025-08-21 11:09:08,773:INFO:Extreme Gradient Boosting Imported successfully
2025-08-21 11:09:08,773:INFO:Starting cross validation
2025-08-21 11:09:08,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:09:19,651:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,699:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,723:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,748:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,760:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,787:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:19,789:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,807:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,808:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,812:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,812:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,816:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,822:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,838:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,849:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,850:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,854:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,854:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,873:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,887:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,892:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,893:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,895:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:19,895:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,899:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,911:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,912:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,914:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,958:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:19,964:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:20,001:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:20,010:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:20,077:INFO:Calculating mean and std
2025-08-21 11:09:20,078:INFO:Creating metrics dataframe
2025-08-21 11:09:20,080:INFO:Uploading results into container
2025-08-21 11:09:20,080:INFO:Uploading model into container now
2025-08-21 11:09:20,081:INFO:_master_model_container: 13
2025-08-21 11:09:20,081:INFO:_display_container: 2
2025-08-21 11:09:20,082:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-21 11:09:20,082:INFO:create_model() successfully completed......................................
2025-08-21 11:09:20,193:INFO:SubProcess create_model() end ==================================
2025-08-21 11:09:20,194:INFO:Creating metrics dataframe
2025-08-21 11:09:20,195:INFO:Initializing Light Gradient Boosting Machine
2025-08-21 11:09:20,195:INFO:Total runtime is 7.840456084410349 minutes
2025-08-21 11:09:20,196:INFO:SubProcess create_model() called ==================================
2025-08-21 11:09:20,196:INFO:Initializing create_model()
2025-08-21 11:09:20,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:09:20,196:INFO:Checking exceptions
2025-08-21 11:09:20,196:INFO:Importing libraries
2025-08-21 11:09:20,196:INFO:Copying training dataset
2025-08-21 11:09:20,234:INFO:Defining folds
2025-08-21 11:09:20,234:INFO:Declaring metric variables
2025-08-21 11:09:20,234:INFO:Importing untrained model
2025-08-21 11:09:20,234:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-21 11:09:20,235:INFO:Starting cross validation
2025-08-21 11:09:20,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:09:29,506:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,589:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,606:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,657:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,673:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,740:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,740:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,807:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,827:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,856:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,873:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,940:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:29,990:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:30,040:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:30,106:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:30,857:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:30,907:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:30,957:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,810:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,810:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,856:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,856:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,873:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,890:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,906:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,926:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,939:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,956:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,973:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:32,990:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,056:INFO:Calculating mean and std
2025-08-21 11:09:33,057:INFO:Creating metrics dataframe
2025-08-21 11:09:33,057:INFO:Uploading results into container
2025-08-21 11:09:33,057:INFO:Uploading model into container now
2025-08-21 11:09:33,057:INFO:_master_model_container: 14
2025-08-21 11:09:33,057:INFO:_display_container: 2
2025-08-21 11:09:33,057:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-21 11:09:33,057:INFO:create_model() successfully completed......................................
2025-08-21 11:09:33,173:INFO:SubProcess create_model() end ==================================
2025-08-21 11:09:33,173:INFO:Creating metrics dataframe
2025-08-21 11:09:33,188:INFO:Initializing Dummy Classifier
2025-08-21 11:09:33,188:INFO:Total runtime is 8.057012240091959 minutes
2025-08-21 11:09:33,188:INFO:SubProcess create_model() called ==================================
2025-08-21 11:09:33,189:INFO:Initializing create_model()
2025-08-21 11:09:33,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A32CABD420>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:09:33,190:INFO:Checking exceptions
2025-08-21 11:09:33,190:INFO:Importing libraries
2025-08-21 11:09:33,190:INFO:Copying training dataset
2025-08-21 11:09:33,228:INFO:Defining folds
2025-08-21 11:09:33,228:INFO:Declaring metric variables
2025-08-21 11:09:33,228:INFO:Importing untrained model
2025-08-21 11:09:33,228:INFO:Dummy Classifier Imported successfully
2025-08-21 11:09:33,228:INFO:Starting cross validation
2025-08-21 11:09:33,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-21 11:09:33,404:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,424:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,424:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,444:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,457:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,457:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,472:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,492:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,492:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,492:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,507:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,507:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,525:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,525:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,540:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,573:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,583:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,583:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,594:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,611:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,624:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,630:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,630:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,654:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,659:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,674:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,674:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,674:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,690:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,690:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,690:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,707:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,707:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,707:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,734:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,735:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,736:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,740:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,740:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-21 11:09:33,759:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'normal') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-21 11:09:33,823:INFO:Calculating mean and std
2025-08-21 11:09:33,823:INFO:Creating metrics dataframe
2025-08-21 11:09:33,825:INFO:Uploading results into container
2025-08-21 11:09:33,825:INFO:Uploading model into container now
2025-08-21 11:09:33,825:INFO:_master_model_container: 15
2025-08-21 11:09:33,825:INFO:_display_container: 2
2025-08-21 11:09:33,826:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-21 11:09:33,826:INFO:create_model() successfully completed......................................
2025-08-21 11:09:33,923:INFO:SubProcess create_model() end ==================================
2025-08-21 11:09:33,923:INFO:Creating metrics dataframe
2025-08-21 11:09:33,941:WARNING:c:\Users\DELL\anaconda3\envs\tf\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-21 11:09:33,941:INFO:Initializing create_model()
2025-08-21 11:09:33,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A355E561A0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-21 11:09:33,941:INFO:Checking exceptions
2025-08-21 11:09:33,941:INFO:Importing libraries
2025-08-21 11:09:33,941:INFO:Copying training dataset
2025-08-21 11:09:33,980:INFO:Defining folds
2025-08-21 11:09:33,980:INFO:Declaring metric variables
2025-08-21 11:09:33,980:INFO:Importing untrained model
2025-08-21 11:09:33,980:INFO:Declaring custom model
2025-08-21 11:09:33,981:INFO:Extra Trees Classifier Imported successfully
2025-08-21 11:09:33,981:INFO:Cross validation set to False
2025-08-21 11:09:33,981:INFO:Fitting Model
2025-08-21 11:09:34,324:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-21 11:09:34,324:INFO:create_model() successfully completed......................................
2025-08-21 11:09:34,440:INFO:_master_model_container: 15
2025-08-21 11:09:34,440:INFO:_display_container: 2
2025-08-21 11:09:34,440:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-21 11:09:34,440:INFO:compare_models() successfully completed......................................
